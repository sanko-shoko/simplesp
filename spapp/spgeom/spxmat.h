//--------------------------------------------------------------------------------
// Copyright (c) 2017-2018, sanko-shoko. All rights reserved.
//--------------------------------------------------------------------------------

#ifndef __SP_XMAT_H__
#define __SP_XMAT_H__

#include "spcore/spcore.h"

namespace sp{

    //--------------------------------------------------------------------------------
    // jacob
    //--------------------------------------------------------------------------------

    // s * (vec0_3) = (M_3x3) * (vec1_3) - > (J_2x9) * (M_9) = 0
    SP_GENFUNC void jacobMatType0(double *jacob, const double *vec0, const double *vec1){
        jacob[0 * 9 + 0] = +vec0[2] * vec1[0];
        jacob[0 * 9 + 1] = +vec0[2] * vec1[1];
        jacob[0 * 9 + 2] = +vec0[2] * vec1[2];
        jacob[0 * 9 + 3] = 0.0;
        jacob[0 * 9 + 4] = 0.0;
        jacob[0 * 9 + 5] = 0.0;
        jacob[0 * 9 + 6] = -vec0[0] * vec1[0];
        jacob[0 * 9 + 7] = -vec0[0] * vec1[1];
        jacob[0 * 9 + 8] = -vec0[0] * vec1[2];

        jacob[1 * 9 + 0] = 0.0;
        jacob[1 * 9 + 1] = 0.0;
        jacob[1 * 9 + 2] = 0.0;
        jacob[1 * 9 + 3] = +vec0[2] * vec1[0];
        jacob[1 * 9 + 4] = +vec0[2] * vec1[1];
        jacob[1 * 9 + 5] = +vec0[2] * vec1[2];
        jacob[1 * 9 + 6] = -vec0[1] * vec1[0];
        jacob[1 * 9 + 7] = -vec0[1] * vec1[1];
        jacob[1 * 9 + 8] = -vec0[1] * vec1[2];
    }

    // s * (vec0_3) = (M_3x4) * (vec1_3) - > (J_2x12) * (M_12) = 0
    SP_GENFUNC void jacobMatType1(double *jacob, const double *vec0, const double *vec1) {
        jacob[0 * 12 +  0] = +vec0[2] * vec1[0];
        jacob[0 * 12 +  1] = +vec0[2] * vec1[1];
        jacob[0 * 12 +  2] = +vec0[2] * vec1[2];
        jacob[0 * 12 +  3] = +vec0[2] * 1.0;
        jacob[0 * 12 +  4] = 0.0;
        jacob[0 * 12 +  5] = 0.0;
        jacob[0 * 12 +  6] = 0.0;
        jacob[0 * 12 +  7] = 0.0;
        jacob[0 * 12 +  8] = -vec0[0] * vec1[0];
        jacob[0 * 12 +  9] = -vec0[0] * vec1[1];
        jacob[0 * 12 + 10] = -vec0[0] * vec1[2];
        jacob[0 * 12 + 11] = -vec0[0] * 1.0;

        jacob[1 * 12 +  0] = 0.0;
        jacob[1 * 12 +  1] = 0.0;
        jacob[1 * 12 +  2] = 0.0;
        jacob[1 * 12 +  3] = 0.0;
        jacob[1 * 12 +  4] = +vec0[2] * vec1[0];
        jacob[1 * 12 +  5] = +vec0[2] * vec1[1];
        jacob[1 * 12 +  6] = +vec0[2] * vec1[2];
        jacob[1 * 12 +  7] = +vec0[2] * 1.0;
        jacob[1 * 12 +  8] = -vec0[1] * vec1[0];
        jacob[1 * 12 +  9] = -vec0[1] * vec1[1];
        jacob[1 * 12 + 10] = -vec0[1] * vec1[2];
        jacob[1 * 12 + 11] = -vec0[1] * 1.0;
    }

    // (vec1_3)^T * (M_3x3) * (vec0_3) = 0 -> (J_1x9) * (M_9) = 0
    SP_GENFUNC void jacobMatType2(double *jacob, const double *vec0, const double *vec1) {
        jacob[0] = vec0[0] * vec1[0];
        jacob[1] = vec0[1] * vec1[0];
        jacob[2] = vec0[2] * vec1[0];
        jacob[3] = vec0[0] * vec1[1];
        jacob[4] = vec0[1] * vec1[1];
        jacob[5] = vec0[2] * vec1[1];
        jacob[6] = vec0[0] * vec1[2];
        jacob[7] = vec0[1] * vec1[2];
        jacob[8] = vec0[2] * vec1[2];
    }

    SP_GENFUNC void jacobHMat(double *jacob, const double *pix, const double *obj) {
        double ppix[3] = { pix[0], pix[1], 1.0 };
        double pobj[3] = { obj[0], obj[1], 1.0 };
        jacobMatType0(jacob, ppix, pobj);
    }

    SP_GENFUNC void jacobHMat(double *jacob, const Vec2 &pix, const Vec2 &obj){
        double ppix[3] = { pix.x, pix.y, 1.0 };
        double pobj[3] = { obj.x, obj.y, 1.0 };
        jacobMatType0(jacob, ppix, pobj);
    }

    SP_GENFUNC void jacobPMat(double *jacob, const Vec2 &pix, const Vec3 &obj) {
        double ppix[3] = { pix.x, pix.y, 1.0 };
        double pobj[3] = { obj.x, obj.y, obj.z };
        jacobMatType1(jacob, ppix, pobj);
    }

    SP_GENFUNC void jacobEMat(double *jacob, const double *vec0, const double *vec1) {
        double pvec0[3] = { vec0[0], vec0[1], 1.0 };
        double pvec1[3] = { vec1[0], vec1[1], 1.0 };
        jacobMatType2(jacob, pvec0, pvec1);
    }

    SP_GENFUNC void jacobEMat(double *jacob, const Vec2 &vec0, const Vec2 &vec1) {
        double pvec0[3] = { vec0.x, vec0.y, 1.0 };
        double pvec1[3] = { vec1.x, vec1.y, 1.0 };
        jacobMatType2(jacob, pvec0, pvec1);
    }

    SP_GENFUNC void jacobFMat(double *jacob, const double *vec0, const double *vec1) {
        double pvec0[3] = { vec0[0], vec0[1], 1.0 };
        double pvec1[3] = { vec1[0], vec1[1], 1.0 };
        jacobMatType2(jacob, pvec0, pvec1);
    }

    SP_GENFUNC void jacobFMat(double *jacob, const Vec2 &vec0, const Vec2 &vec1){
        double pvec0[3] = { vec0.x, vec0.y, 1.0 };
        double pvec1[3] = { vec1.x, vec1.y, 1.0 };
        jacobMatType2(jacob, pvec0, pvec1);
    }


    //--------------------------------------------------------------------------------
    // homography
    //--------------------------------------------------------------------------------

    SP_CPUFUNC double errHMat(const Mat &H, const Vec2 &pix, const Vec2 &obj) {
        return normVec(pix - H * obj);
    }

    SP_CPUFUNC Mem1<double> errHMat(const Mat &H, const Mem<Vec2> &pixs, const Mem<Vec2> &objs) {
        SP_ASSERT(pixs.size() == objs.size());

        Mem1<double> errs(pixs.size());
        for (int i = 0; i < errs.size(); i++) {
            errs[i] = errHMat(H, pixs[i], objs[i]);
        }
        return errs;
    }

    // calc homography
    SP_CPUFUNC bool calcHMat(Mat &H, const Mem<Vec2> &pixs, const Mem<Vec2> &objs, const int maxit = 1){
        SP_ASSERT(pixs.size() == objs.size());

        const int unit = 4;
        if (pixs.size() < unit) return false;

        Mat T0, T1;
        Mem1<Vec2> data0, data1;
        if (normalize(T0, data0, pixs) == false) return false;
        if (normalize(T1, data1, objs) == false) return false;

        Mat A(pixs.size() * 2, 9);
        for (int i = 0; i < pixs.size(); i++){
            jacobHMat(&A(i * 2, 0), data0[i], data1[i]);
        }

        Mem1<double> errs;
        for (int it = 0; it < maxit; it++){
            if (H.rows() == 3 && H.cols() == 3) {
                errs = errHMat(H, pixs, objs);
            }
        
            Mat result;
            if (solveEqZero(result, A, errs) == false) return false;

            H = invMat(T0) * Mat(3, 3, result.ptr) * T1;

            const double norm = normMat(H);
            if (norm < SP_SMALL) return false;
            H /= norm;

            const Vec2 rx = getVec(H(0, 0), H(1, 0));
            const Vec2 ry = getVec(H(0, 1), H(1, 1));
            if (normVec(rx) < SP_SMALL || normVec(ry) < SP_SMALL) return false;
        }

        return true;
    }

 
    //--------------------------------------------------------------------------------
    // essential matrix & fundamental matrix
    //--------------------------------------------------------------------------------
    
    SP_CPUFUNC double errMatType2(const Mat &M, const Vec2 &vec0, const Vec2 &vec1) {
        const Vec3 n0 = getVec(vec0, 1.0);
        const Vec3 n1 = getVec(vec1, 1.0);

        const Vec3 M0 = M * n0;
        //const Vec3 M1 = trnMat(M) * n1;

        // |a*x + b*y + c| / sqrt(a*a + b*b)
        const double err0 = fabs(dotVec(n1, M0)) / maxVal(pythag(M0.x, M0.y), SP_SMALL);
        //const double err1 = fabs(dotVec(n0, M1)) / maxVal(pythag(M1.x, M1.y), SP_SMALL);
        return err0;
    }

    SP_CPUFUNC Mem1<double> errMatType2(const Mat &M, const Mem1<Vec2> &vecs0, const Mem1<Vec2> &vecs1) {
        SP_ASSERT(vecs0.size() == vecs1.size());

        Mem1<double> errs(vecs0.size());
        for (int i = 0; i < errs.size(); i++) {
            errs[i] = errMatType2(M, vecs0[i], vecs1[i]);
        }
        return errs;
    }

    SP_CPUFUNC Mat getEMat(const Pose &pose) {
        Mat E = skewMat(pose.trn) * getMat(pose.rot);
        E /= normMat(E);
        return E;
    }

    SP_CPUFUNC Mat getFMat(const Pose &pose, const CamParam &cam0, const CamParam &cam1) {
        Mat F = invMat(trnMat(getMat(cam1))) * getEMat(pose) * invMat(getMat(cam0));
        F /= normMat(F);
        return F;
    }


    //--------------------------------------------------------------------------------
    // essential matrix
    //--------------------------------------------------------------------------------

    SP_CPUFUNC double errEMat(const Mat &E, const Vec2 &vec0, const Vec2 &vec1) {
        return errMatType2(E, vec0, vec1);
    }

    SP_CPUFUNC Mem1<double> errEMat(const Mat &E, const Mem1<Vec2> &vecs0, const Mem1<Vec2> &vecs1) {
        return errMatType2(E, vecs0, vecs1);
    }

    // calc essential matrix using 5 points algorithm
    SP_CPUFUNC bool calcEMat5p(Mem1<Mat> &Es, const Mem1<Vec2> &npxs0, const Mem1<Vec2> &npxs1) {
        SP_ASSERT(npxs0.size() == npxs1.size());

        const int unit = 5;
        if (npxs0.size() < unit) return false;

        const int num = npxs0.size();

        Mat Q = zeroMat(num, 9);
        for (int i = 0; i < num; i++) {
            jacobEMat(&Q(i, 0), npxs0[i], npxs1[i]);
        }

        Mat EE;
        Mat X, Y, Z, W;
        {
            Mat U, S, V;
            if (svdMat(U, S, V, Q, false) == false) return false;

            EE = V.col(5, 9);

            X = EE.col(0);
            Y = EE.col(1);
            Z = EE.col(2);
            W = EE.col(3);
        }

        Mat A(10, 20);
        {
            const Mat EEt = trnMat(EE);

            double *e = EEt.ptr;

            double ep2[36], ep3[36];
            for (int i = 0; i < 36; i++) {
                ep2[i] = square(e[i]);
                ep3[i] = cubic(e[i]);
            }

            A(0, 0) = e[6] * e[1] * e[5] - e[6] * e[4] * e[2] + e[3] * e[7] * e[2] + e[0] * e[4] * e[8] - e[0] * e[5] * e[7] - e[3] * e[1] * e[8];
            A(0, 1) = -e[9] * e[14] * e[16] - e[12] * e[10] * e[17] + e[9] * e[13] * e[17] - e[15] * e[13] * e[11] + e[15] * e[10] * e[14] + e[12] * e[16] * e[11];
            A(0, 2) = e[6] * e[1] * e[14] + e[15] * e[1] * e[5] - e[0] * e[5] * e[16] - e[0] * e[14] * e[7] + e[0] * e[13] * e[8] - e[15] * e[4] * e[2] + e[12] * e[7] * e[2] + e[6] * e[10] * e[5] + e[3] * e[7] * e[11] - e[6] * e[4] * e[11] + e[3] * e[16] * e[2] - e[6] * e[13] * e[2] - e[3] * e[1] * e[17] - e[9] * e[5] * e[7] - e[3] * e[10] * e[8] - e[12] * e[1] * e[8] + e[0] * e[4] * e[17] + e[9] * e[4] * e[8];
            A(0, 3) = -e[15] * e[13] * e[2] - e[6] * e[13] * e[11] - e[15] * e[4] * e[11] + e[12] * e[16] * e[2] - e[3] * e[10] * e[17] + e[3] * e[16] * e[11] + e[0] * e[13] * e[17] - e[0] * e[14] * e[16] + e[15] * e[1] * e[14] - e[12] * e[10] * e[8] + e[9] * e[4] * e[17] + e[9] * e[13] * e[8] - e[9] * e[5] * e[16] - e[9] * e[14] * e[7] + e[15] * e[10] * e[5] + e[12] * e[7] * e[11] + e[6] * e[10] * e[14] - e[12] * e[1] * e[17];
            A(0, 4) = e[18] * e[4] * e[8] + e[3] * e[7] * e[20] + e[3] * e[25] * e[2] - e[3] * e[1] * e[26] - e[18] * e[5] * e[7] + e[6] * e[1] * e[23] + e[6] * e[19] * e[5] - e[6] * e[4] * e[20] - e[6] * e[22] * e[2] + e[21] * e[7] * e[2] - e[21] * e[1] * e[8] + e[24] * e[1] * e[5] - e[24] * e[4] * e[2] - e[3] * e[19] * e[8] + e[0] * e[4] * e[26] + e[0] * e[22] * e[8] - e[0] * e[5] * e[25] - e[0] * e[23] * e[7];
            A(0, 5) = -e[3] * e[1] * e[35] - e[0] * e[32] * e[7] + e[27] * e[4] * e[8] + e[33] * e[1] * e[5] - e[33] * e[4] * e[2] + e[0] * e[4] * e[35] + e[3] * e[34] * e[2] - e[30] * e[1] * e[8] + e[30] * e[7] * e[2] - e[6] * e[4] * e[29] + e[3] * e[7] * e[29] + e[6] * e[1] * e[32] - e[0] * e[5] * e[34] - e[3] * e[28] * e[8] + e[0] * e[31] * e[8] + e[6] * e[28] * e[5] - e[6] * e[31] * e[2] - e[27] * e[5] * e[7];
            A(0, 6) = e[18] * e[13] * e[17] + e[9] * e[13] * e[26] + e[9] * e[22] * e[17] - e[9] * e[14] * e[25] - e[18] * e[14] * e[16] - e[15] * e[13] * e[20] - e[15] * e[22] * e[11] + e[12] * e[16] * e[20] + e[12] * e[25] * e[11] - e[12] * e[10] * e[26] - e[12] * e[19] * e[17] + e[21] * e[16] * e[11] - e[21] * e[10] * e[17] - e[9] * e[23] * e[16] + e[24] * e[10] * e[14] - e[24] * e[13] * e[11] + e[15] * e[10] * e[23] + e[15] * e[19] * e[14];
            A(0, 7) = e[15] * e[28] * e[14] - e[15] * e[13] * e[29] - e[15] * e[31] * e[11] + e[33] * e[10] * e[14] - e[33] * e[13] * e[11] + e[9] * e[13] * e[35] - e[9] * e[32] * e[16] + e[9] * e[31] * e[17] - e[9] * e[14] * e[34] + e[27] * e[13] * e[17] - e[27] * e[14] * e[16] + e[12] * e[34] * e[11] + e[12] * e[16] * e[29] - e[12] * e[10] * e[35] - e[12] * e[28] * e[17] + e[30] * e[16] * e[11] - e[30] * e[10] * e[17] + e[15] * e[10] * e[32];
            A(0, 8) = -e[0] * e[23] * e[16] + e[9] * e[4] * e[26] + e[9] * e[22] * e[8] - e[9] * e[5] * e[25] - e[9] * e[23] * e[7] + e[18] * e[4] * e[17] + e[18] * e[13] * e[8] - e[18] * e[5] * e[16] - e[18] * e[14] * e[7] + e[3] * e[16] * e[20] + e[3] * e[25] * e[11] - e[3] * e[10] * e[26] - e[3] * e[19] * e[17] + e[12] * e[7] * e[20] + e[12] * e[25] * e[2] - e[12] * e[1] * e[26] - e[12] * e[19] * e[8] + e[21] * e[7] * e[11] + e[21] * e[16] * e[2] - e[21] * e[1] * e[17] - e[21] * e[10] * e[8] + e[6] * e[10] * e[23] + e[6] * e[19] * e[14] - e[6] * e[13] * e[20] - e[6] * e[22] * e[11] + e[15] * e[1] * e[23] + e[15] * e[19] * e[5] - e[15] * e[4] * e[20] - e[15] * e[22] * e[2] + e[24] * e[1] * e[14] + e[24] * e[10] * e[5] - e[24] * e[4] * e[11] - e[24] * e[13] * e[2] + e[0] * e[13] * e[26] + e[0] * e[22] * e[17] - e[0] * e[14] * e[25];
            A(0, 9) = -e[9] * e[5] * e[34] + e[9] * e[31] * e[8] - e[9] * e[32] * e[7] + e[27] * e[4] * e[17] + e[27] * e[13] * e[8] - e[27] * e[5] * e[16] - e[27] * e[14] * e[7] + e[0] * e[13] * e[35] - e[0] * e[32] * e[16] + e[0] * e[31] * e[17] - e[0] * e[14] * e[34] + e[9] * e[4] * e[35] + e[6] * e[10] * e[32] + e[6] * e[28] * e[14] - e[6] * e[13] * e[29] - e[6] * e[31] * e[11] + e[15] * e[1] * e[32] + e[3] * e[34] * e[11] + e[3] * e[16] * e[29] - e[3] * e[10] * e[35] - e[3] * e[28] * e[17] - e[12] * e[1] * e[35] + e[12] * e[7] * e[29] + e[12] * e[34] * e[2] - e[12] * e[28] * e[8] + e[15] * e[28] * e[5] - e[15] * e[4] * e[29] - e[15] * e[31] * e[2] + e[33] * e[1] * e[14] + e[33] * e[10] * e[5] - e[33] * e[4] * e[11] - e[33] * e[13] * e[2] + e[30] * e[7] * e[11] + e[30] * e[16] * e[2] - e[30] * e[1] * e[17] - e[30] * e[10] * e[8];
            A(0, 10) = -e[21] * e[19] * e[8] + e[18] * e[4] * e[26] - e[18] * e[5] * e[25] - e[18] * e[23] * e[7] + e[21] * e[25] * e[2] - e[21] * e[1] * e[26] + e[6] * e[19] * e[23] + e[18] * e[22] * e[8] - e[0] * e[23] * e[25] - e[6] * e[22] * e[20] + e[24] * e[1] * e[23] + e[24] * e[19] * e[5] - e[24] * e[4] * e[20] - e[24] * e[22] * e[2] + e[3] * e[25] * e[20] - e[3] * e[19] * e[26] + e[0] * e[22] * e[26] + e[21] * e[7] * e[20];
            A(0, 11) = e[6] * e[28] * e[23] - e[6] * e[22] * e[29] - e[6] * e[31] * e[20] - e[3] * e[19] * e[35] + e[3] * e[34] * e[20] + e[3] * e[25] * e[29] - e[21] * e[1] * e[35] + e[21] * e[7] * e[29] + e[21] * e[34] * e[2] + e[24] * e[1] * e[32] + e[24] * e[28] * e[5] - e[24] * e[4] * e[29] - e[24] * e[31] * e[2] + e[33] * e[1] * e[23] + e[33] * e[19] * e[5] - e[33] * e[4] * e[20] - e[33] * e[22] * e[2] - e[21] * e[28] * e[8] + e[30] * e[7] * e[20] + e[30] * e[25] * e[2] - e[30] * e[1] * e[26] + e[18] * e[4] * e[35] - e[18] * e[5] * e[34] + e[18] * e[31] * e[8] - e[18] * e[32] * e[7] + e[27] * e[4] * e[26] + e[27] * e[22] * e[8] - e[27] * e[5] * e[25] - e[27] * e[23] * e[7] - e[3] * e[28] * e[26] - e[0] * e[32] * e[25] + e[0] * e[22] * e[35] - e[0] * e[23] * e[34] + e[0] * e[31] * e[26] - e[30] * e[19] * e[8] + e[6] * e[19] * e[32];
            A(0, 12) = e[30] * e[34] * e[2] + e[33] * e[1] * e[32] - e[3] * e[28] * e[35] + e[0] * e[31] * e[35] + e[3] * e[34] * e[29] - e[30] * e[1] * e[35] + e[27] * e[31] * e[8] - e[27] * e[32] * e[7] - e[30] * e[28] * e[8] - e[33] * e[31] * e[2] - e[0] * e[32] * e[34] + e[6] * e[28] * e[32] - e[33] * e[4] * e[29] + e[33] * e[28] * e[5] + e[30] * e[7] * e[29] + e[27] * e[4] * e[35] - e[27] * e[5] * e[34] - e[6] * e[31] * e[29];
            A(0, 13) = -e[9] * e[23] * e[25] - e[21] * e[10] * e[26] - e[21] * e[19] * e[17] - e[18] * e[23] * e[16] + e[18] * e[13] * e[26] + e[12] * e[25] * e[20] - e[12] * e[19] * e[26] - e[15] * e[22] * e[20] + e[21] * e[16] * e[20] + e[21] * e[25] * e[11] + e[24] * e[10] * e[23] + e[24] * e[19] * e[14] - e[24] * e[13] * e[20] - e[24] * e[22] * e[11] + e[18] * e[22] * e[17] - e[18] * e[14] * e[25] + e[9] * e[22] * e[26] + e[15] * e[19] * e[23];
            A(0, 14) = e[18] * e[13] * e[35] - e[18] * e[32] * e[16] + e[18] * e[31] * e[17] - e[18] * e[14] * e[34] + e[27] * e[13] * e[26] + e[27] * e[22] * e[17] - e[27] * e[14] * e[25] - e[27] * e[23] * e[16] - e[9] * e[32] * e[25] + e[9] * e[22] * e[35] - e[9] * e[23] * e[34] + e[9] * e[31] * e[26] + e[15] * e[19] * e[32] + e[15] * e[28] * e[23] - e[15] * e[22] * e[29] - e[15] * e[31] * e[20] + e[24] * e[10] * e[32] + e[24] * e[28] * e[14] - e[24] * e[13] * e[29] - e[24] * e[31] * e[11] + e[33] * e[10] * e[23] + e[33] * e[19] * e[14] - e[33] * e[13] * e[20] - e[33] * e[22] * e[11] + e[21] * e[16] * e[29] - e[21] * e[10] * e[35] - e[21] * e[28] * e[17] + e[30] * e[16] * e[20] + e[30] * e[25] * e[11] - e[30] * e[10] * e[26] - e[30] * e[19] * e[17] - e[12] * e[28] * e[26] - e[12] * e[19] * e[35] + e[12] * e[34] * e[20] + e[12] * e[25] * e[29] + e[21] * e[34] * e[11];
            A(0, 15) = e[33] * e[10] * e[32] + e[33] * e[28] * e[14] - e[33] * e[13] * e[29] - e[33] * e[31] * e[11] + e[9] * e[31] * e[35] - e[9] * e[32] * e[34] + e[27] * e[13] * e[35] - e[27] * e[32] * e[16] + e[27] * e[31] * e[17] - e[27] * e[14] * e[34] + e[12] * e[34] * e[29] - e[12] * e[28] * e[35] + e[30] * e[34] * e[11] + e[30] * e[16] * e[29] - e[30] * e[10] * e[35] - e[30] * e[28] * e[17] + e[15] * e[28] * e[32] - e[15] * e[31] * e[29];
            A(0, 16) = e[21] * e[25] * e[20] - e[21] * e[19] * e[26] + e[18] * e[22] * e[26] - e[18] * e[23] * e[25] - e[24] * e[22] * e[20] + e[24] * e[19] * e[23];
            A(0, 17) = e[21] * e[25] * e[29] - e[27] * e[23] * e[25] + e[24] * e[19] * e[32] - e[21] * e[28] * e[26] - e[21] * e[19] * e[35] + e[18] * e[31] * e[26] - e[30] * e[19] * e[26] - e[24] * e[31] * e[20] + e[24] * e[28] * e[23] + e[27] * e[22] * e[26] + e[30] * e[25] * e[20] - e[33] * e[22] * e[20] + e[33] * e[19] * e[23] + e[21] * e[34] * e[20] - e[18] * e[23] * e[34] - e[24] * e[22] * e[29] - e[18] * e[32] * e[25] + e[18] * e[22] * e[35];
            A(0, 18) = -e[33] * e[22] * e[29] - e[33] * e[31] * e[20] - e[27] * e[32] * e[25] + e[27] * e[22] * e[35] - e[27] * e[23] * e[34] + e[27] * e[31] * e[26] + e[33] * e[28] * e[23] - e[21] * e[28] * e[35] + e[30] * e[25] * e[29] + e[24] * e[28] * e[32] - e[24] * e[31] * e[29] + e[18] * e[31] * e[35] - e[30] * e[28] * e[26] - e[30] * e[19] * e[35] + e[21] * e[34] * e[29] + e[33] * e[19] * e[32] - e[18] * e[32] * e[34] + e[30] * e[34] * e[20];
            A(0, 19) = e[33] * e[28] * e[32] - e[33] * e[31] * e[29] + e[30] * e[34] * e[29] - e[30] * e[28] * e[35] - e[27] * e[32] * e[34] + e[27] * e[31] * e[35];
            A(1, 0) = 0.5*e[0] * ep2[1] + 0.5*e[0] * ep2[2] + e[6] * e[2] * e[8] + e[6] * e[1] * e[7] + 0.5*e[0] * ep2[3] + e[3] * e[1] * e[4] + 0.5*e[0] * ep2[6] + e[3] * e[2] * e[5] - 0.5*e[0] * ep2[5] - 0.5*e[0] * ep2[8] + 0.5*ep3[0] - 0.5*e[0] * ep2[7] - 0.5*e[0] * ep2[4];
            A(1, 1) = 0.5*e[9] * ep2[12] - 0.5*e[9] * ep2[16] + 0.5*e[9] * ep2[10] - 0.5*e[9] * ep2[17] - 0.5*e[9] * ep2[13] + e[15] * e[10] * e[16] + e[12] * e[11] * e[14] + 0.5*e[9] * ep2[11] + 0.5*e[9] * ep2[15] - 0.5*e[9] * ep2[14] + e[15] * e[11] * e[17] + 0.5*ep3[9] + e[12] * e[10] * e[13];
            A(1, 2) = 0.5*e[9] * ep2[1] + 1.5*e[9] * ep2[0] + 0.5*e[9] * ep2[2] + 0.5*e[9] * ep2[3] + 0.5*e[9] * ep2[6] - 0.5*e[9] * ep2[4] - 0.5*e[9] * ep2[5] - 0.5*e[9] * ep2[7] - 0.5*e[9] * ep2[8] + e[6] * e[0] * e[15] + e[6] * e[10] * e[7] + e[6] * e[1] * e[16] + e[6] * e[11] * e[8] + e[6] * e[2] * e[17] + e[15] * e[1] * e[7] + e[15] * e[2] * e[8] + e[0] * e[11] * e[2] + e[0] * e[10] * e[1] - e[0] * e[13] * e[4] - e[0] * e[16] * e[7] - e[0] * e[14] * e[5] - e[0] * e[17] * e[8] + e[3] * e[0] * e[12] + e[3] * e[10] * e[4] + e[3] * e[1] * e[13] + e[3] * e[11] * e[5] + e[3] * e[2] * e[14] + e[12] * e[1] * e[4] + e[12] * e[2] * e[5];
            A(1, 3) = 0.5*e[0] * ep2[12] + 0.5*e[0] * ep2[15] + 0.5*e[0] * ep2[11] + 1.5*e[0] * ep2[9] + 0.5*e[0] * ep2[10] - 0.5*e[0] * ep2[16] - 0.5*e[0] * ep2[17] - 0.5*e[0] * ep2[14] - 0.5*e[0] * ep2[13] + e[12] * e[9] * e[3] + e[12] * e[10] * e[4] + e[12] * e[1] * e[13] + e[12] * e[11] * e[5] + e[12] * e[2] * e[14] + e[15] * e[9] * e[6] + e[15] * e[10] * e[7] + e[15] * e[1] * e[16] + e[15] * e[11] * e[8] + e[15] * e[2] * e[17] + e[6] * e[11] * e[17] + e[6] * e[10] * e[16] + e[3] * e[11] * e[14] + e[3] * e[10] * e[13] + e[9] * e[10] * e[1] + e[9] * e[11] * e[2] - e[9] * e[13] * e[4] - e[9] * e[16] * e[7] - e[9] * e[14] * e[5] - e[9] * e[17] * e[8];
            A(1, 4) = -0.5*e[18] * ep2[4] + 1.5*e[18] * ep2[0] + 0.5*e[18] * ep2[6] - 0.5*e[18] * ep2[5] + 0.5*e[18] * ep2[1] - 0.5*e[18] * ep2[7] + 0.5*e[18] * ep2[3] + 0.5*e[18] * ep2[2] - 0.5*e[18] * ep2[8] + e[3] * e[0] * e[21] + e[3] * e[19] * e[4] + e[3] * e[1] * e[22] + e[3] * e[20] * e[5] + e[3] * e[2] * e[23] + e[21] * e[1] * e[4] + e[21] * e[2] * e[5] + e[6] * e[0] * e[24] + e[6] * e[19] * e[7] + e[6] * e[1] * e[25] + e[6] * e[20] * e[8] + e[6] * e[2] * e[26] + e[24] * e[1] * e[7] + e[24] * e[2] * e[8] + e[0] * e[19] * e[1] + e[0] * e[20] * e[2] - e[0] * e[26] * e[8] - e[0] * e[22] * e[4] - e[0] * e[25] * e[7] - e[0] * e[23] * e[5];
            A(1, 5) = 1.5*e[27] * ep2[0] - 0.5*e[27] * ep2[4] + 0.5*e[27] * ep2[6] - 0.5*e[27] * ep2[5] + 0.5*e[27] * ep2[1] - 0.5*e[27] * ep2[7] + 0.5*e[27] * ep2[3] + 0.5*e[27] * ep2[2] - 0.5*e[27] * ep2[8] + e[0] * e[33] * e[6] + e[0] * e[30] * e[3] - e[0] * e[35] * e[8] - e[0] * e[31] * e[4] + e[3] * e[28] * e[4] + e[3] * e[1] * e[31] + e[3] * e[29] * e[5] + e[3] * e[2] * e[32] + e[30] * e[1] * e[4] + e[30] * e[2] * e[5] + e[6] * e[28] * e[7] + e[6] * e[1] * e[34] + e[6] * e[29] * e[8] + e[6] * e[2] * e[35] + e[33] * e[1] * e[7] + e[33] * e[2] * e[8] + e[0] * e[28] * e[1] + e[0] * e[29] * e[2] - e[0] * e[34] * e[7] - e[0] * e[32] * e[5];
            A(1, 6) = 0.5*e[18] * ep2[11] + 1.5*e[18] * ep2[9] + 0.5*e[18] * ep2[10] + 0.5*e[18] * ep2[12] + 0.5*e[18] * ep2[15] - 0.5*e[18] * ep2[16] - 0.5*e[18] * ep2[17] - 0.5*e[18] * ep2[14] - 0.5*e[18] * ep2[13] + e[12] * e[9] * e[21] + e[12] * e[20] * e[14] + e[12] * e[11] * e[23] + e[12] * e[19] * e[13] + e[12] * e[10] * e[22] + e[21] * e[11] * e[14] + e[21] * e[10] * e[13] + e[15] * e[9] * e[24] + e[15] * e[20] * e[17] + e[15] * e[11] * e[26] + e[15] * e[19] * e[16] + e[15] * e[10] * e[25] + e[24] * e[11] * e[17] + e[24] * e[10] * e[16] - e[9] * e[23] * e[14] - e[9] * e[25] * e[16] - e[9] * e[26] * e[17] + e[9] * e[20] * e[11] + e[9] * e[19] * e[10] - e[9] * e[22] * e[13];
            A(1, 7) = 1.5*e[27] * ep2[9] - 0.5*e[27] * ep2[16] + 0.5*e[27] * ep2[11] + 0.5*e[27] * ep2[12] + 0.5*e[27] * ep2[15] - 0.5*e[27] * ep2[17] + 0.5*e[27] * ep2[10] - 0.5*e[27] * ep2[14] - 0.5*e[27] * ep2[13] + e[12] * e[10] * e[31] + e[30] * e[11] * e[14] + e[30] * e[10] * e[13] + e[15] * e[9] * e[33] + e[15] * e[29] * e[17] + e[15] * e[11] * e[35] + e[15] * e[28] * e[16] + e[15] * e[10] * e[34] + e[33] * e[11] * e[17] + e[33] * e[10] * e[16] - e[9] * e[31] * e[13] - e[9] * e[32] * e[14] - e[9] * e[34] * e[16] - e[9] * e[35] * e[17] + e[9] * e[29] * e[11] + e[9] * e[28] * e[10] + e[12] * e[9] * e[30] + e[12] * e[29] * e[14] + e[12] * e[11] * e[32] + e[12] * e[28] * e[13];
            A(1, 8) = e[24] * e[11] * e[8] + e[24] * e[2] * e[17] + 3.*e[9] * e[18] * e[0] + e[9] * e[19] * e[1] + e[9] * e[20] * e[2] + e[18] * e[10] * e[1] + e[18] * e[11] * e[2] + e[3] * e[18] * e[12] + e[3] * e[9] * e[21] + e[3] * e[20] * e[14] + e[3] * e[11] * e[23] + e[3] * e[19] * e[13] + e[3] * e[10] * e[22] + e[6] * e[18] * e[15] + e[6] * e[9] * e[24] + e[6] * e[20] * e[17] + e[6] * e[11] * e[26] + e[6] * e[19] * e[16] + e[6] * e[10] * e[25] + e[0] * e[20] * e[11] + e[0] * e[19] * e[10] - e[9] * e[26] * e[8] - e[9] * e[22] * e[4] - e[9] * e[25] * e[7] - e[9] * e[23] * e[5] + e[12] * e[0] * e[21] + e[12] * e[19] * e[4] + e[12] * e[1] * e[22] + e[12] * e[20] * e[5] + e[12] * e[2] * e[23] - e[18] * e[13] * e[4] - e[18] * e[16] * e[7] - e[18] * e[14] * e[5] - e[18] * e[17] * e[8] + e[21] * e[10] * e[4] + e[21] * e[1] * e[13] + e[21] * e[11] * e[5] + e[21] * e[2] * e[14] + e[15] * e[0] * e[24] + e[15] * e[19] * e[7] + e[15] * e[1] * e[25] + e[15] * e[20] * e[8] + e[15] * e[2] * e[26] - e[0] * e[23] * e[14] - e[0] * e[25] * e[16] - e[0] * e[26] * e[17] - e[0] * e[22] * e[13] + e[24] * e[10] * e[7] + e[24] * e[1] * e[16];
            A(1, 9) = e[3] * e[27] * e[12] + e[3] * e[9] * e[30] + e[3] * e[29] * e[14] + e[3] * e[11] * e[32] + e[3] * e[28] * e[13] + e[3] * e[10] * e[31] + e[6] * e[27] * e[15] + e[6] * e[9] * e[33] + e[6] * e[29] * e[17] + e[6] * e[11] * e[35] + e[6] * e[28] * e[16] + e[6] * e[10] * e[34] + 3.*e[0] * e[27] * e[9] + e[0] * e[29] * e[11] + e[0] * e[28] * e[10] - e[9] * e[34] * e[7] - e[9] * e[32] * e[5] - e[9] * e[35] * e[8] + e[9] * e[29] * e[2] + e[9] * e[28] * e[1] - e[9] * e[31] * e[4] + e[12] * e[0] * e[30] + e[12] * e[28] * e[4] + e[12] * e[1] * e[31] + e[12] * e[29] * e[5] + e[12] * e[2] * e[32] + e[27] * e[11] * e[2] + e[27] * e[10] * e[1] - e[27] * e[13] * e[4] - e[27] * e[16] * e[7] - e[27] * e[14] * e[5] - e[27] * e[17] * e[8] + e[30] * e[10] * e[4] + e[30] * e[1] * e[13] + e[30] * e[11] * e[5] + e[30] * e[2] * e[14] + e[15] * e[0] * e[33] + e[15] * e[28] * e[7] + e[15] * e[1] * e[34] + e[15] * e[29] * e[8] + e[15] * e[2] * e[35] - e[0] * e[31] * e[13] - e[0] * e[32] * e[14] - e[0] * e[34] * e[16] - e[0] * e[35] * e[17] + e[33] * e[10] * e[7] + e[33] * e[1] * e[16] + e[33] * e[11] * e[8] + e[33] * e[2] * e[17];
            A(1, 10) = 0.5*e[0] * ep2[19] + 0.5*e[0] * ep2[20] + 0.5*e[0] * ep2[24] - 0.5*e[0] * ep2[26] - 0.5*e[0] * ep2[23] - 0.5*e[0] * ep2[22] - 0.5*e[0] * ep2[25] + 1.5*ep2[18] * e[0] + 0.5*e[0] * ep2[21] + e[18] * e[19] * e[1] + e[18] * e[20] * e[2] + e[21] * e[18] * e[3] + e[21] * e[19] * e[4] + e[21] * e[1] * e[22] + e[21] * e[20] * e[5] + e[21] * e[2] * e[23] - e[18] * e[26] * e[8] - e[18] * e[22] * e[4] - e[18] * e[25] * e[7] - e[18] * e[23] * e[5] + e[18] * e[24] * e[6] + e[3] * e[19] * e[22] + e[3] * e[20] * e[23] + e[24] * e[19] * e[7] + e[24] * e[1] * e[25] + e[24] * e[20] * e[8] + e[24] * e[2] * e[26] + e[6] * e[19] * e[25] + e[6] * e[20] * e[26];
            A(1, 11) = e[0] * e[30] * e[21] - e[0] * e[35] * e[26] - e[0] * e[31] * e[22] - e[0] * e[32] * e[23] - e[0] * e[34] * e[25] - e[18] * e[34] * e[7] - e[18] * e[32] * e[5] - e[18] * e[35] * e[8] - e[18] * e[31] * e[4] - e[27] * e[26] * e[8] - e[27] * e[22] * e[4] - e[27] * e[25] * e[7] - e[27] * e[23] * e[5] + e[6] * e[28] * e[25] + e[6] * e[19] * e[34] + e[6] * e[29] * e[26] + e[6] * e[20] * e[35] + e[21] * e[28] * e[4] + e[21] * e[1] * e[31] + e[21] * e[29] * e[5] + e[21] * e[2] * e[32] + e[30] * e[19] * e[4] + e[30] * e[1] * e[22] + e[30] * e[20] * e[5] + e[30] * e[2] * e[23] + e[24] * e[27] * e[6] + e[24] * e[0] * e[33] + e[24] * e[28] * e[7] + e[24] * e[1] * e[34] + e[24] * e[29] * e[8] + e[24] * e[2] * e[35] + e[33] * e[18] * e[6] + e[33] * e[19] * e[7] + e[33] * e[1] * e[25] + e[33] * e[20] * e[8] + e[33] * e[2] * e[26] + 3.*e[0] * e[27] * e[18] + e[0] * e[28] * e[19] + e[0] * e[29] * e[20] + e[18] * e[28] * e[1] + e[18] * e[29] * e[2] + e[27] * e[19] * e[1] + e[27] * e[20] * e[2] + e[3] * e[27] * e[21] + e[3] * e[18] * e[30] + e[3] * e[28] * e[22] + e[3] * e[19] * e[31] + e[3] * e[29] * e[23] + e[3] * e[20] * e[32];
            A(1, 12) = 1.5*e[0] * ep2[27] + 0.5*e[0] * ep2[29] + 0.5*e[0] * ep2[28] + 0.5*e[0] * ep2[30] - 0.5*e[0] * ep2[32] - 0.5*e[0] * ep2[31] + 0.5*e[0] * ep2[33] - 0.5*e[0] * ep2[34] - 0.5*e[0] * ep2[35] - e[27] * e[31] * e[4] + e[3] * e[27] * e[30] + e[3] * e[29] * e[32] + e[3] * e[28] * e[31] + e[30] * e[28] * e[4] + e[30] * e[1] * e[31] + e[30] * e[29] * e[5] + e[30] * e[2] * e[32] + e[6] * e[27] * e[33] + e[6] * e[29] * e[35] + e[6] * e[28] * e[34] + e[27] * e[28] * e[1] + e[27] * e[29] * e[2] + e[33] * e[28] * e[7] + e[33] * e[1] * e[34] + e[33] * e[29] * e[8] + e[33] * e[2] * e[35] - e[27] * e[34] * e[7] - e[27] * e[32] * e[5] - e[27] * e[35] * e[8];
            A(1, 13) = 0.5*e[9] * ep2[21] + 0.5*e[9] * ep2[24] + 0.5*e[9] * ep2[19] + 1.5*e[9] * ep2[18] + 0.5*e[9] * ep2[20] - 0.5*e[9] * ep2[26] - 0.5*e[9] * ep2[23] - 0.5*e[9] * ep2[22] - 0.5*e[9] * ep2[25] + e[21] * e[18] * e[12] + e[21] * e[20] * e[14] + e[21] * e[11] * e[23] + e[21] * e[19] * e[13] + e[21] * e[10] * e[22] + e[24] * e[18] * e[15] + e[24] * e[20] * e[17] + e[24] * e[11] * e[26] + e[24] * e[19] * e[16] + e[24] * e[10] * e[25] + e[15] * e[19] * e[25] + e[15] * e[20] * e[26] + e[12] * e[19] * e[22] + e[12] * e[20] * e[23] + e[18] * e[20] * e[11] + e[18] * e[19] * e[10] - e[18] * e[23] * e[14] - e[18] * e[25] * e[16] - e[18] * e[26] * e[17] - e[18] * e[22] * e[13];
            A(1, 14) = e[12] * e[19] * e[31] + e[12] * e[29] * e[23] + e[12] * e[20] * e[32] + 3.*e[9] * e[27] * e[18] + e[9] * e[28] * e[19] + e[9] * e[29] * e[20] + e[21] * e[9] * e[30] + e[21] * e[29] * e[14] + e[21] * e[11] * e[32] + e[21] * e[28] * e[13] + e[21] * e[10] * e[31] + e[30] * e[20] * e[14] + e[30] * e[11] * e[23] + e[30] * e[19] * e[13] + e[30] * e[10] * e[22] + e[9] * e[33] * e[24] - e[9] * e[35] * e[26] - e[9] * e[31] * e[22] - e[9] * e[32] * e[23] - e[9] * e[34] * e[25] + e[18] * e[29] * e[11] + e[18] * e[28] * e[10] + e[27] * e[20] * e[11] + e[27] * e[19] * e[10] + e[15] * e[27] * e[24] + e[15] * e[18] * e[33] + e[15] * e[28] * e[25] + e[15] * e[19] * e[34] + e[15] * e[29] * e[26] + e[15] * e[20] * e[35] - e[18] * e[31] * e[13] - e[18] * e[32] * e[14] - e[18] * e[34] * e[16] - e[18] * e[35] * e[17] - e[27] * e[23] * e[14] - e[27] * e[25] * e[16] - e[27] * e[26] * e[17] - e[27] * e[22] * e[13] + e[24] * e[29] * e[17] + e[24] * e[11] * e[35] + e[24] * e[28] * e[16] + e[24] * e[10] * e[34] + e[33] * e[20] * e[17] + e[33] * e[11] * e[26] + e[33] * e[19] * e[16] + e[33] * e[10] * e[25] + e[12] * e[27] * e[21] + e[12] * e[18] * e[30] + e[12] * e[28] * e[22];
            A(1, 15) = 1.5*e[9] * ep2[27] + 0.5*e[9] * ep2[29] + 0.5*e[9] * ep2[28] - 0.5*e[9] * ep2[32] - 0.5*e[9] * ep2[31] + 0.5*e[9] * ep2[33] + 0.5*e[9] * ep2[30] - 0.5*e[9] * ep2[34] - 0.5*e[9] * ep2[35] + e[33] * e[27] * e[15] + e[33] * e[29] * e[17] + e[33] * e[11] * e[35] + e[33] * e[28] * e[16] + e[33] * e[10] * e[34] + e[27] * e[29] * e[11] + e[27] * e[28] * e[10] + e[27] * e[30] * e[12] - e[27] * e[31] * e[13] - e[27] * e[32] * e[14] - e[27] * e[34] * e[16] - e[27] * e[35] * e[17] + e[30] * e[29] * e[14] + e[30] * e[11] * e[32] + e[30] * e[28] * e[13] + e[30] * e[10] * e[31] + e[12] * e[29] * e[32] + e[12] * e[28] * e[31] + e[15] * e[29] * e[35] + e[15] * e[28] * e[34];
            A(1, 16) = e[24] * e[20] * e[26] + e[21] * e[19] * e[22] - 0.5*e[18] * ep2[22] - 0.5*e[18] * ep2[25] + 0.5*ep3[18] + 0.5*e[18] * ep2[21] + e[21] * e[20] * e[23] + 0.5*e[18] * ep2[20] + 0.5*e[18] * ep2[19] + 0.5*e[18] * ep2[24] + e[24] * e[19] * e[25] - 0.5*e[18] * ep2[23] - 0.5*e[18] * ep2[26];
            A(1, 17) = 1.5*e[27] * ep2[18] + 0.5*e[27] * ep2[19] + 0.5*e[27] * ep2[20] + 0.5*e[27] * ep2[21] + 0.5*e[27] * ep2[24] - 0.5*e[27] * ep2[26] - 0.5*e[27] * ep2[23] - 0.5*e[27] * ep2[22] - 0.5*e[27] * ep2[25] + e[33] * e[20] * e[26] - e[18] * e[35] * e[26] - e[18] * e[31] * e[22] - e[18] * e[32] * e[23] - e[18] * e[34] * e[25] + e[18] * e[28] * e[19] + e[18] * e[29] * e[20] + e[21] * e[18] * e[30] + e[21] * e[28] * e[22] + e[21] * e[19] * e[31] + e[21] * e[29] * e[23] + e[21] * e[20] * e[32] + e[30] * e[19] * e[22] + e[30] * e[20] * e[23] + e[24] * e[18] * e[33] + e[24] * e[28] * e[25] + e[24] * e[19] * e[34] + e[24] * e[29] * e[26] + e[24] * e[20] * e[35] + e[33] * e[19] * e[25];
            A(1, 18) = 0.5*e[18] * ep2[29] + 0.5*e[18] * ep2[28] + 0.5*e[18] * ep2[30] + 0.5*e[18] * ep2[33] - 0.5*e[18] * ep2[32] - 0.5*e[18] * ep2[31] - 0.5*e[18] * ep2[34] - 0.5*e[18] * ep2[35] + 1.5*e[18] * ep2[27] + e[27] * e[28] * e[19] + e[27] * e[29] * e[20] + e[21] * e[27] * e[30] + e[21] * e[29] * e[32] + e[21] * e[28] * e[31] + e[30] * e[28] * e[22] + e[30] * e[19] * e[31] + e[30] * e[29] * e[23] + e[30] * e[20] * e[32] + e[24] * e[27] * e[33] + e[24] * e[29] * e[35] + e[24] * e[28] * e[34] + e[33] * e[28] * e[25] + e[33] * e[19] * e[34] + e[33] * e[29] * e[26] + e[33] * e[20] * e[35] - e[27] * e[35] * e[26] - e[27] * e[31] * e[22] - e[27] * e[32] * e[23] - e[27] * e[34] * e[25];
            A(1, 19) = 0.5*e[27] * ep2[33] - 0.5*e[27] * ep2[32] - 0.5*e[27] * ep2[31] - 0.5*e[27] * ep2[34] - 0.5*e[27] * ep2[35] + e[33] * e[29] * e[35] + 0.5*e[27] * ep2[29] + e[30] * e[29] * e[32] + e[30] * e[28] * e[31] + e[33] * e[28] * e[34] + 0.5*e[27] * ep2[28] + 0.5*e[27] * ep2[30] + 0.5*ep3[27];
            A(2, 0) = e[4] * e[2] * e[5] + 0.5*e[1] * ep2[0] - 0.5*e[1] * ep2[6] + e[7] * e[0] * e[6] + 0.5*e[1] * ep2[7] + 0.5*e[1] * ep2[4] - 0.5*e[1] * ep2[8] + 0.5*e[1] * ep2[2] - 0.5*e[1] * ep2[3] + 0.5*ep3[1] + e[7] * e[2] * e[8] - 0.5*e[1] * ep2[5] + e[4] * e[0] * e[3];
            A(2, 1) = -0.5*e[10] * ep2[14] - 0.5*e[10] * ep2[17] - 0.5*e[10] * ep2[15] + e[13] * e[11] * e[14] + e[16] * e[11] * e[17] + 0.5*e[10] * ep2[13] + e[13] * e[9] * e[12] - 0.5*e[10] * ep2[12] + 0.5*ep3[10] + e[16] * e[9] * e[15] + 0.5*e[10] * ep2[16] + 0.5*e[10] * ep2[11] + 0.5*e[10] * ep2[9];
            A(2, 2) = e[16] * e[0] * e[6] + e[16] * e[2] * e[8] + e[1] * e[11] * e[2] - e[1] * e[15] * e[6] + e[1] * e[9] * e[0] - e[1] * e[14] * e[5] - e[1] * e[12] * e[3] - e[1] * e[17] * e[8] + e[4] * e[9] * e[3] + e[4] * e[0] * e[12] + e[4] * e[1] * e[13] + e[4] * e[11] * e[5] + e[4] * e[2] * e[14] + e[13] * e[0] * e[3] + e[13] * e[2] * e[5] + e[7] * e[9] * e[6] + e[7] * e[0] * e[15] + e[7] * e[1] * e[16] + e[7] * e[11] * e[8] + e[7] * e[2] * e[17] - 0.5*e[10] * ep2[6] - 0.5*e[10] * ep2[5] - 0.5*e[10] * ep2[3] - 0.5*e[10] * ep2[8] + 1.5*e[10] * ep2[1] + 0.5*e[10] * ep2[0] + 0.5*e[10] * ep2[2] + 0.5*e[10] * ep2[4] + 0.5*e[10] * ep2[7];
            A(2, 3) = e[13] * e[9] * e[3] + e[13] * e[0] * e[12] + e[13] * e[10] * e[4] + e[13] * e[11] * e[5] + e[13] * e[2] * e[14] + e[16] * e[9] * e[6] + e[16] * e[0] * e[15] + e[16] * e[10] * e[7] + e[16] * e[11] * e[8] + e[16] * e[2] * e[17] + e[7] * e[11] * e[17] + e[7] * e[9] * e[15] + e[4] * e[11] * e[14] + e[4] * e[9] * e[12] + e[10] * e[9] * e[0] + e[10] * e[11] * e[2] - e[10] * e[15] * e[6] - e[10] * e[14] * e[5] - e[10] * e[12] * e[3] - e[10] * e[17] * e[8] + 0.5*e[1] * ep2[11] + 0.5*e[1] * ep2[9] + 1.5*e[1] * ep2[10] - 0.5*e[1] * ep2[12] - 0.5*e[1] * ep2[15] - 0.5*e[1] * ep2[17] - 0.5*e[1] * ep2[14] + 0.5*e[1] * ep2[13] + 0.5*e[1] * ep2[16];
            A(2, 4) = e[4] * e[18] * e[3] + e[4] * e[0] * e[21] + e[4] * e[1] * e[22] + e[4] * e[20] * e[5] + e[4] * e[2] * e[23] + e[22] * e[0] * e[3] + e[22] * e[2] * e[5] + e[7] * e[18] * e[6] + e[7] * e[0] * e[24] + e[7] * e[1] * e[25] + e[7] * e[20] * e[8] + e[7] * e[2] * e[26] + e[25] * e[0] * e[6] + e[25] * e[2] * e[8] + e[1] * e[18] * e[0] + e[1] * e[20] * e[2] - e[1] * e[21] * e[3] - e[1] * e[26] * e[8] - e[1] * e[23] * e[5] - e[1] * e[24] * e[6] + 0.5*e[19] * ep2[4] + 0.5*e[19] * ep2[0] - 0.5*e[19] * ep2[6] - 0.5*e[19] * ep2[5] + 1.5*e[19] * ep2[1] + 0.5*e[19] * ep2[7] - 0.5*e[19] * ep2[3] + 0.5*e[19] * ep2[2] - 0.5*e[19] * ep2[8];
            A(2, 5) = e[4] * e[27] * e[3] + e[4] * e[0] * e[30] + e[4] * e[29] * e[5] + e[4] * e[2] * e[32] + e[31] * e[0] * e[3] + e[31] * e[2] * e[5] + e[7] * e[27] * e[6] + e[7] * e[0] * e[33] + e[7] * e[29] * e[8] + e[7] * e[2] * e[35] + e[34] * e[0] * e[6] + e[34] * e[2] * e[8] + e[1] * e[27] * e[0] + e[1] * e[29] * e[2] + e[1] * e[34] * e[7] - e[1] * e[32] * e[5] - e[1] * e[33] * e[6] - e[1] * e[30] * e[3] - e[1] * e[35] * e[8] + e[1] * e[31] * e[4] + 1.5*e[28] * ep2[1] + 0.5*e[28] * ep2[4] + 0.5*e[28] * ep2[0] - 0.5*e[28] * ep2[6] - 0.5*e[28] * ep2[5] + 0.5*e[28] * ep2[7] - 0.5*e[28] * ep2[3] + 0.5*e[28] * ep2[2] - 0.5*e[28] * ep2[8];
            A(2, 6) = e[13] * e[18] * e[12] + e[13] * e[9] * e[21] + e[13] * e[20] * e[14] + e[13] * e[11] * e[23] + e[13] * e[10] * e[22] + e[22] * e[11] * e[14] + e[22] * e[9] * e[12] + e[16] * e[18] * e[15] + e[16] * e[9] * e[24] + e[16] * e[20] * e[17] + e[16] * e[11] * e[26] + e[16] * e[10] * e[25] + e[25] * e[11] * e[17] + e[25] * e[9] * e[15] - e[10] * e[23] * e[14] - e[10] * e[24] * e[15] - e[10] * e[26] * e[17] + e[10] * e[20] * e[11] + e[10] * e[18] * e[9] - e[10] * e[21] * e[12] + 0.5*e[19] * ep2[11] + 0.5*e[19] * ep2[9] + 1.5*e[19] * ep2[10] + 0.5*e[19] * ep2[13] + 0.5*e[19] * ep2[16] - 0.5*e[19] * ep2[12] - 0.5*e[19] * ep2[15] - 0.5*e[19] * ep2[17] - 0.5*e[19] * ep2[14];
            A(2, 7) = e[16] * e[9] * e[33] + e[16] * e[29] * e[17] + e[16] * e[11] * e[35] + e[16] * e[10] * e[34] + e[34] * e[11] * e[17] + e[34] * e[9] * e[15] - e[10] * e[30] * e[12] - e[10] * e[32] * e[14] - e[10] * e[33] * e[15] - e[10] * e[35] * e[17] + e[10] * e[27] * e[9] + e[10] * e[29] * e[11] + e[13] * e[27] * e[12] + e[13] * e[9] * e[30] + e[13] * e[29] * e[14] + e[13] * e[11] * e[32] + e[13] * e[10] * e[31] + e[31] * e[11] * e[14] + e[31] * e[9] * e[12] + e[16] * e[27] * e[15] + 1.5*e[28] * ep2[10] + 0.5*e[28] * ep2[16] + 0.5*e[28] * ep2[9] + 0.5*e[28] * ep2[11] - 0.5*e[28] * ep2[12] - 0.5*e[28] * ep2[15] - 0.5*e[28] * ep2[17] - 0.5*e[28] * ep2[14] + 0.5*e[28] * ep2[13];
            A(2, 8) = e[19] * e[11] * e[2] + e[4] * e[18] * e[12] + e[4] * e[9] * e[21] + e[4] * e[20] * e[14] + e[4] * e[11] * e[23] + e[4] * e[19] * e[13] + e[4] * e[10] * e[22] + e[7] * e[18] * e[15] + e[7] * e[9] * e[24] + e[7] * e[20] * e[17] + e[7] * e[11] * e[26] + e[7] * e[19] * e[16] + e[7] * e[10] * e[25] + e[1] * e[18] * e[9] + e[1] * e[20] * e[11] - e[10] * e[21] * e[3] - e[10] * e[26] * e[8] - e[10] * e[23] * e[5] - e[10] * e[24] * e[6] + e[13] * e[18] * e[3] + e[13] * e[0] * e[21] + e[13] * e[1] * e[22] + e[13] * e[20] * e[5] + e[13] * e[2] * e[23] - e[19] * e[15] * e[6] - e[19] * e[14] * e[5] - e[19] * e[12] * e[3] - e[19] * e[17] * e[8] + e[22] * e[9] * e[3] + e[22] * e[0] * e[12] + e[22] * e[11] * e[5] + e[22] * e[2] * e[14] + e[16] * e[18] * e[6] + e[16] * e[0] * e[24] + e[16] * e[1] * e[25] + e[16] * e[20] * e[8] + e[16] * e[2] * e[26] - e[1] * e[23] * e[14] - e[1] * e[24] * e[15] - e[1] * e[26] * e[17] - e[1] * e[21] * e[12] + e[25] * e[9] * e[6] + e[25] * e[0] * e[15] + e[25] * e[11] * e[8] + e[25] * e[2] * e[17] + e[10] * e[18] * e[0] + 3.*e[10] * e[19] * e[1] + e[10] * e[20] * e[2] + e[19] * e[9] * e[0];
            A(2, 9) = e[4] * e[28] * e[13] + e[4] * e[10] * e[31] + e[7] * e[27] * e[15] + e[7] * e[9] * e[33] + e[7] * e[29] * e[17] + e[7] * e[11] * e[35] + e[7] * e[28] * e[16] + e[7] * e[10] * e[34] + e[1] * e[27] * e[9] + e[1] * e[29] * e[11] + 3.*e[1] * e[28] * e[10] + e[10] * e[27] * e[0] - e[10] * e[32] * e[5] - e[10] * e[33] * e[6] - e[10] * e[30] * e[3] - e[10] * e[35] * e[8] + e[10] * e[29] * e[2] + e[13] * e[27] * e[3] + e[13] * e[0] * e[30] + e[13] * e[1] * e[31] + e[13] * e[29] * e[5] + e[13] * e[2] * e[32] + e[28] * e[11] * e[2] - e[28] * e[15] * e[6] + e[28] * e[9] * e[0] - e[28] * e[14] * e[5] - e[28] * e[12] * e[3] - e[28] * e[17] * e[8] + e[31] * e[9] * e[3] + e[31] * e[0] * e[12] + e[31] * e[11] * e[5] + e[31] * e[2] * e[14] + e[16] * e[27] * e[6] + e[16] * e[0] * e[33] + e[16] * e[1] * e[34] + e[16] * e[29] * e[8] + e[16] * e[2] * e[35] - e[1] * e[30] * e[12] - e[1] * e[32] * e[14] - e[1] * e[33] * e[15] - e[1] * e[35] * e[17] + e[34] * e[9] * e[6] + e[34] * e[0] * e[15] + e[34] * e[11] * e[8] + e[34] * e[2] * e[17] + e[4] * e[27] * e[12] + e[4] * e[9] * e[30] + e[4] * e[29] * e[14] + e[4] * e[11] * e[32];
            A(2, 10) = e[19] * e[20] * e[2] + e[22] * e[18] * e[3] + e[22] * e[0] * e[21] + e[22] * e[19] * e[4] + e[22] * e[20] * e[5] + e[22] * e[2] * e[23] - e[19] * e[21] * e[3] - e[19] * e[26] * e[8] + e[19] * e[25] * e[7] - e[19] * e[23] * e[5] - e[19] * e[24] * e[6] + e[4] * e[18] * e[21] + e[4] * e[20] * e[23] + e[25] * e[18] * e[6] + e[25] * e[0] * e[24] + e[25] * e[20] * e[8] + e[25] * e[2] * e[26] + e[7] * e[18] * e[24] + e[7] * e[20] * e[26] + e[19] * e[18] * e[0] + 1.5*ep2[19] * e[1] + 0.5*e[1] * ep2[22] + 0.5*e[1] * ep2[18] + 0.5*e[1] * ep2[20] + 0.5*e[1] * ep2[25] - 0.5*e[1] * ep2[26] - 0.5*e[1] * ep2[23] - 0.5*e[1] * ep2[24] - 0.5*e[1] * ep2[21];
            A(2, 11) = -e[1] * e[32] * e[23] - e[19] * e[32] * e[5] - e[19] * e[33] * e[6] - e[19] * e[30] * e[3] - e[19] * e[35] * e[8] - e[28] * e[21] * e[3] - e[28] * e[26] * e[8] - e[28] * e[23] * e[5] - e[28] * e[24] * e[6] + e[7] * e[27] * e[24] + e[7] * e[18] * e[33] + e[7] * e[29] * e[26] + e[7] * e[20] * e[35] + e[22] * e[27] * e[3] + e[22] * e[0] * e[30] + e[22] * e[29] * e[5] + e[22] * e[2] * e[32] + e[31] * e[18] * e[3] + e[31] * e[0] * e[21] + e[31] * e[20] * e[5] + e[31] * e[2] * e[23] + e[25] * e[27] * e[6] + e[25] * e[0] * e[33] + e[25] * e[28] * e[7] + e[25] * e[1] * e[34] + e[25] * e[29] * e[8] + e[25] * e[2] * e[35] + e[34] * e[18] * e[6] + e[34] * e[0] * e[24] + e[34] * e[19] * e[7] + e[34] * e[20] * e[8] + e[34] * e[2] * e[26] + e[1] * e[27] * e[18] + 3.*e[1] * e[28] * e[19] + e[1] * e[29] * e[20] + e[19] * e[27] * e[0] + e[19] * e[29] * e[2] + e[28] * e[18] * e[0] + e[28] * e[20] * e[2] + e[4] * e[27] * e[21] + e[4] * e[18] * e[30] + e[4] * e[28] * e[22] + e[4] * e[19] * e[31] + e[4] * e[29] * e[23] + e[4] * e[20] * e[32] - e[1] * e[33] * e[24] - e[1] * e[30] * e[21] - e[1] * e[35] * e[26] + e[1] * e[31] * e[22];
            A(2, 12) = e[4] * e[27] * e[30] + e[4] * e[29] * e[32] + e[4] * e[28] * e[31] + e[31] * e[27] * e[3] + e[31] * e[0] * e[30] + e[31] * e[29] * e[5] + e[31] * e[2] * e[32] + e[7] * e[27] * e[33] + e[7] * e[29] * e[35] + e[7] * e[28] * e[34] + e[28] * e[27] * e[0] + e[28] * e[29] * e[2] + e[34] * e[27] * e[6] + e[34] * e[0] * e[33] + e[34] * e[29] * e[8] + e[34] * e[2] * e[35] - e[28] * e[32] * e[5] - e[28] * e[33] * e[6] - e[28] * e[30] * e[3] - e[28] * e[35] * e[8] + 0.5*e[1] * ep2[27] + 0.5*e[1] * ep2[29] + 1.5*e[1] * ep2[28] + 0.5*e[1] * ep2[31] - 0.5*e[1] * ep2[32] - 0.5*e[1] * ep2[33] - 0.5*e[1] * ep2[30] + 0.5*e[1] * ep2[34] - 0.5*e[1] * ep2[35];
            A(2, 13) = e[22] * e[18] * e[12] + e[22] * e[9] * e[21] + e[22] * e[20] * e[14] + e[22] * e[11] * e[23] + e[22] * e[19] * e[13] + e[25] * e[18] * e[15] + e[25] * e[9] * e[24] + e[25] * e[20] * e[17] + e[25] * e[11] * e[26] + e[25] * e[19] * e[16] + e[16] * e[18] * e[24] + e[16] * e[20] * e[26] + e[13] * e[18] * e[21] + e[13] * e[20] * e[23] + e[19] * e[18] * e[9] + e[19] * e[20] * e[11] - e[19] * e[23] * e[14] - e[19] * e[24] * e[15] - e[19] * e[26] * e[17] - e[19] * e[21] * e[12] + 0.5*e[10] * ep2[22] + 0.5*e[10] * ep2[25] + 1.5*e[10] * ep2[19] + 0.5*e[10] * ep2[18] + 0.5*e[10] * ep2[20] - 0.5*e[10] * ep2[26] - 0.5*e[10] * ep2[23] - 0.5*e[10] * ep2[24] - 0.5*e[10] * ep2[21];
            A(2, 14) = e[10] * e[29] * e[20] + e[22] * e[27] * e[12] + e[22] * e[9] * e[30] + e[22] * e[29] * e[14] + e[22] * e[11] * e[32] + e[22] * e[10] * e[31] + e[31] * e[18] * e[12] + e[31] * e[9] * e[21] + e[31] * e[20] * e[14] + e[31] * e[11] * e[23] - e[10] * e[33] * e[24] - e[10] * e[30] * e[21] - e[10] * e[35] * e[26] - e[10] * e[32] * e[23] + e[10] * e[34] * e[25] + e[19] * e[27] * e[9] + e[19] * e[29] * e[11] + e[28] * e[18] * e[9] + e[28] * e[20] * e[11] + e[16] * e[27] * e[24] + e[16] * e[18] * e[33] + e[16] * e[28] * e[25] + e[16] * e[19] * e[34] + e[16] * e[29] * e[26] + e[16] * e[20] * e[35] - e[19] * e[30] * e[12] - e[19] * e[32] * e[14] - e[19] * e[33] * e[15] - e[19] * e[35] * e[17] - e[28] * e[23] * e[14] - e[28] * e[24] * e[15] - e[28] * e[26] * e[17] - e[28] * e[21] * e[12] + e[25] * e[27] * e[15] + e[25] * e[9] * e[33] + e[25] * e[29] * e[17] + e[25] * e[11] * e[35] + e[34] * e[18] * e[15] + e[34] * e[9] * e[24] + e[34] * e[20] * e[17] + e[34] * e[11] * e[26] + e[13] * e[27] * e[21] + e[13] * e[18] * e[30] + e[13] * e[28] * e[22] + e[13] * e[19] * e[31] + e[13] * e[29] * e[23] + e[13] * e[20] * e[32] + e[10] * e[27] * e[18] + 3.*e[10] * e[28] * e[19];
            A(2, 15) = e[28] * e[27] * e[9] + e[28] * e[29] * e[11] - e[28] * e[30] * e[12] + e[28] * e[31] * e[13] - e[28] * e[32] * e[14] - e[28] * e[33] * e[15] - e[28] * e[35] * e[17] + e[31] * e[27] * e[12] + e[31] * e[9] * e[30] + e[31] * e[29] * e[14] + e[31] * e[11] * e[32] + e[13] * e[27] * e[30] + e[13] * e[29] * e[32] + e[16] * e[27] * e[33] + e[16] * e[29] * e[35] + e[34] * e[27] * e[15] + e[34] * e[9] * e[33] + e[34] * e[29] * e[17] + e[34] * e[11] * e[35] + e[34] * e[28] * e[16] + 0.5*e[10] * ep2[27] + 0.5*e[10] * ep2[29] + 1.5*e[10] * ep2[28] - 0.5*e[10] * ep2[32] + 0.5*e[10] * ep2[31] - 0.5*e[10] * ep2[33] - 0.5*e[10] * ep2[30] + 0.5*e[10] * ep2[34] - 0.5*e[10] * ep2[35];
            A(2, 16) = 0.5*e[19] * ep2[18] + 0.5*e[19] * ep2[25] + 0.5*e[19] * ep2[22] + e[25] * e[20] * e[26] - 0.5*e[19] * ep2[21] + 0.5*e[19] * ep2[20] - 0.5*e[19] * ep2[26] - 0.5*e[19] * ep2[23] - 0.5*e[19] * ep2[24] + 0.5*ep3[19] + e[22] * e[20] * e[23] + e[25] * e[18] * e[24] + e[22] * e[18] * e[21];
            A(2, 17) = -e[19] * e[35] * e[26] - e[19] * e[32] * e[23] + e[19] * e[27] * e[18] + e[19] * e[29] * e[20] + e[22] * e[27] * e[21] + e[22] * e[18] * e[30] + e[22] * e[19] * e[31] + e[22] * e[29] * e[23] + e[22] * e[20] * e[32] + e[31] * e[18] * e[21] + e[31] * e[20] * e[23] + e[25] * e[27] * e[24] + e[25] * e[18] * e[33] + e[25] * e[19] * e[34] + e[25] * e[29] * e[26] + e[25] * e[20] * e[35] + e[34] * e[18] * e[24] + e[34] * e[20] * e[26] - e[19] * e[33] * e[24] - e[19] * e[30] * e[21] + 1.5*e[28] * ep2[19] + 0.5*e[28] * ep2[18] + 0.5*e[28] * ep2[20] + 0.5*e[28] * ep2[22] + 0.5*e[28] * ep2[25] - 0.5*e[28] * ep2[26] - 0.5*e[28] * ep2[23] - 0.5*e[28] * ep2[24] - 0.5*e[28] * ep2[21];
            A(2, 18) = e[28] * e[27] * e[18] + e[28] * e[29] * e[20] + e[22] * e[27] * e[30] + e[22] * e[29] * e[32] + e[22] * e[28] * e[31] + e[31] * e[27] * e[21] + e[31] * e[18] * e[30] + e[31] * e[29] * e[23] + e[31] * e[20] * e[32] + e[25] * e[27] * e[33] + e[25] * e[29] * e[35] + e[25] * e[28] * e[34] + e[34] * e[27] * e[24] + e[34] * e[18] * e[33] + e[34] * e[29] * e[26] + e[34] * e[20] * e[35] - e[28] * e[33] * e[24] - e[28] * e[30] * e[21] - e[28] * e[35] * e[26] - e[28] * e[32] * e[23] - 0.5*e[19] * ep2[33] - 0.5*e[19] * ep2[30] - 0.5*e[19] * ep2[35] + 0.5*e[19] * ep2[27] + 0.5*e[19] * ep2[29] + 1.5*e[19] * ep2[28] + 0.5*e[19] * ep2[31] + 0.5*e[19] * ep2[34] - 0.5*e[19] * ep2[32];
            A(2, 19) = e[34] * e[27] * e[33] + e[34] * e[29] * e[35] - 0.5*e[28] * ep2[30] - 0.5*e[28] * ep2[35] + 0.5*ep3[28] + 0.5*e[28] * ep2[27] + 0.5*e[28] * ep2[29] + e[31] * e[27] * e[30] + e[31] * e[29] * e[32] - 0.5*e[28] * ep2[32] - 0.5*e[28] * ep2[33] + 0.5*e[28] * ep2[31] + 0.5*e[28] * ep2[34];
            A(3, 0) = e[5] * e[0] * e[3] + e[8] * e[1] * e[7] + e[8] * e[0] * e[6] + e[5] * e[1] * e[4] - 0.5*e[2] * ep2[4] + 0.5*ep3[2] + 0.5*e[2] * ep2[1] - 0.5*e[2] * ep2[3] + 0.5*e[2] * ep2[0] + 0.5*e[2] * ep2[8] + 0.5*e[2] * ep2[5] - 0.5*e[2] * ep2[6] - 0.5*e[2] * ep2[7];
            A(3, 1) = e[14] * e[9] * e[12] + e[17] * e[10] * e[16] + e[17] * e[9] * e[15] + 0.5*ep3[11] + e[14] * e[10] * e[13] + 0.5*e[11] * ep2[10] - 0.5*e[11] * ep2[15] + 0.5*e[11] * ep2[14] - 0.5*e[11] * ep2[13] - 0.5*e[11] * ep2[12] + 0.5*e[11] * ep2[9] - 0.5*e[11] * ep2[16] + 0.5*e[11] * ep2[17];
            A(3, 2) = -e[2] * e[15] * e[6] + e[2] * e[9] * e[0] - e[2] * e[12] * e[3] + e[5] * e[9] * e[3] + e[5] * e[0] * e[12] + e[5] * e[10] * e[4] + e[5] * e[1] * e[13] + e[5] * e[2] * e[14] + e[14] * e[1] * e[4] + e[14] * e[0] * e[3] + e[8] * e[9] * e[6] + e[8] * e[0] * e[15] + e[8] * e[10] * e[7] + e[8] * e[1] * e[16] + e[8] * e[2] * e[17] + e[17] * e[1] * e[7] + e[17] * e[0] * e[6] + e[2] * e[10] * e[1] - e[2] * e[13] * e[4] - e[2] * e[16] * e[7] + 0.5*e[11] * ep2[1] + 0.5*e[11] * ep2[0] + 1.5*e[11] * ep2[2] + 0.5*e[11] * ep2[5] + 0.5*e[11] * ep2[8] - 0.5*e[11] * ep2[4] - 0.5*e[11] * ep2[6] - 0.5*e[11] * ep2[7] - 0.5*e[11] * ep2[3];
            A(3, 3) = e[14] * e[9] * e[3] + e[14] * e[0] * e[12] + e[14] * e[10] * e[4] + e[14] * e[1] * e[13] + e[14] * e[11] * e[5] + e[17] * e[9] * e[6] + e[17] * e[0] * e[15] + e[17] * e[10] * e[7] + e[17] * e[1] * e[16] + e[17] * e[11] * e[8] + e[8] * e[9] * e[15] + e[8] * e[10] * e[16] + e[5] * e[9] * e[12] + e[5] * e[10] * e[13] + e[11] * e[9] * e[0] + e[11] * e[10] * e[1] - e[11] * e[13] * e[4] - e[11] * e[16] * e[7] - e[11] * e[15] * e[6] - e[11] * e[12] * e[3] + 0.5*e[2] * ep2[14] + 0.5*e[2] * ep2[17] + 1.5*e[2] * ep2[11] + 0.5*e[2] * ep2[9] + 0.5*e[2] * ep2[10] - 0.5*e[2] * ep2[16] - 0.5*e[2] * ep2[12] - 0.5*e[2] * ep2[15] - 0.5*e[2] * ep2[13];
            A(3, 4) = e[5] * e[18] * e[3] + e[5] * e[0] * e[21] + e[5] * e[19] * e[4] + e[5] * e[1] * e[22] + e[5] * e[2] * e[23] + e[23] * e[1] * e[4] + e[23] * e[0] * e[3] + e[8] * e[18] * e[6] + e[8] * e[0] * e[24] + e[8] * e[19] * e[7] + e[8] * e[1] * e[25] + e[8] * e[2] * e[26] + e[26] * e[1] * e[7] + e[26] * e[0] * e[6] + e[2] * e[18] * e[0] + e[2] * e[19] * e[1] - e[2] * e[21] * e[3] - e[2] * e[22] * e[4] - e[2] * e[25] * e[7] - e[2] * e[24] * e[6] - 0.5*e[20] * ep2[4] + 0.5*e[20] * ep2[0] - 0.5*e[20] * ep2[6] + 0.5*e[20] * ep2[5] + 0.5*e[20] * ep2[1] - 0.5*e[20] * ep2[7] - 0.5*e[20] * ep2[3] + 1.5*e[20] * ep2[2] + 0.5*e[20] * ep2[8];
            A(3, 5) = e[32] * e[1] * e[4] + e[32] * e[0] * e[3] + e[8] * e[27] * e[6] + e[8] * e[0] * e[33] + e[8] * e[28] * e[7] + e[8] * e[1] * e[34] + e[35] * e[1] * e[7] + e[35] * e[0] * e[6] + e[2] * e[27] * e[0] + e[2] * e[28] * e[1] - e[2] * e[34] * e[7] + e[2] * e[32] * e[5] - e[2] * e[33] * e[6] - e[2] * e[30] * e[3] + e[2] * e[35] * e[8] - e[2] * e[31] * e[4] + e[5] * e[27] * e[3] + e[5] * e[0] * e[30] + e[5] * e[28] * e[4] + e[5] * e[1] * e[31] + 1.5*e[29] * ep2[2] - 0.5*e[29] * ep2[4] + 0.5*e[29] * ep2[0] - 0.5*e[29] * ep2[6] + 0.5*e[29] * ep2[5] + 0.5*e[29] * ep2[1] - 0.5*e[29] * ep2[7] - 0.5*e[29] * ep2[3] + 0.5*e[29] * ep2[8];
            A(3, 6) = e[14] * e[18] * e[12] + e[14] * e[9] * e[21] + e[14] * e[11] * e[23] + e[14] * e[19] * e[13] + e[14] * e[10] * e[22] + e[23] * e[9] * e[12] + e[23] * e[10] * e[13] + e[17] * e[18] * e[15] + e[17] * e[9] * e[24] + e[17] * e[11] * e[26] + e[17] * e[19] * e[16] + e[17] * e[10] * e[25] + e[26] * e[9] * e[15] + e[26] * e[10] * e[16] - e[11] * e[24] * e[15] - e[11] * e[25] * e[16] + e[11] * e[18] * e[9] - e[11] * e[21] * e[12] + e[11] * e[19] * e[10] - e[11] * e[22] * e[13] + 1.5*e[20] * ep2[11] + 0.5*e[20] * ep2[9] + 0.5*e[20] * ep2[10] + 0.5*e[20] * ep2[14] + 0.5*e[20] * ep2[17] - 0.5*e[20] * ep2[16] - 0.5*e[20] * ep2[12] - 0.5*e[20] * ep2[15] - 0.5*e[20] * ep2[13];
            A(3, 7) = e[35] * e[9] * e[15] + e[35] * e[10] * e[16] - e[11] * e[30] * e[12] - e[11] * e[31] * e[13] - e[11] * e[33] * e[15] - e[11] * e[34] * e[16] + e[11] * e[27] * e[9] + e[11] * e[28] * e[10] + e[14] * e[27] * e[12] + e[14] * e[9] * e[30] + e[14] * e[11] * e[32] + e[14] * e[28] * e[13] + e[14] * e[10] * e[31] + e[32] * e[9] * e[12] + e[32] * e[10] * e[13] + e[17] * e[27] * e[15] + e[17] * e[9] * e[33] + e[17] * e[11] * e[35] + e[17] * e[28] * e[16] + e[17] * e[10] * e[34] + 1.5*e[29] * ep2[11] - 0.5*e[29] * ep2[16] + 0.5*e[29] * ep2[9] - 0.5*e[29] * ep2[12] - 0.5*e[29] * ep2[15] + 0.5*e[29] * ep2[17] + 0.5*e[29] * ep2[10] + 0.5*e[29] * ep2[14] - 0.5*e[29] * ep2[13];
            A(3, 8) = e[5] * e[19] * e[13] + e[5] * e[10] * e[22] + e[8] * e[18] * e[15] + e[8] * e[9] * e[24] + e[8] * e[20] * e[17] + e[8] * e[11] * e[26] + e[8] * e[19] * e[16] + e[8] * e[10] * e[25] + e[2] * e[18] * e[9] + e[2] * e[19] * e[10] - e[11] * e[21] * e[3] - e[11] * e[22] * e[4] - e[11] * e[25] * e[7] - e[11] * e[24] * e[6] + e[14] * e[18] * e[3] + e[14] * e[0] * e[21] + e[14] * e[19] * e[4] + e[14] * e[1] * e[22] + e[14] * e[2] * e[23] - e[20] * e[13] * e[4] - e[20] * e[16] * e[7] - e[20] * e[15] * e[6] - e[20] * e[12] * e[3] + e[23] * e[9] * e[3] + e[23] * e[0] * e[12] + e[23] * e[10] * e[4] + e[23] * e[1] * e[13] + e[17] * e[18] * e[6] + e[17] * e[0] * e[24] + e[17] * e[19] * e[7] + e[17] * e[1] * e[25] + e[17] * e[2] * e[26] - e[2] * e[24] * e[15] - e[2] * e[25] * e[16] - e[2] * e[21] * e[12] - e[2] * e[22] * e[13] + e[26] * e[9] * e[6] + e[26] * e[0] * e[15] + e[26] * e[10] * e[7] + e[26] * e[1] * e[16] + e[11] * e[18] * e[0] + e[11] * e[19] * e[1] + 3.*e[11] * e[20] * e[2] + e[20] * e[9] * e[0] + e[20] * e[10] * e[1] + e[5] * e[18] * e[12] + e[5] * e[9] * e[21] + e[5] * e[20] * e[14] + e[5] * e[11] * e[23];
            A(3, 9) = e[8] * e[28] * e[16] + e[8] * e[10] * e[34] + e[2] * e[27] * e[9] + 3.*e[2] * e[29] * e[11] + e[2] * e[28] * e[10] + e[11] * e[27] * e[0] - e[11] * e[34] * e[7] - e[11] * e[33] * e[6] - e[11] * e[30] * e[3] + e[11] * e[28] * e[1] - e[11] * e[31] * e[4] + e[14] * e[27] * e[3] + e[14] * e[0] * e[30] + e[14] * e[28] * e[4] + e[14] * e[1] * e[31] + e[14] * e[2] * e[32] + e[29] * e[10] * e[1] - e[29] * e[13] * e[4] - e[29] * e[16] * e[7] - e[29] * e[15] * e[6] + e[29] * e[9] * e[0] - e[29] * e[12] * e[3] + e[32] * e[9] * e[3] + e[32] * e[0] * e[12] + e[32] * e[10] * e[4] + e[32] * e[1] * e[13] + e[17] * e[27] * e[6] + e[17] * e[0] * e[33] + e[17] * e[28] * e[7] + e[17] * e[1] * e[34] + e[17] * e[2] * e[35] - e[2] * e[30] * e[12] - e[2] * e[31] * e[13] - e[2] * e[33] * e[15] - e[2] * e[34] * e[16] + e[35] * e[9] * e[6] + e[35] * e[0] * e[15] + e[35] * e[10] * e[7] + e[35] * e[1] * e[16] + e[5] * e[27] * e[12] + e[5] * e[9] * e[30] + e[5] * e[29] * e[14] + e[5] * e[11] * e[32] + e[5] * e[28] * e[13] + e[5] * e[10] * e[31] + e[8] * e[27] * e[15] + e[8] * e[9] * e[33] + e[8] * e[29] * e[17] + e[8] * e[11] * e[35];
            A(3, 10) = -e[20] * e[21] * e[3] + e[20] * e[26] * e[8] - e[20] * e[22] * e[4] - e[20] * e[25] * e[7] - e[20] * e[24] * e[6] + e[5] * e[19] * e[22] + e[5] * e[18] * e[21] + e[26] * e[18] * e[6] + e[26] * e[0] * e[24] + e[26] * e[19] * e[7] + e[26] * e[1] * e[25] + e[8] * e[19] * e[25] + e[8] * e[18] * e[24] + e[20] * e[18] * e[0] + e[20] * e[19] * e[1] + e[23] * e[18] * e[3] + e[23] * e[0] * e[21] + e[23] * e[19] * e[4] + e[23] * e[1] * e[22] + e[23] * e[20] * e[5] + 1.5*ep2[20] * e[2] + 0.5*e[2] * ep2[23] + 0.5*e[2] * ep2[19] + 0.5*e[2] * ep2[18] + 0.5*e[2] * ep2[26] - 0.5*e[2] * ep2[22] - 0.5*e[2] * ep2[24] - 0.5*e[2] * ep2[21] - 0.5*e[2] * ep2[25];
            A(3, 11) = -e[20] * e[33] * e[6] - e[20] * e[30] * e[3] - e[20] * e[31] * e[4] - e[29] * e[21] * e[3] - e[29] * e[22] * e[4] - e[29] * e[25] * e[7] - e[29] * e[24] * e[6] + e[8] * e[27] * e[24] + e[8] * e[18] * e[33] + e[8] * e[28] * e[25] + e[8] * e[19] * e[34] + e[23] * e[27] * e[3] + e[23] * e[0] * e[30] + e[23] * e[28] * e[4] + e[23] * e[1] * e[31] + e[32] * e[18] * e[3] + e[32] * e[0] * e[21] + e[32] * e[19] * e[4] + e[32] * e[1] * e[22] + e[26] * e[27] * e[6] + e[26] * e[0] * e[33] + e[26] * e[28] * e[7] + e[26] * e[1] * e[34] + e[26] * e[29] * e[8] + e[26] * e[2] * e[35] + e[35] * e[18] * e[6] + e[35] * e[0] * e[24] + e[35] * e[19] * e[7] + e[35] * e[1] * e[25] + e[35] * e[20] * e[8] + e[2] * e[27] * e[18] + e[2] * e[28] * e[19] + 3.*e[2] * e[29] * e[20] + e[20] * e[27] * e[0] + e[20] * e[28] * e[1] + e[29] * e[18] * e[0] + e[29] * e[19] * e[1] + e[5] * e[27] * e[21] + e[5] * e[18] * e[30] + e[5] * e[28] * e[22] + e[5] * e[19] * e[31] + e[5] * e[29] * e[23] + e[5] * e[20] * e[32] - e[2] * e[33] * e[24] - e[2] * e[30] * e[21] - e[2] * e[31] * e[22] + e[2] * e[32] * e[23] - e[2] * e[34] * e[25] - e[20] * e[34] * e[7];
            A(3, 12) = e[5] * e[27] * e[30] + e[5] * e[29] * e[32] + e[5] * e[28] * e[31] + e[32] * e[27] * e[3] + e[32] * e[0] * e[30] + e[32] * e[28] * e[4] + e[32] * e[1] * e[31] + e[8] * e[27] * e[33] + e[8] * e[29] * e[35] + e[8] * e[28] * e[34] + e[29] * e[27] * e[0] + e[29] * e[28] * e[1] + e[35] * e[27] * e[6] + e[35] * e[0] * e[33] + e[35] * e[28] * e[7] + e[35] * e[1] * e[34] - e[29] * e[34] * e[7] - e[29] * e[33] * e[6] - e[29] * e[30] * e[3] - e[29] * e[31] * e[4] + 0.5*e[2] * ep2[27] + 1.5*e[2] * ep2[29] + 0.5*e[2] * ep2[28] + 0.5*e[2] * ep2[32] - 0.5*e[2] * ep2[31] - 0.5*e[2] * ep2[33] - 0.5*e[2] * ep2[30] - 0.5*e[2] * ep2[34] + 0.5*e[2] * ep2[35];
            A(3, 13) = e[23] * e[18] * e[12] + e[23] * e[9] * e[21] + e[23] * e[20] * e[14] + e[23] * e[19] * e[13] + e[23] * e[10] * e[22] + e[26] * e[18] * e[15] + e[26] * e[9] * e[24] + e[26] * e[20] * e[17] + e[26] * e[19] * e[16] + e[26] * e[10] * e[25] + e[17] * e[19] * e[25] + e[17] * e[18] * e[24] + e[14] * e[19] * e[22] + e[14] * e[18] * e[21] + e[20] * e[18] * e[9] + e[20] * e[19] * e[10] - e[20] * e[24] * e[15] - e[20] * e[25] * e[16] - e[20] * e[21] * e[12] - e[20] * e[22] * e[13] + 0.5*e[11] * ep2[23] + 0.5*e[11] * ep2[26] + 0.5*e[11] * ep2[19] + 0.5*e[11] * ep2[18] + 1.5*e[11] * ep2[20] - 0.5*e[11] * ep2[22] - 0.5*e[11] * ep2[24] - 0.5*e[11] * ep2[21] - 0.5*e[11] * ep2[25];
            A(3, 14) = e[23] * e[10] * e[31] + e[32] * e[18] * e[12] + e[32] * e[9] * e[21] + e[32] * e[19] * e[13] + e[32] * e[10] * e[22] - e[11] * e[33] * e[24] - e[11] * e[30] * e[21] + e[11] * e[35] * e[26] - e[11] * e[31] * e[22] - e[11] * e[34] * e[25] + e[20] * e[27] * e[9] + e[20] * e[28] * e[10] + e[29] * e[18] * e[9] + e[29] * e[19] * e[10] + e[17] * e[27] * e[24] + e[17] * e[18] * e[33] + e[17] * e[28] * e[25] + e[17] * e[19] * e[34] + e[17] * e[29] * e[26] + e[17] * e[20] * e[35] - e[20] * e[30] * e[12] - e[20] * e[31] * e[13] - e[20] * e[33] * e[15] - e[20] * e[34] * e[16] - e[29] * e[24] * e[15] - e[29] * e[25] * e[16] - e[29] * e[21] * e[12] - e[29] * e[22] * e[13] + e[26] * e[27] * e[15] + e[26] * e[9] * e[33] + e[26] * e[28] * e[16] + e[26] * e[10] * e[34] + e[35] * e[18] * e[15] + e[35] * e[9] * e[24] + e[35] * e[19] * e[16] + e[35] * e[10] * e[25] + e[14] * e[27] * e[21] + e[14] * e[18] * e[30] + e[14] * e[28] * e[22] + e[14] * e[19] * e[31] + e[14] * e[29] * e[23] + e[14] * e[20] * e[32] + e[11] * e[27] * e[18] + e[11] * e[28] * e[19] + 3.*e[11] * e[29] * e[20] + e[23] * e[27] * e[12] + e[23] * e[9] * e[30] + e[23] * e[11] * e[32] + e[23] * e[28] * e[13];
            A(3, 15) = e[29] * e[32] * e[14] - e[29] * e[33] * e[15] - e[29] * e[34] * e[16] + e[32] * e[27] * e[12] + e[32] * e[9] * e[30] + e[32] * e[28] * e[13] + e[32] * e[10] * e[31] + e[14] * e[27] * e[30] + e[14] * e[28] * e[31] + e[17] * e[27] * e[33] + e[17] * e[28] * e[34] + e[35] * e[27] * e[15] + e[35] * e[9] * e[33] + e[35] * e[29] * e[17] + e[35] * e[28] * e[16] + e[35] * e[10] * e[34] + e[29] * e[27] * e[9] + e[29] * e[28] * e[10] - e[29] * e[30] * e[12] - e[29] * e[31] * e[13] + 0.5*e[11] * ep2[27] + 1.5*e[11] * ep2[29] + 0.5*e[11] * ep2[28] + 0.5*e[11] * ep2[32] - 0.5*e[11] * ep2[31] - 0.5*e[11] * ep2[33] - 0.5*e[11] * ep2[30] - 0.5*e[11] * ep2[34] + 0.5*e[11] * ep2[35];
            A(3, 16) = 0.5*e[20] * ep2[26] + 0.5*e[20] * ep2[18] + 0.5*ep3[20] + 0.5*e[20] * ep2[19] + e[26] * e[18] * e[24] + 0.5*e[20] * ep2[23] - 0.5*e[20] * ep2[25] + e[23] * e[19] * e[22] - 0.5*e[20] * ep2[24] - 0.5*e[20] * ep2[21] - 0.5*e[20] * ep2[22] + e[23] * e[18] * e[21] + e[26] * e[19] * e[25];
            A(3, 17) = e[20] * e[27] * e[18] + e[20] * e[28] * e[19] + e[23] * e[27] * e[21] + e[23] * e[18] * e[30] + e[23] * e[28] * e[22] + e[23] * e[19] * e[31] + e[23] * e[20] * e[32] + e[32] * e[19] * e[22] + e[32] * e[18] * e[21] + e[26] * e[27] * e[24] + e[26] * e[18] * e[33] + e[26] * e[28] * e[25] + e[26] * e[19] * e[34] + e[26] * e[20] * e[35] + e[35] * e[19] * e[25] + e[35] * e[18] * e[24] - e[20] * e[33] * e[24] - e[20] * e[30] * e[21] - e[20] * e[31] * e[22] - e[20] * e[34] * e[25] + 0.5*e[29] * ep2[23] + 0.5*e[29] * ep2[26] - 0.5*e[29] * ep2[22] - 0.5*e[29] * ep2[24] - 0.5*e[29] * ep2[21] - 0.5*e[29] * ep2[25] + 1.5*e[29] * ep2[20] + 0.5*e[29] * ep2[19] + 0.5*e[29] * ep2[18];
            A(3, 18) = 0.5*e[20] * ep2[27] + 1.5*e[20] * ep2[29] + 0.5*e[20] * ep2[28] + 0.5*e[20] * ep2[32] + 0.5*e[20] * ep2[35] - 0.5*e[20] * ep2[31] - 0.5*e[20] * ep2[33] - 0.5*e[20] * ep2[30] - 0.5*e[20] * ep2[34] + e[29] * e[27] * e[18] + e[29] * e[28] * e[19] + e[23] * e[27] * e[30] + e[23] * e[29] * e[32] + e[23] * e[28] * e[31] + e[32] * e[27] * e[21] + e[32] * e[18] * e[30] + e[32] * e[28] * e[22] + e[32] * e[19] * e[31] + e[26] * e[27] * e[33] + e[26] * e[29] * e[35] + e[26] * e[28] * e[34] + e[35] * e[27] * e[24] + e[35] * e[18] * e[33] + e[35] * e[28] * e[25] + e[35] * e[19] * e[34] - e[29] * e[33] * e[24] - e[29] * e[30] * e[21] - e[29] * e[31] * e[22] - e[29] * e[34] * e[25];
            A(3, 19) = 0.5*e[29] * ep2[32] + 0.5*e[29] * ep2[35] - 0.5*e[29] * ep2[31] - 0.5*e[29] * ep2[33] - 0.5*e[29] * ep2[30] - 0.5*e[29] * ep2[34] + e[32] * e[27] * e[30] + 0.5*ep3[29] + 0.5*e[29] * ep2[28] + e[35] * e[28] * e[34] + 0.5*e[29] * ep2[27] + e[35] * e[27] * e[33] + e[32] * e[28] * e[31];
            A(4, 0) = -0.5*e[3] * ep2[1] - 0.5*e[3] * ep2[7] + 0.5*ep3[3] - 0.5*e[3] * ep2[8] + e[0] * e[2] * e[5] + 0.5*e[3] * ep2[6] + 0.5*e[3] * ep2[4] - 0.5*e[3] * ep2[2] + e[0] * e[1] * e[4] + e[6] * e[4] * e[7] + 0.5*ep2[0] * e[3] + 0.5*e[3] * ep2[5] + e[6] * e[5] * e[8];
            A(4, 1) = 0.5*e[12] * ep2[15] - 0.5*e[12] * ep2[17] + e[15] * e[13] * e[16] - 0.5*e[12] * ep2[10] + e[15] * e[14] * e[17] - 0.5*e[12] * ep2[16] - 0.5*e[12] * ep2[11] + e[9] * e[10] * e[13] + 0.5*e[12] * ep2[13] + 0.5*ep2[9] * e[12] + 0.5*ep3[12] + e[9] * e[11] * e[14] + 0.5*e[12] * ep2[14];
            A(4, 2) = e[0] * e[11] * e[5] + e[0] * e[2] * e[14] + e[9] * e[1] * e[4] + e[9] * e[0] * e[3] + e[9] * e[2] * e[5] + e[3] * e[13] * e[4] + e[3] * e[14] * e[5] + e[6] * e[3] * e[15] + e[6] * e[13] * e[7] + e[6] * e[4] * e[16] + e[6] * e[14] * e[8] + e[6] * e[5] * e[17] + e[15] * e[4] * e[7] + e[15] * e[5] * e[8] - e[3] * e[11] * e[2] - e[3] * e[10] * e[1] - e[3] * e[16] * e[7] - e[3] * e[17] * e[8] + e[0] * e[10] * e[4] + e[0] * e[1] * e[13] + 1.5*e[12] * ep2[3] + 0.5*e[12] * ep2[4] + 0.5*e[12] * ep2[5] + 0.5*e[12] * ep2[6] + 0.5*ep2[0] * e[12] - 0.5*e[12] * ep2[1] - 0.5*e[12] * ep2[7] - 0.5*e[12] * ep2[2] - 0.5*e[12] * ep2[8];
            A(4, 3) = e[12] * e[13] * e[4] + e[12] * e[14] * e[5] + e[15] * e[12] * e[6] + e[15] * e[13] * e[7] + e[15] * e[4] * e[16] + e[15] * e[14] * e[8] + e[15] * e[5] * e[17] + e[6] * e[14] * e[17] + e[6] * e[13] * e[16] + e[0] * e[11] * e[14] + e[0] * e[9] * e[12] + e[0] * e[10] * e[13] + e[9] * e[10] * e[4] + e[9] * e[1] * e[13] + e[9] * e[11] * e[5] + e[9] * e[2] * e[14] - e[12] * e[11] * e[2] - e[12] * e[10] * e[1] - e[12] * e[16] * e[7] - e[12] * e[17] * e[8] + 1.5*ep2[12] * e[3] + 0.5*e[3] * ep2[15] - 0.5*e[3] * ep2[16] + 0.5*e[3] * ep2[9] - 0.5*e[3] * ep2[11] - 0.5*e[3] * ep2[17] - 0.5*e[3] * ep2[10] + 0.5*e[3] * ep2[14] + 0.5*e[3] * ep2[13];
            A(4, 4) = e[18] * e[1] * e[4] + e[18] * e[0] * e[3] + e[18] * e[2] * e[5] + e[3] * e[22] * e[4] + e[3] * e[23] * e[5] + e[6] * e[3] * e[24] + e[6] * e[22] * e[7] + e[6] * e[4] * e[25] + e[6] * e[23] * e[8] + e[6] * e[5] * e[26] + e[24] * e[4] * e[7] + e[24] * e[5] * e[8] + e[0] * e[19] * e[4] + e[0] * e[1] * e[22] + e[0] * e[20] * e[5] + e[0] * e[2] * e[23] - e[3] * e[26] * e[8] - e[3] * e[20] * e[2] - e[3] * e[19] * e[1] - e[3] * e[25] * e[7] + 0.5*e[21] * ep2[4] + 0.5*e[21] * ep2[0] + 0.5*e[21] * ep2[6] + 0.5*e[21] * ep2[5] - 0.5*e[21] * ep2[1] - 0.5*e[21] * ep2[7] + 1.5*e[21] * ep2[3] - 0.5*e[21] * ep2[2] - 0.5*e[21] * ep2[8];
            A(4, 5) = e[6] * e[4] * e[34] + e[6] * e[32] * e[8] + e[6] * e[5] * e[35] + e[33] * e[4] * e[7] + e[33] * e[5] * e[8] + e[0] * e[27] * e[3] + e[0] * e[28] * e[4] + e[0] * e[1] * e[31] + e[0] * e[29] * e[5] + e[0] * e[2] * e[32] - e[3] * e[34] * e[7] + e[3] * e[32] * e[5] + e[3] * e[33] * e[6] - e[3] * e[35] * e[8] - e[3] * e[29] * e[2] - e[3] * e[28] * e[1] + e[3] * e[31] * e[4] + e[27] * e[1] * e[4] + e[27] * e[2] * e[5] + e[6] * e[31] * e[7] + 0.5*e[30] * ep2[4] + 0.5*e[30] * ep2[6] + 0.5*e[30] * ep2[5] - 0.5*e[30] * ep2[1] - 0.5*e[30] * ep2[7] - 0.5*e[30] * ep2[2] - 0.5*e[30] * ep2[8] + 0.5*ep2[0] * e[30] + 1.5*e[30] * ep2[3];
            A(4, 6) = e[18] * e[11] * e[14] + e[18] * e[9] * e[12] + e[18] * e[10] * e[13] + e[12] * e[23] * e[14] + e[12] * e[22] * e[13] + e[15] * e[12] * e[24] + e[15] * e[23] * e[17] + e[15] * e[14] * e[26] + e[15] * e[22] * e[16] + e[15] * e[13] * e[25] + e[24] * e[14] * e[17] + e[24] * e[13] * e[16] - e[12] * e[25] * e[16] - e[12] * e[26] * e[17] - e[12] * e[20] * e[11] - e[12] * e[19] * e[10] + e[9] * e[20] * e[14] + e[9] * e[11] * e[23] + e[9] * e[19] * e[13] + e[9] * e[10] * e[22] + 0.5*ep2[9] * e[21] - 0.5*e[21] * ep2[16] - 0.5*e[21] * ep2[11] - 0.5*e[21] * ep2[17] - 0.5*e[21] * ep2[10] + 1.5*e[21] * ep2[12] + 0.5*e[21] * ep2[14] + 0.5*e[21] * ep2[13] + 0.5*e[21] * ep2[15];
            A(4, 7) = -e[12] * e[34] * e[16] - e[12] * e[35] * e[17] - e[12] * e[29] * e[11] + e[9] * e[27] * e[12] + e[9] * e[29] * e[14] + e[9] * e[11] * e[32] + e[9] * e[28] * e[13] + e[9] * e[10] * e[31] + e[27] * e[11] * e[14] + e[27] * e[10] * e[13] + e[12] * e[32] * e[14] + e[12] * e[31] * e[13] + e[15] * e[12] * e[33] + e[15] * e[32] * e[17] + e[15] * e[14] * e[35] + e[15] * e[31] * e[16] + e[15] * e[13] * e[34] + e[33] * e[14] * e[17] + e[33] * e[13] * e[16] - e[12] * e[28] * e[10] + 0.5*ep2[9] * e[30] - 0.5*e[30] * ep2[16] - 0.5*e[30] * ep2[11] + 1.5*e[30] * ep2[12] + 0.5*e[30] * ep2[15] - 0.5*e[30] * ep2[17] - 0.5*e[30] * ep2[10] + 0.5*e[30] * ep2[14] + 0.5*e[30] * ep2[13];
            A(4, 8) = e[6] * e[23] * e[17] + e[6] * e[14] * e[26] + e[6] * e[22] * e[16] + e[6] * e[13] * e[25] + e[0] * e[20] * e[14] + e[0] * e[11] * e[23] + e[0] * e[19] * e[13] + e[0] * e[10] * e[22] - e[12] * e[26] * e[8] - e[12] * e[20] * e[2] - e[12] * e[19] * e[1] + e[12] * e[22] * e[4] - e[12] * e[25] * e[7] + e[12] * e[23] * e[5] - e[21] * e[11] * e[2] - e[21] * e[10] * e[1] + e[21] * e[13] * e[4] - e[21] * e[16] * e[7] + e[21] * e[14] * e[5] - e[21] * e[17] * e[8] + e[15] * e[3] * e[24] + e[15] * e[22] * e[7] + e[15] * e[4] * e[25] + e[15] * e[23] * e[8] + e[15] * e[5] * e[26] - e[3] * e[25] * e[16] - e[3] * e[26] * e[17] - e[3] * e[20] * e[11] - e[3] * e[19] * e[10] + e[24] * e[13] * e[7] + e[24] * e[4] * e[16] + e[24] * e[14] * e[8] + e[24] * e[5] * e[17] + e[9] * e[18] * e[3] + e[9] * e[0] * e[21] + e[9] * e[19] * e[4] + e[9] * e[1] * e[22] + e[9] * e[20] * e[5] + e[9] * e[2] * e[23] + e[18] * e[0] * e[12] + e[18] * e[10] * e[4] + e[18] * e[1] * e[13] + e[18] * e[11] * e[5] + e[18] * e[2] * e[14] + 3.*e[3] * e[21] * e[12] + e[3] * e[23] * e[14] + e[3] * e[22] * e[13] + e[6] * e[21] * e[15] + e[6] * e[12] * e[24];
            A(4, 9) = -e[12] * e[34] * e[7] + e[12] * e[32] * e[5] - e[12] * e[35] * e[8] - e[12] * e[29] * e[2] - e[12] * e[28] * e[1] + e[12] * e[31] * e[4] - e[30] * e[11] * e[2] - e[30] * e[10] * e[1] + e[30] * e[13] * e[4] - e[30] * e[16] * e[7] + e[30] * e[14] * e[5] - e[30] * e[17] * e[8] + e[15] * e[3] * e[33] + e[15] * e[31] * e[7] + e[15] * e[4] * e[34] + e[15] * e[32] * e[8] + e[15] * e[5] * e[35] + e[3] * e[27] * e[9] - e[3] * e[28] * e[10] - e[3] * e[34] * e[16] - e[3] * e[35] * e[17] - e[3] * e[29] * e[11] + e[33] * e[13] * e[7] + e[33] * e[4] * e[16] + e[33] * e[14] * e[8] + e[33] * e[5] * e[17] + e[9] * e[28] * e[4] + e[9] * e[1] * e[31] + e[9] * e[29] * e[5] + e[9] * e[2] * e[32] + e[27] * e[10] * e[4] + e[27] * e[1] * e[13] + e[27] * e[11] * e[5] + e[27] * e[2] * e[14] + 3.*e[3] * e[30] * e[12] + e[3] * e[32] * e[14] + e[3] * e[31] * e[13] + e[6] * e[30] * e[15] + e[6] * e[12] * e[33] + e[6] * e[32] * e[17] + e[6] * e[14] * e[35] + e[6] * e[31] * e[16] + e[6] * e[13] * e[34] + e[0] * e[27] * e[12] + e[0] * e[9] * e[30] + e[0] * e[29] * e[14] + e[0] * e[11] * e[32] + e[0] * e[28] * e[13] + e[0] * e[10] * e[31];
            A(4, 10) = e[21] * e[24] * e[6] + e[0] * e[19] * e[22] + e[0] * e[20] * e[23] + e[24] * e[22] * e[7] + e[24] * e[4] * e[25] + e[24] * e[23] * e[8] + e[24] * e[5] * e[26] + e[6] * e[22] * e[25] + e[6] * e[23] * e[26] + e[18] * e[0] * e[21] + e[18] * e[19] * e[4] + e[18] * e[1] * e[22] + e[18] * e[20] * e[5] + e[18] * e[2] * e[23] + e[21] * e[22] * e[4] + e[21] * e[23] * e[5] - e[21] * e[26] * e[8] - e[21] * e[20] * e[2] - e[21] * e[19] * e[1] - e[21] * e[25] * e[7] + 1.5*ep2[21] * e[3] + 0.5*e[3] * ep2[22] + 0.5*e[3] * ep2[23] + 0.5*e[3] * ep2[24] - 0.5*e[3] * ep2[26] - 0.5*e[3] * ep2[19] - 0.5*e[3] * ep2[20] - 0.5*e[3] * ep2[25] + 0.5*ep2[18] * e[3];
            A(4, 11) = -e[21] * e[35] * e[8] - e[21] * e[29] * e[2] - e[21] * e[28] * e[1] + e[21] * e[31] * e[4] - e[30] * e[26] * e[8] - e[30] * e[20] * e[2] - e[30] * e[19] * e[1] + e[30] * e[22] * e[4] - e[30] * e[25] * e[7] + e[30] * e[23] * e[5] + e[6] * e[31] * e[25] + e[6] * e[22] * e[34] + e[6] * e[32] * e[26] + e[6] * e[23] * e[35] + e[24] * e[30] * e[6] + e[24] * e[3] * e[33] + e[24] * e[31] * e[7] + e[24] * e[4] * e[34] + e[24] * e[32] * e[8] + e[24] * e[5] * e[35] + e[33] * e[21] * e[6] + e[33] * e[22] * e[7] + e[33] * e[4] * e[25] + e[33] * e[23] * e[8] + e[33] * e[5] * e[26] + e[0] * e[27] * e[21] + e[0] * e[18] * e[30] + e[0] * e[28] * e[22] + e[0] * e[19] * e[31] + e[0] * e[29] * e[23] + e[0] * e[20] * e[32] + e[18] * e[27] * e[3] + e[18] * e[28] * e[4] + e[18] * e[1] * e[31] + e[18] * e[29] * e[5] + e[18] * e[2] * e[32] + e[27] * e[19] * e[4] + e[27] * e[1] * e[22] + e[27] * e[20] * e[5] + e[27] * e[2] * e[23] + 3.*e[3] * e[30] * e[21] + e[3] * e[31] * e[22] + e[3] * e[32] * e[23] - e[3] * e[29] * e[20] - e[3] * e[35] * e[26] - e[3] * e[28] * e[19] - e[3] * e[34] * e[25] - e[21] * e[34] * e[7] + e[21] * e[32] * e[5];
            A(4, 12) = e[0] * e[27] * e[30] + e[0] * e[29] * e[32] + e[0] * e[28] * e[31] + e[30] * e[31] * e[4] + e[30] * e[32] * e[5] + e[6] * e[30] * e[33] + e[6] * e[32] * e[35] + e[6] * e[31] * e[34] + e[27] * e[28] * e[4] + e[27] * e[1] * e[31] + e[27] * e[29] * e[5] + e[27] * e[2] * e[32] + e[33] * e[31] * e[7] + e[33] * e[4] * e[34] + e[33] * e[32] * e[8] + e[33] * e[5] * e[35] - e[30] * e[34] * e[7] - e[30] * e[35] * e[8] - e[30] * e[29] * e[2] - e[30] * e[28] * e[1] + 1.5*e[3] * ep2[30] + 0.5*e[3] * ep2[32] + 0.5*e[3] * ep2[31] + 0.5*e[3] * ep2[27] - 0.5*e[3] * ep2[28] - 0.5*e[3] * ep2[29] + 0.5*e[3] * ep2[33] - 0.5*e[3] * ep2[34] - 0.5*e[3] * ep2[35];
            A(4, 13) = e[21] * e[23] * e[14] + e[21] * e[22] * e[13] + e[24] * e[21] * e[15] + e[24] * e[23] * e[17] + e[24] * e[14] * e[26] + e[24] * e[22] * e[16] + e[24] * e[13] * e[25] + e[15] * e[22] * e[25] + e[15] * e[23] * e[26] + e[9] * e[19] * e[22] + e[9] * e[18] * e[21] + e[9] * e[20] * e[23] + e[18] * e[20] * e[14] + e[18] * e[11] * e[23] + e[18] * e[19] * e[13] + e[18] * e[10] * e[22] - e[21] * e[25] * e[16] - e[21] * e[26] * e[17] - e[21] * e[20] * e[11] - e[21] * e[19] * e[10] + 1.5*ep2[21] * e[12] + 0.5*e[12] * ep2[24] - 0.5*e[12] * ep2[26] + 0.5*e[12] * ep2[18] + 0.5*e[12] * ep2[23] - 0.5*e[12] * ep2[19] - 0.5*e[12] * ep2[20] + 0.5*e[12] * ep2[22] - 0.5*e[12] * ep2[25];
            A(4, 14) = -e[12] * e[29] * e[20] - e[12] * e[35] * e[26] - e[12] * e[28] * e[19] - e[12] * e[34] * e[25] + e[18] * e[29] * e[14] + e[18] * e[11] * e[32] + e[18] * e[28] * e[13] + e[18] * e[10] * e[31] + e[27] * e[20] * e[14] + e[27] * e[11] * e[23] + e[27] * e[19] * e[13] + e[27] * e[10] * e[22] + e[15] * e[30] * e[24] + e[15] * e[21] * e[33] + e[15] * e[31] * e[25] + e[15] * e[22] * e[34] + e[15] * e[32] * e[26] + e[15] * e[23] * e[35] - e[21] * e[28] * e[10] - e[21] * e[34] * e[16] - e[21] * e[35] * e[17] - e[21] * e[29] * e[11] - e[30] * e[25] * e[16] - e[30] * e[26] * e[17] - e[30] * e[20] * e[11] - e[30] * e[19] * e[10] + e[24] * e[32] * e[17] + e[24] * e[14] * e[35] + e[24] * e[31] * e[16] + e[24] * e[13] * e[34] + e[33] * e[23] * e[17] + e[33] * e[14] * e[26] + e[33] * e[22] * e[16] + e[33] * e[13] * e[25] + 3.*e[12] * e[30] * e[21] + e[12] * e[31] * e[22] + e[12] * e[32] * e[23] + e[9] * e[27] * e[21] + e[9] * e[18] * e[30] + e[9] * e[28] * e[22] + e[9] * e[19] * e[31] + e[9] * e[29] * e[23] + e[9] * e[20] * e[32] + e[21] * e[32] * e[14] + e[21] * e[31] * e[13] + e[30] * e[23] * e[14] + e[30] * e[22] * e[13] + e[12] * e[27] * e[18] + e[12] * e[33] * e[24];
            A(4, 15) = e[9] * e[27] * e[30] + e[9] * e[29] * e[32] + e[9] * e[28] * e[31] + e[33] * e[30] * e[15] + e[33] * e[32] * e[17] + e[33] * e[14] * e[35] + e[33] * e[31] * e[16] + e[33] * e[13] * e[34] + e[27] * e[29] * e[14] + e[27] * e[11] * e[32] + e[27] * e[28] * e[13] + e[27] * e[10] * e[31] - e[30] * e[28] * e[10] + e[30] * e[31] * e[13] + e[30] * e[32] * e[14] - e[30] * e[34] * e[16] - e[30] * e[35] * e[17] - e[30] * e[29] * e[11] + e[15] * e[32] * e[35] + e[15] * e[31] * e[34] - 0.5*e[12] * ep2[34] - 0.5*e[12] * ep2[35] + 0.5*e[12] * ep2[27] + 0.5*e[12] * ep2[32] - 0.5*e[12] * ep2[28] - 0.5*e[12] * ep2[29] + 0.5*e[12] * ep2[31] + 0.5*e[12] * ep2[33] + 1.5*e[12] * ep2[30];
            A(4, 16) = 0.5*e[21] * ep2[24] - 0.5*e[21] * ep2[25] + 0.5*e[21] * ep2[23] - 0.5*e[21] * ep2[26] + 0.5*ep2[18] * e[21] + 0.5*e[21] * ep2[22] - 0.5*e[21] * ep2[20] + e[24] * e[22] * e[25] + e[24] * e[23] * e[26] - 0.5*e[21] * ep2[19] + e[18] * e[19] * e[22] + e[18] * e[20] * e[23] + 0.5*ep3[21];
            A(4, 17) = -0.5*e[30] * ep2[26] - 0.5*e[30] * ep2[19] - 0.5*e[30] * ep2[20] - 0.5*e[30] * ep2[25] + 0.5*ep2[18] * e[30] + 1.5*e[30] * ep2[21] + 0.5*e[30] * ep2[22] + 0.5*e[30] * ep2[23] + 0.5*e[30] * ep2[24] + e[18] * e[27] * e[21] + e[18] * e[28] * e[22] + e[18] * e[19] * e[31] + e[18] * e[29] * e[23] + e[18] * e[20] * e[32] + e[27] * e[19] * e[22] + e[27] * e[20] * e[23] + e[21] * e[31] * e[22] + e[21] * e[32] * e[23] + e[24] * e[21] * e[33] + e[24] * e[31] * e[25] + e[24] * e[22] * e[34] + e[24] * e[32] * e[26] + e[24] * e[23] * e[35] + e[33] * e[22] * e[25] + e[33] * e[23] * e[26] - e[21] * e[29] * e[20] - e[21] * e[35] * e[26] - e[21] * e[28] * e[19] - e[21] * e[34] * e[25];
            A(4, 18) = 0.5*ep2[27] * e[21] + 1.5*e[21] * ep2[30] + 0.5*e[21] * ep2[32] + 0.5*e[21] * ep2[31] + 0.5*e[21] * ep2[33] - 0.5*e[21] * ep2[28] - 0.5*e[21] * ep2[29] - 0.5*e[21] * ep2[34] - 0.5*e[21] * ep2[35] + e[18] * e[27] * e[30] + e[18] * e[29] * e[32] + e[18] * e[28] * e[31] + e[27] * e[28] * e[22] + e[27] * e[19] * e[31] + e[27] * e[29] * e[23] + e[27] * e[20] * e[32] + e[30] * e[31] * e[22] + e[30] * e[32] * e[23] + e[24] * e[30] * e[33] + e[24] * e[32] * e[35] + e[24] * e[31] * e[34] + e[33] * e[31] * e[25] + e[33] * e[22] * e[34] + e[33] * e[32] * e[26] + e[33] * e[23] * e[35] - e[30] * e[29] * e[20] - e[30] * e[35] * e[26] - e[30] * e[28] * e[19] - e[30] * e[34] * e[25];
            A(4, 19) = e[27] * e[29] * e[32] + e[27] * e[28] * e[31] + e[33] * e[32] * e[35] + e[33] * e[31] * e[34] + 0.5*ep3[30] - 0.5*e[30] * ep2[28] - 0.5*e[30] * ep2[29] - 0.5*e[30] * ep2[34] + 0.5*e[30] * ep2[33] + 0.5*ep2[27] * e[30] + 0.5*e[30] * ep2[32] + 0.5*e[30] * ep2[31] - 0.5*e[30] * ep2[35];
            A(5, 0) = -0.5*e[4] * ep2[6] - 0.5*e[4] * ep2[0] + e[1] * e[2] * e[5] + 0.5*e[4] * ep2[7] + e[1] * e[0] * e[3] + e[7] * e[5] * e[8] - 0.5*e[4] * ep2[8] + 0.5*e[4] * ep2[3] + 0.5*e[4] * ep2[5] + e[7] * e[3] * e[6] - 0.5*e[4] * ep2[2] + 0.5*ep3[4] + 0.5*ep2[1] * e[4];
            A(5, 1) = -0.5*e[13] * ep2[15] + 0.5*e[13] * ep2[16] + 0.5*e[13] * ep2[12] + e[16] * e[12] * e[15] + 0.5*ep3[13] + e[10] * e[11] * e[14] + 0.5*e[13] * ep2[14] - 0.5*e[13] * ep2[17] - 0.5*e[13] * ep2[11] - 0.5*e[13] * ep2[9] + 0.5*ep2[10] * e[13] + e[10] * e[9] * e[12] + e[16] * e[14] * e[17];
            A(5, 2) = e[10] * e[1] * e[4] + e[10] * e[0] * e[3] + e[10] * e[2] * e[5] + e[4] * e[12] * e[3] + e[4] * e[14] * e[5] + e[7] * e[12] * e[6] + e[7] * e[3] * e[15] + e[7] * e[4] * e[16] + e[7] * e[14] * e[8] + e[7] * e[5] * e[17] + e[16] * e[3] * e[6] + e[16] * e[5] * e[8] - e[4] * e[11] * e[2] - e[4] * e[15] * e[6] - e[4] * e[9] * e[0] - e[4] * e[17] * e[8] + e[1] * e[9] * e[3] + e[1] * e[0] * e[12] + e[1] * e[11] * e[5] + e[1] * e[2] * e[14] + 1.5*e[13] * ep2[4] + 0.5*e[13] * ep2[3] + 0.5*e[13] * ep2[5] + 0.5*e[13] * ep2[7] + 0.5*ep2[1] * e[13] - 0.5*e[13] * ep2[0] - 0.5*e[13] * ep2[6] - 0.5*e[13] * ep2[2] - 0.5*e[13] * ep2[8];
            A(5, 3) = e[13] * e[12] * e[3] + e[13] * e[14] * e[5] + e[16] * e[12] * e[6] + e[16] * e[3] * e[15] + e[16] * e[13] * e[7] + e[16] * e[14] * e[8] + e[16] * e[5] * e[17] + e[7] * e[14] * e[17] + e[7] * e[12] * e[15] + e[1] * e[11] * e[14] + e[1] * e[9] * e[12] + e[1] * e[10] * e[13] + e[10] * e[9] * e[3] + e[10] * e[0] * e[12] + e[10] * e[11] * e[5] + e[10] * e[2] * e[14] - e[13] * e[11] * e[2] - e[13] * e[15] * e[6] - e[13] * e[9] * e[0] - e[13] * e[17] * e[8] + 1.5*ep2[13] * e[4] + 0.5*e[4] * ep2[16] - 0.5*e[4] * ep2[9] - 0.5*e[4] * ep2[11] + 0.5*e[4] * ep2[12] - 0.5*e[4] * ep2[15] - 0.5*e[4] * ep2[17] + 0.5*e[4] * ep2[10] + 0.5*e[4] * ep2[14];
            A(5, 4) = e[19] * e[1] * e[4] + e[19] * e[0] * e[3] + e[19] * e[2] * e[5] + e[4] * e[21] * e[3] + e[4] * e[23] * e[5] + e[7] * e[21] * e[6] + e[7] * e[3] * e[24] + e[7] * e[4] * e[25] + e[7] * e[23] * e[8] + e[7] * e[5] * e[26] + e[25] * e[3] * e[6] + e[25] * e[5] * e[8] + e[1] * e[18] * e[3] + e[1] * e[0] * e[21] + e[1] * e[20] * e[5] + e[1] * e[2] * e[23] - e[4] * e[26] * e[8] - e[4] * e[20] * e[2] - e[4] * e[18] * e[0] - e[4] * e[24] * e[6] + 1.5*e[22] * ep2[4] - 0.5*e[22] * ep2[0] - 0.5*e[22] * ep2[6] + 0.5*e[22] * ep2[5] + 0.5*e[22] * ep2[1] + 0.5*e[22] * ep2[7] + 0.5*e[22] * ep2[3] - 0.5*e[22] * ep2[2] - 0.5*e[22] * ep2[8];
            A(5, 5) = e[34] * e[5] * e[8] + e[1] * e[27] * e[3] + e[1] * e[0] * e[30] + e[1] * e[28] * e[4] + e[1] * e[29] * e[5] + e[1] * e[2] * e[32] - e[4] * e[27] * e[0] + e[4] * e[34] * e[7] + e[4] * e[32] * e[5] - e[4] * e[33] * e[6] + e[4] * e[30] * e[3] - e[4] * e[35] * e[8] - e[4] * e[29] * e[2] + e[28] * e[0] * e[3] + e[28] * e[2] * e[5] + e[7] * e[30] * e[6] + e[7] * e[3] * e[33] + e[7] * e[32] * e[8] + e[7] * e[5] * e[35] + e[34] * e[3] * e[6] + 0.5*ep2[1] * e[31] + 1.5*e[31] * ep2[4] - 0.5*e[31] * ep2[0] - 0.5*e[31] * ep2[6] + 0.5*e[31] * ep2[5] + 0.5*e[31] * ep2[7] + 0.5*e[31] * ep2[3] - 0.5*e[31] * ep2[2] - 0.5*e[31] * ep2[8];
            A(5, 6) = e[19] * e[11] * e[14] + e[19] * e[9] * e[12] + e[19] * e[10] * e[13] + e[13] * e[21] * e[12] + e[13] * e[23] * e[14] + e[16] * e[21] * e[15] + e[16] * e[12] * e[24] + e[16] * e[23] * e[17] + e[16] * e[14] * e[26] + e[16] * e[13] * e[25] + e[25] * e[14] * e[17] + e[25] * e[12] * e[15] - e[13] * e[24] * e[15] - e[13] * e[26] * e[17] - e[13] * e[20] * e[11] - e[13] * e[18] * e[9] + e[10] * e[18] * e[12] + e[10] * e[9] * e[21] + e[10] * e[20] * e[14] + e[10] * e[11] * e[23] + 1.5*e[22] * ep2[13] + 0.5*e[22] * ep2[14] + 0.5*e[22] * ep2[12] + 0.5*e[22] * ep2[16] + 0.5*ep2[10] * e[22] - 0.5*e[22] * ep2[9] - 0.5*e[22] * ep2[11] - 0.5*e[22] * ep2[15] - 0.5*e[22] * ep2[17];
            A(5, 7) = e[10] * e[27] * e[12] + e[10] * e[9] * e[30] + e[10] * e[29] * e[14] + e[10] * e[11] * e[32] + e[10] * e[28] * e[13] + e[28] * e[11] * e[14] + e[28] * e[9] * e[12] + e[13] * e[30] * e[12] + e[13] * e[32] * e[14] + e[16] * e[30] * e[15] + e[16] * e[12] * e[33] + e[16] * e[32] * e[17] + e[16] * e[14] * e[35] + e[16] * e[13] * e[34] + e[34] * e[14] * e[17] + e[34] * e[12] * e[15] - e[13] * e[27] * e[9] - e[13] * e[33] * e[15] - e[13] * e[35] * e[17] - e[13] * e[29] * e[11] + 0.5*ep2[10] * e[31] + 0.5*e[31] * ep2[16] - 0.5*e[31] * ep2[9] - 0.5*e[31] * ep2[11] + 0.5*e[31] * ep2[12] - 0.5*e[31] * ep2[15] - 0.5*e[31] * ep2[17] + 0.5*e[31] * ep2[14] + 1.5*e[31] * ep2[13];
            A(5, 8) = e[1] * e[20] * e[14] + e[1] * e[11] * e[23] + e[13] * e[21] * e[3] - e[13] * e[26] * e[8] - e[13] * e[20] * e[2] - e[13] * e[18] * e[0] + e[13] * e[23] * e[5] - e[13] * e[24] * e[6] - e[22] * e[11] * e[2] - e[22] * e[15] * e[6] - e[22] * e[9] * e[0] + e[22] * e[14] * e[5] + e[22] * e[12] * e[3] - e[22] * e[17] * e[8] + e[16] * e[21] * e[6] + e[16] * e[3] * e[24] + e[16] * e[4] * e[25] + e[16] * e[23] * e[8] + e[16] * e[5] * e[26] - e[4] * e[24] * e[15] - e[4] * e[26] * e[17] - e[4] * e[20] * e[11] - e[4] * e[18] * e[9] + e[25] * e[12] * e[6] + e[25] * e[3] * e[15] + e[25] * e[14] * e[8] + e[25] * e[5] * e[17] + e[10] * e[18] * e[3] + e[10] * e[0] * e[21] + e[10] * e[19] * e[4] + e[10] * e[1] * e[22] + e[10] * e[20] * e[5] + e[10] * e[2] * e[23] + e[19] * e[9] * e[3] + e[19] * e[0] * e[12] + e[19] * e[1] * e[13] + e[19] * e[11] * e[5] + e[19] * e[2] * e[14] + e[4] * e[21] * e[12] + e[4] * e[23] * e[14] + 3.*e[4] * e[22] * e[13] + e[7] * e[21] * e[15] + e[7] * e[12] * e[24] + e[7] * e[23] * e[17] + e[7] * e[14] * e[26] + e[7] * e[22] * e[16] + e[7] * e[13] * e[25] + e[1] * e[18] * e[12] + e[1] * e[9] * e[21];
            A(5, 9) = -e[13] * e[29] * e[2] - e[31] * e[11] * e[2] - e[31] * e[15] * e[6] - e[31] * e[9] * e[0] + e[31] * e[14] * e[5] + e[31] * e[12] * e[3] - e[31] * e[17] * e[8] + e[16] * e[30] * e[6] + e[16] * e[3] * e[33] + e[16] * e[4] * e[34] + e[16] * e[32] * e[8] + e[16] * e[5] * e[35] - e[4] * e[27] * e[9] + e[4] * e[28] * e[10] - e[4] * e[33] * e[15] - e[4] * e[35] * e[17] - e[4] * e[29] * e[11] + e[34] * e[12] * e[6] + e[34] * e[3] * e[15] + e[34] * e[14] * e[8] + e[34] * e[5] * e[17] + e[10] * e[27] * e[3] + e[10] * e[0] * e[30] + e[10] * e[29] * e[5] + e[10] * e[2] * e[32] + e[28] * e[9] * e[3] + e[28] * e[0] * e[12] + e[28] * e[11] * e[5] + e[28] * e[2] * e[14] + e[4] * e[30] * e[12] + e[4] * e[32] * e[14] + 3.*e[4] * e[31] * e[13] + e[7] * e[30] * e[15] + e[7] * e[12] * e[33] + e[7] * e[32] * e[17] + e[7] * e[14] * e[35] + e[7] * e[31] * e[16] + e[7] * e[13] * e[34] + e[1] * e[27] * e[12] + e[1] * e[9] * e[30] + e[1] * e[29] * e[14] + e[1] * e[11] * e[32] + e[1] * e[28] * e[13] + e[1] * e[10] * e[31] - e[13] * e[27] * e[0] + e[13] * e[32] * e[5] - e[13] * e[33] * e[6] + e[13] * e[30] * e[3] - e[13] * e[35] * e[8];
            A(5, 10) = e[25] * e[21] * e[6] + e[25] * e[3] * e[24] + e[25] * e[23] * e[8] + e[25] * e[5] * e[26] + e[7] * e[21] * e[24] + e[7] * e[23] * e[26] + e[19] * e[18] * e[3] + e[19] * e[0] * e[21] + e[19] * e[1] * e[22] + e[19] * e[20] * e[5] + e[19] * e[2] * e[23] + e[22] * e[21] * e[3] + e[22] * e[23] * e[5] - e[22] * e[26] * e[8] - e[22] * e[20] * e[2] - e[22] * e[18] * e[0] + e[22] * e[25] * e[7] - e[22] * e[24] * e[6] + e[1] * e[18] * e[21] + e[1] * e[20] * e[23] + 0.5*e[4] * ep2[25] - 0.5*e[4] * ep2[26] - 0.5*e[4] * ep2[18] - 0.5*e[4] * ep2[20] - 0.5*e[4] * ep2[24] + 0.5*ep2[19] * e[4] + 1.5*ep2[22] * e[4] + 0.5*e[4] * ep2[21] + 0.5*e[4] * ep2[23];
            A(5, 11) = -e[31] * e[20] * e[2] - e[31] * e[18] * e[0] + e[31] * e[23] * e[5] - e[31] * e[24] * e[6] + e[7] * e[30] * e[24] + e[7] * e[21] * e[33] + e[7] * e[32] * e[26] + e[7] * e[23] * e[35] + e[25] * e[30] * e[6] + e[25] * e[3] * e[33] + e[25] * e[31] * e[7] + e[25] * e[4] * e[34] + e[25] * e[32] * e[8] + e[25] * e[5] * e[35] + e[34] * e[21] * e[6] + e[34] * e[3] * e[24] + e[34] * e[22] * e[7] + e[34] * e[23] * e[8] + e[34] * e[5] * e[26] + e[1] * e[27] * e[21] + e[1] * e[18] * e[30] + e[1] * e[28] * e[22] + e[1] * e[19] * e[31] + e[1] * e[29] * e[23] + e[1] * e[20] * e[32] + e[19] * e[27] * e[3] + e[19] * e[0] * e[30] + e[19] * e[28] * e[4] + e[19] * e[29] * e[5] + e[19] * e[2] * e[32] + e[28] * e[18] * e[3] + e[28] * e[0] * e[21] + e[28] * e[20] * e[5] + e[28] * e[2] * e[23] + e[4] * e[30] * e[21] + 3.*e[4] * e[31] * e[22] + e[4] * e[32] * e[23] - e[4] * e[27] * e[18] - e[4] * e[33] * e[24] - e[4] * e[29] * e[20] - e[4] * e[35] * e[26] - e[22] * e[27] * e[0] + e[22] * e[32] * e[5] - e[22] * e[33] * e[6] + e[22] * e[30] * e[3] - e[22] * e[35] * e[8] - e[22] * e[29] * e[2] + e[31] * e[21] * e[3] - e[31] * e[26] * e[8];
            A(5, 12) = e[1] * e[27] * e[30] + e[1] * e[29] * e[32] + e[1] * e[28] * e[31] + e[31] * e[30] * e[3] + e[31] * e[32] * e[5] + e[7] * e[30] * e[33] + e[7] * e[32] * e[35] + e[7] * e[31] * e[34] + e[28] * e[27] * e[3] + e[28] * e[0] * e[30] + e[28] * e[29] * e[5] + e[28] * e[2] * e[32] + e[34] * e[30] * e[6] + e[34] * e[3] * e[33] + e[34] * e[32] * e[8] + e[34] * e[5] * e[35] - e[31] * e[27] * e[0] - e[31] * e[33] * e[6] - e[31] * e[35] * e[8] - e[31] * e[29] * e[2] + 0.5*e[4] * ep2[30] + 0.5*e[4] * ep2[32] + 1.5*e[4] * ep2[31] - 0.5*e[4] * ep2[27] + 0.5*e[4] * ep2[28] - 0.5*e[4] * ep2[29] - 0.5*e[4] * ep2[33] + 0.5*e[4] * ep2[34] - 0.5*e[4] * ep2[35];
            A(5, 13) = e[22] * e[21] * e[12] + e[22] * e[23] * e[14] + e[25] * e[21] * e[15] + e[25] * e[12] * e[24] + e[25] * e[23] * e[17] + e[25] * e[14] * e[26] + e[25] * e[22] * e[16] + e[16] * e[21] * e[24] + e[16] * e[23] * e[26] + e[10] * e[19] * e[22] + e[10] * e[18] * e[21] + e[10] * e[20] * e[23] + e[19] * e[18] * e[12] + e[19] * e[9] * e[21] + e[19] * e[20] * e[14] + e[19] * e[11] * e[23] - e[22] * e[24] * e[15] - e[22] * e[26] * e[17] - e[22] * e[20] * e[11] - e[22] * e[18] * e[9] - 0.5*e[13] * ep2[26] - 0.5*e[13] * ep2[18] + 0.5*e[13] * ep2[23] + 0.5*e[13] * ep2[19] - 0.5*e[13] * ep2[20] - 0.5*e[13] * ep2[24] + 0.5*e[13] * ep2[21] + 1.5*ep2[22] * e[13] + 0.5*e[13] * ep2[25];
            A(5, 14) = e[13] * e[30] * e[21] + 3.*e[13] * e[31] * e[22] + e[13] * e[32] * e[23] + e[10] * e[27] * e[21] + e[10] * e[18] * e[30] + e[10] * e[28] * e[22] + e[10] * e[19] * e[31] + e[10] * e[29] * e[23] + e[10] * e[20] * e[32] + e[22] * e[30] * e[12] + e[22] * e[32] * e[14] + e[31] * e[21] * e[12] + e[31] * e[23] * e[14] - e[13] * e[27] * e[18] - e[13] * e[33] * e[24] - e[13] * e[29] * e[20] - e[13] * e[35] * e[26] + e[13] * e[28] * e[19] + e[13] * e[34] * e[25] + e[19] * e[27] * e[12] + e[19] * e[9] * e[30] + e[19] * e[29] * e[14] + e[19] * e[11] * e[32] + e[28] * e[18] * e[12] + e[28] * e[9] * e[21] + e[28] * e[20] * e[14] + e[28] * e[11] * e[23] + e[16] * e[30] * e[24] + e[16] * e[21] * e[33] + e[16] * e[31] * e[25] + e[16] * e[22] * e[34] + e[16] * e[32] * e[26] + e[16] * e[23] * e[35] - e[22] * e[27] * e[9] - e[22] * e[33] * e[15] - e[22] * e[35] * e[17] - e[22] * e[29] * e[11] - e[31] * e[24] * e[15] - e[31] * e[26] * e[17] - e[31] * e[20] * e[11] - e[31] * e[18] * e[9] + e[25] * e[30] * e[15] + e[25] * e[12] * e[33] + e[25] * e[32] * e[17] + e[25] * e[14] * e[35] + e[34] * e[21] * e[15] + e[34] * e[12] * e[24] + e[34] * e[23] * e[17] + e[34] * e[14] * e[26];
            A(5, 15) = e[16] * e[30] * e[33] + e[16] * e[32] * e[35] + e[10] * e[27] * e[30] + e[10] * e[29] * e[32] + e[10] * e[28] * e[31] + e[34] * e[30] * e[15] + e[34] * e[12] * e[33] + e[34] * e[32] * e[17] + e[34] * e[14] * e[35] + e[34] * e[31] * e[16] + e[28] * e[27] * e[12] + e[28] * e[9] * e[30] + e[28] * e[29] * e[14] + e[28] * e[11] * e[32] - e[31] * e[27] * e[9] + e[31] * e[30] * e[12] + e[31] * e[32] * e[14] - e[31] * e[33] * e[15] - e[31] * e[35] * e[17] - e[31] * e[29] * e[11] - 0.5*e[13] * ep2[27] + 0.5*e[13] * ep2[32] + 0.5*e[13] * ep2[28] - 0.5*e[13] * ep2[29] + 1.5*e[13] * ep2[31] - 0.5*e[13] * ep2[33] + 0.5*e[13] * ep2[30] + 0.5*e[13] * ep2[34] - 0.5*e[13] * ep2[35];
            A(5, 16) = e[25] * e[23] * e[26] + e[19] * e[20] * e[23] + e[19] * e[18] * e[21] + e[25] * e[21] * e[24] + 0.5*ep3[22] + 0.5*e[22] * ep2[23] + 0.5*ep2[19] * e[22] - 0.5*e[22] * ep2[18] - 0.5*e[22] * ep2[24] + 0.5*e[22] * ep2[21] + 0.5*e[22] * ep2[25] - 0.5*e[22] * ep2[20] - 0.5*e[22] * ep2[26];
            A(5, 17) = e[19] * e[27] * e[21] + e[19] * e[18] * e[30] + e[19] * e[28] * e[22] + e[19] * e[29] * e[23] + e[19] * e[20] * e[32] + e[28] * e[18] * e[21] + e[28] * e[20] * e[23] + e[22] * e[30] * e[21] + e[22] * e[32] * e[23] + e[25] * e[30] * e[24] + e[25] * e[21] * e[33] + e[25] * e[22] * e[34] + e[25] * e[32] * e[26] + e[25] * e[23] * e[35] + e[34] * e[21] * e[24] + e[34] * e[23] * e[26] - e[22] * e[27] * e[18] - e[22] * e[33] * e[24] - e[22] * e[29] * e[20] - e[22] * e[35] * e[26] + 0.5*ep2[19] * e[31] + 1.5*e[31] * ep2[22] + 0.5*e[31] * ep2[21] + 0.5*e[31] * ep2[23] + 0.5*e[31] * ep2[25] - 0.5*e[31] * ep2[26] - 0.5*e[31] * ep2[18] - 0.5*e[31] * ep2[20] - 0.5*e[31] * ep2[24];
            A(5, 18) = 0.5*e[22] * ep2[30] + 0.5*e[22] * ep2[32] + 1.5*e[22] * ep2[31] + 0.5*e[22] * ep2[34] - 0.5*e[22] * ep2[27] - 0.5*e[22] * ep2[29] - 0.5*e[22] * ep2[33] - 0.5*e[22] * ep2[35] + e[28] * e[18] * e[30] + e[28] * e[29] * e[23] + e[28] * e[20] * e[32] + e[31] * e[30] * e[21] + e[31] * e[32] * e[23] + e[25] * e[30] * e[33] + e[25] * e[32] * e[35] + e[25] * e[31] * e[34] + e[34] * e[30] * e[24] + e[34] * e[21] * e[33] + e[34] * e[32] * e[26] + e[34] * e[23] * e[35] - e[31] * e[27] * e[18] - e[31] * e[33] * e[24] - e[31] * e[29] * e[20] - e[31] * e[35] * e[26] + e[19] * e[27] * e[30] + e[19] * e[29] * e[32] + e[19] * e[28] * e[31] + e[28] * e[27] * e[21] + 0.5*ep2[28] * e[22];
            A(5, 19) = e[34] * e[32] * e[35] - 0.5*e[31] * ep2[35] + 0.5*e[31] * ep2[34] + 0.5*ep2[28] * e[31] + 0.5*ep3[31] + 0.5*e[31] * ep2[32] + e[34] * e[30] * e[33] - 0.5*e[31] * ep2[27] + 0.5*e[31] * ep2[30] - 0.5*e[31] * ep2[33] - 0.5*e[31] * ep2[29] + e[28] * e[29] * e[32] + e[28] * e[27] * e[30];
            A(6, 0) = e[8] * e[3] * e[6] + 0.5*ep2[2] * e[5] - 0.5*e[5] * ep2[0] + 0.5*e[5] * ep2[4] - 0.5*e[5] * ep2[6] + 0.5*e[5] * ep2[8] + e[8] * e[4] * e[7] + 0.5*ep3[5] + e[2] * e[0] * e[3] + 0.5*e[5] * ep2[3] - 0.5*e[5] * ep2[7] + e[2] * e[1] * e[4] - 0.5*e[5] * ep2[1];
            A(6, 1) = -0.5*e[14] * ep2[16] - 0.5*e[14] * ep2[10] - 0.5*e[14] * ep2[9] + e[11] * e[9] * e[12] + 0.5*ep3[14] + e[17] * e[13] * e[16] + 0.5*e[14] * ep2[12] + e[11] * e[10] * e[13] - 0.5*e[14] * ep2[15] + 0.5*e[14] * ep2[17] + e[17] * e[12] * e[15] + 0.5*ep2[11] * e[14] + 0.5*e[14] * ep2[13];
            A(6, 2) = e[11] * e[1] * e[4] + e[11] * e[0] * e[3] + e[11] * e[2] * e[5] + e[5] * e[12] * e[3] + e[5] * e[13] * e[4] + e[8] * e[12] * e[6] + e[8] * e[3] * e[15] + e[8] * e[13] * e[7] + e[8] * e[4] * e[16] + e[8] * e[5] * e[17] + e[17] * e[4] * e[7] + e[17] * e[3] * e[6] - e[5] * e[10] * e[1] - e[5] * e[16] * e[7] - e[5] * e[15] * e[6] - e[5] * e[9] * e[0] + e[2] * e[9] * e[3] + e[2] * e[0] * e[12] + e[2] * e[10] * e[4] + e[2] * e[1] * e[13] + 0.5*ep2[2] * e[14] - 0.5*e[14] * ep2[0] - 0.5*e[14] * ep2[6] - 0.5*e[14] * ep2[1] - 0.5*e[14] * ep2[7] + 1.5*e[14] * ep2[5] + 0.5*e[14] * ep2[4] + 0.5*e[14] * ep2[3] + 0.5*e[14] * ep2[8];
            A(6, 3) = e[14] * e[12] * e[3] + e[14] * e[13] * e[4] + e[17] * e[12] * e[6] + e[17] * e[3] * e[15] + e[17] * e[13] * e[7] + e[17] * e[4] * e[16] + e[17] * e[14] * e[8] + e[8] * e[12] * e[15] + e[8] * e[13] * e[16] + e[2] * e[11] * e[14] + e[2] * e[9] * e[12] + e[2] * e[10] * e[13] + e[11] * e[9] * e[3] + e[11] * e[0] * e[12] + e[11] * e[10] * e[4] + e[11] * e[1] * e[13] - e[14] * e[10] * e[1] - e[14] * e[16] * e[7] - e[14] * e[15] * e[6] - e[14] * e[9] * e[0] - 0.5*e[5] * ep2[16] - 0.5*e[5] * ep2[9] + 0.5*e[5] * ep2[11] + 0.5*e[5] * ep2[12] - 0.5*e[5] * ep2[15] - 0.5*e[5] * ep2[10] + 0.5*e[5] * ep2[13] + 1.5*ep2[14] * e[5] + 0.5*e[5] * ep2[17];
            A(6, 4) = e[20] * e[1] * e[4] + e[20] * e[0] * e[3] + e[20] * e[2] * e[5] + e[5] * e[21] * e[3] + e[5] * e[22] * e[4] + e[8] * e[21] * e[6] + e[8] * e[3] * e[24] + e[8] * e[22] * e[7] + e[8] * e[4] * e[25] + e[8] * e[5] * e[26] + e[26] * e[4] * e[7] + e[26] * e[3] * e[6] + e[2] * e[18] * e[3] + e[2] * e[0] * e[21] + e[2] * e[19] * e[4] + e[2] * e[1] * e[22] - e[5] * e[19] * e[1] - e[5] * e[18] * e[0] - e[5] * e[25] * e[7] - e[5] * e[24] * e[6] + 0.5*e[23] * ep2[4] - 0.5*e[23] * ep2[0] - 0.5*e[23] * ep2[6] + 1.5*e[23] * ep2[5] - 0.5*e[23] * ep2[1] - 0.5*e[23] * ep2[7] + 0.5*e[23] * ep2[3] + 0.5*e[23] * ep2[2] + 0.5*e[23] * ep2[8];
            A(6, 5) = e[2] * e[27] * e[3] + e[2] * e[0] * e[30] + e[2] * e[28] * e[4] + e[2] * e[1] * e[31] + e[2] * e[29] * e[5] - e[5] * e[27] * e[0] - e[5] * e[34] * e[7] - e[5] * e[33] * e[6] + e[5] * e[30] * e[3] + e[5] * e[35] * e[8] - e[5] * e[28] * e[1] + e[5] * e[31] * e[4] + e[29] * e[1] * e[4] + e[29] * e[0] * e[3] + e[8] * e[30] * e[6] + e[8] * e[3] * e[33] + e[8] * e[31] * e[7] + e[8] * e[4] * e[34] + e[35] * e[4] * e[7] + e[35] * e[3] * e[6] + 0.5*ep2[2] * e[32] + 1.5*e[32] * ep2[5] + 0.5*e[32] * ep2[4] - 0.5*e[32] * ep2[0] - 0.5*e[32] * ep2[6] - 0.5*e[32] * ep2[1] - 0.5*e[32] * ep2[7] + 0.5*e[32] * ep2[3] + 0.5*e[32] * ep2[8];
            A(6, 6) = e[14] * e[21] * e[12] + e[14] * e[22] * e[13] + e[17] * e[21] * e[15] + e[17] * e[12] * e[24] + e[17] * e[14] * e[26] + e[17] * e[22] * e[16] + e[17] * e[13] * e[25] + e[26] * e[12] * e[15] + e[26] * e[13] * e[16] - e[14] * e[24] * e[15] - e[14] * e[25] * e[16] - e[14] * e[18] * e[9] - e[14] * e[19] * e[10] + e[11] * e[18] * e[12] + e[11] * e[9] * e[21] + e[11] * e[19] * e[13] + e[11] * e[10] * e[22] + e[20] * e[11] * e[14] + e[20] * e[9] * e[12] + e[20] * e[10] * e[13] + 1.5*e[23] * ep2[14] + 0.5*e[23] * ep2[12] + 0.5*e[23] * ep2[13] + 0.5*e[23] * ep2[17] + 0.5*ep2[11] * e[23] - 0.5*e[23] * ep2[16] - 0.5*e[23] * ep2[9] - 0.5*e[23] * ep2[15] - 0.5*e[23] * ep2[10];
            A(6, 7) = e[11] * e[27] * e[12] + e[11] * e[9] * e[30] + e[11] * e[29] * e[14] + e[11] * e[28] * e[13] + e[11] * e[10] * e[31] + e[29] * e[9] * e[12] + e[29] * e[10] * e[13] + e[14] * e[30] * e[12] + e[14] * e[31] * e[13] + e[17] * e[30] * e[15] + e[17] * e[12] * e[33] + e[17] * e[14] * e[35] + e[17] * e[31] * e[16] + e[17] * e[13] * e[34] + e[35] * e[12] * e[15] + e[35] * e[13] * e[16] - e[14] * e[27] * e[9] - e[14] * e[28] * e[10] - e[14] * e[33] * e[15] - e[14] * e[34] * e[16] + 0.5*ep2[11] * e[32] - 0.5*e[32] * ep2[16] - 0.5*e[32] * ep2[9] + 0.5*e[32] * ep2[12] - 0.5*e[32] * ep2[15] + 0.5*e[32] * ep2[17] - 0.5*e[32] * ep2[10] + 1.5*e[32] * ep2[14] + 0.5*e[32] * ep2[13];
            A(6, 8) = -e[14] * e[19] * e[1] + e[14] * e[22] * e[4] - e[14] * e[18] * e[0] - e[14] * e[25] * e[7] - e[14] * e[24] * e[6] - e[23] * e[10] * e[1] + e[23] * e[13] * e[4] - e[23] * e[16] * e[7] - e[23] * e[15] * e[6] - e[23] * e[9] * e[0] + e[23] * e[12] * e[3] + e[17] * e[21] * e[6] + e[17] * e[3] * e[24] + e[17] * e[22] * e[7] + e[17] * e[4] * e[25] + e[17] * e[5] * e[26] - e[5] * e[24] * e[15] - e[5] * e[25] * e[16] - e[5] * e[18] * e[9] - e[5] * e[19] * e[10] + e[26] * e[12] * e[6] + e[26] * e[3] * e[15] + e[26] * e[13] * e[7] + e[26] * e[4] * e[16] + e[11] * e[18] * e[3] + e[11] * e[0] * e[21] + e[11] * e[19] * e[4] + e[11] * e[1] * e[22] + e[11] * e[20] * e[5] + e[11] * e[2] * e[23] + e[20] * e[9] * e[3] + e[20] * e[0] * e[12] + e[20] * e[10] * e[4] + e[20] * e[1] * e[13] + e[20] * e[2] * e[14] + e[5] * e[21] * e[12] + 3.*e[5] * e[23] * e[14] + e[5] * e[22] * e[13] + e[8] * e[21] * e[15] + e[8] * e[12] * e[24] + e[8] * e[23] * e[17] + e[8] * e[14] * e[26] + e[8] * e[22] * e[16] + e[8] * e[13] * e[25] + e[2] * e[18] * e[12] + e[2] * e[9] * e[21] + e[2] * e[19] * e[13] + e[2] * e[10] * e[22] + e[14] * e[21] * e[3];
            A(6, 9) = -e[32] * e[10] * e[1] + e[32] * e[13] * e[4] - e[32] * e[16] * e[7] - e[32] * e[15] * e[6] - e[32] * e[9] * e[0] + e[32] * e[12] * e[3] + e[17] * e[30] * e[6] + e[17] * e[3] * e[33] + e[17] * e[31] * e[7] + e[17] * e[4] * e[34] + e[17] * e[5] * e[35] - e[5] * e[27] * e[9] - e[5] * e[28] * e[10] - e[5] * e[33] * e[15] - e[5] * e[34] * e[16] + e[5] * e[29] * e[11] + e[35] * e[12] * e[6] + e[35] * e[3] * e[15] + e[35] * e[13] * e[7] + e[35] * e[4] * e[16] + e[11] * e[27] * e[3] + e[11] * e[0] * e[30] + e[11] * e[28] * e[4] + e[11] * e[1] * e[31] + e[29] * e[9] * e[3] + e[29] * e[0] * e[12] + e[29] * e[10] * e[4] + e[29] * e[1] * e[13] + e[5] * e[30] * e[12] + 3.*e[5] * e[32] * e[14] + e[5] * e[31] * e[13] + e[8] * e[30] * e[15] + e[8] * e[12] * e[33] + e[8] * e[32] * e[17] + e[8] * e[14] * e[35] + e[8] * e[31] * e[16] + e[8] * e[13] * e[34] + e[2] * e[27] * e[12] + e[2] * e[9] * e[30] + e[2] * e[29] * e[14] + e[2] * e[11] * e[32] + e[2] * e[28] * e[13] + e[2] * e[10] * e[31] - e[14] * e[27] * e[0] - e[14] * e[34] * e[7] - e[14] * e[33] * e[6] + e[14] * e[30] * e[3] - e[14] * e[28] * e[1] + e[14] * e[31] * e[4];
            A(6, 10) = e[8] * e[22] * e[25] + e[8] * e[21] * e[24] + e[20] * e[18] * e[3] + e[20] * e[0] * e[21] + e[20] * e[19] * e[4] + e[20] * e[1] * e[22] + e[20] * e[2] * e[23] + e[23] * e[21] * e[3] + e[23] * e[22] * e[4] + e[23] * e[26] * e[8] - e[23] * e[19] * e[1] - e[23] * e[18] * e[0] - e[23] * e[25] * e[7] - e[23] * e[24] * e[6] + e[2] * e[19] * e[22] + e[2] * e[18] * e[21] + e[26] * e[21] * e[6] + e[26] * e[3] * e[24] + e[26] * e[22] * e[7] + e[26] * e[4] * e[25] + 0.5*ep2[20] * e[5] + 1.5*ep2[23] * e[5] + 0.5*e[5] * ep2[22] + 0.5*e[5] * ep2[21] + 0.5*e[5] * ep2[26] - 0.5*e[5] * ep2[18] - 0.5*e[5] * ep2[19] - 0.5*e[5] * ep2[24] - 0.5*e[5] * ep2[25];
            A(6, 11) = -e[32] * e[24] * e[6] + e[8] * e[30] * e[24] + e[8] * e[21] * e[33] + e[8] * e[31] * e[25] + e[8] * e[22] * e[34] + e[26] * e[30] * e[6] + e[26] * e[3] * e[33] + e[26] * e[31] * e[7] + e[26] * e[4] * e[34] + e[26] * e[32] * e[8] + e[26] * e[5] * e[35] + e[35] * e[21] * e[6] + e[35] * e[3] * e[24] + e[35] * e[22] * e[7] + e[35] * e[4] * e[25] + e[35] * e[23] * e[8] + e[2] * e[27] * e[21] + e[2] * e[18] * e[30] + e[2] * e[28] * e[22] + e[2] * e[19] * e[31] + e[2] * e[29] * e[23] + e[2] * e[20] * e[32] + e[20] * e[27] * e[3] + e[20] * e[0] * e[30] + e[20] * e[28] * e[4] + e[20] * e[1] * e[31] + e[20] * e[29] * e[5] + e[29] * e[18] * e[3] + e[29] * e[0] * e[21] + e[29] * e[19] * e[4] + e[29] * e[1] * e[22] + e[5] * e[30] * e[21] + e[5] * e[31] * e[22] + 3.*e[5] * e[32] * e[23] - e[5] * e[27] * e[18] - e[5] * e[33] * e[24] - e[5] * e[28] * e[19] - e[5] * e[34] * e[25] - e[23] * e[27] * e[0] - e[23] * e[34] * e[7] - e[23] * e[33] * e[6] + e[23] * e[30] * e[3] - e[23] * e[28] * e[1] + e[23] * e[31] * e[4] + e[32] * e[21] * e[3] - e[32] * e[19] * e[1] + e[32] * e[22] * e[4] - e[32] * e[18] * e[0] - e[32] * e[25] * e[7];
            A(6, 12) = e[2] * e[27] * e[30] + e[2] * e[29] * e[32] + e[2] * e[28] * e[31] + e[32] * e[30] * e[3] + e[32] * e[31] * e[4] + e[8] * e[30] * e[33] + e[8] * e[32] * e[35] + e[8] * e[31] * e[34] + e[29] * e[27] * e[3] + e[29] * e[0] * e[30] + e[29] * e[28] * e[4] + e[29] * e[1] * e[31] + e[35] * e[30] * e[6] + e[35] * e[3] * e[33] + e[35] * e[31] * e[7] + e[35] * e[4] * e[34] - e[32] * e[27] * e[0] - e[32] * e[34] * e[7] - e[32] * e[33] * e[6] - e[32] * e[28] * e[1] + 0.5*e[5] * ep2[30] + 1.5*e[5] * ep2[32] + 0.5*e[5] * ep2[31] - 0.5*e[5] * ep2[27] - 0.5*e[5] * ep2[28] + 0.5*e[5] * ep2[29] - 0.5*e[5] * ep2[33] - 0.5*e[5] * ep2[34] + 0.5*e[5] * ep2[35];
            A(6, 13) = 1.5*ep2[23] * e[14] + 0.5*e[14] * ep2[26] - 0.5*e[14] * ep2[18] - 0.5*e[14] * ep2[19] + 0.5*e[14] * ep2[20] + 0.5*e[14] * ep2[22] - 0.5*e[14] * ep2[24] + 0.5*e[14] * ep2[21] - 0.5*e[14] * ep2[25] + e[23] * e[21] * e[12] + e[23] * e[22] * e[13] + e[26] * e[21] * e[15] + e[26] * e[12] * e[24] + e[26] * e[23] * e[17] + e[26] * e[22] * e[16] + e[26] * e[13] * e[25] + e[17] * e[22] * e[25] + e[17] * e[21] * e[24] + e[11] * e[19] * e[22] + e[11] * e[18] * e[21] + e[11] * e[20] * e[23] + e[20] * e[18] * e[12] + e[20] * e[9] * e[21] + e[20] * e[19] * e[13] + e[20] * e[10] * e[22] - e[23] * e[24] * e[15] - e[23] * e[25] * e[16] - e[23] * e[18] * e[9] - e[23] * e[19] * e[10];
            A(6, 14) = e[29] * e[18] * e[12] + e[29] * e[9] * e[21] + e[29] * e[19] * e[13] + e[29] * e[10] * e[22] + e[17] * e[30] * e[24] + e[17] * e[21] * e[33] + e[17] * e[31] * e[25] + e[17] * e[22] * e[34] + e[17] * e[32] * e[26] + e[17] * e[23] * e[35] - e[23] * e[27] * e[9] - e[23] * e[28] * e[10] - e[23] * e[33] * e[15] - e[23] * e[34] * e[16] - e[32] * e[24] * e[15] - e[32] * e[25] * e[16] - e[32] * e[18] * e[9] - e[32] * e[19] * e[10] + e[26] * e[30] * e[15] + e[26] * e[12] * e[33] + e[26] * e[31] * e[16] + e[26] * e[13] * e[34] + e[35] * e[21] * e[15] + e[35] * e[12] * e[24] + e[35] * e[22] * e[16] + e[35] * e[13] * e[25] + e[14] * e[30] * e[21] + e[14] * e[31] * e[22] + 3.*e[14] * e[32] * e[23] + e[11] * e[27] * e[21] + e[11] * e[18] * e[30] + e[11] * e[28] * e[22] + e[11] * e[19] * e[31] + e[11] * e[29] * e[23] + e[11] * e[20] * e[32] + e[23] * e[30] * e[12] + e[23] * e[31] * e[13] + e[32] * e[21] * e[12] + e[32] * e[22] * e[13] - e[14] * e[27] * e[18] - e[14] * e[33] * e[24] + e[14] * e[29] * e[20] + e[14] * e[35] * e[26] - e[14] * e[28] * e[19] - e[14] * e[34] * e[25] + e[20] * e[27] * e[12] + e[20] * e[9] * e[30] + e[20] * e[28] * e[13] + e[20] * e[10] * e[31];
            A(6, 15) = -0.5*e[14] * ep2[27] + 1.5*e[14] * ep2[32] - 0.5*e[14] * ep2[28] + 0.5*e[14] * ep2[29] + 0.5*e[14] * ep2[31] - 0.5*e[14] * ep2[33] + 0.5*e[14] * ep2[30] - 0.5*e[14] * ep2[34] + 0.5*e[14] * ep2[35] + e[11] * e[27] * e[30] + e[11] * e[29] * e[32] + e[11] * e[28] * e[31] + e[35] * e[30] * e[15] + e[35] * e[12] * e[33] + e[35] * e[32] * e[17] + e[35] * e[31] * e[16] + e[35] * e[13] * e[34] + e[29] * e[27] * e[12] + e[29] * e[9] * e[30] + e[29] * e[28] * e[13] + e[29] * e[10] * e[31] - e[32] * e[27] * e[9] + e[32] * e[30] * e[12] - e[32] * e[28] * e[10] + e[32] * e[31] * e[13] - e[32] * e[33] * e[15] - e[32] * e[34] * e[16] + e[17] * e[30] * e[33] + e[17] * e[31] * e[34];
            A(6, 16) = 0.5*e[23] * ep2[21] + e[20] * e[19] * e[22] + e[20] * e[18] * e[21] + 0.5*ep3[23] + e[26] * e[22] * e[25] + 0.5*e[23] * ep2[26] - 0.5*e[23] * ep2[18] + 0.5*e[23] * ep2[22] - 0.5*e[23] * ep2[19] + e[26] * e[21] * e[24] + 0.5*ep2[20] * e[23] - 0.5*e[23] * ep2[24] - 0.5*e[23] * ep2[25];
            A(6, 17) = 0.5*ep2[20] * e[32] + 1.5*e[32] * ep2[23] + 0.5*e[32] * ep2[22] + 0.5*e[32] * ep2[21] + 0.5*e[32] * ep2[26] - 0.5*e[32] * ep2[18] - 0.5*e[32] * ep2[19] - 0.5*e[32] * ep2[24] - 0.5*e[32] * ep2[25] + e[20] * e[27] * e[21] + e[20] * e[18] * e[30] + e[20] * e[28] * e[22] + e[20] * e[19] * e[31] + e[20] * e[29] * e[23] + e[29] * e[19] * e[22] + e[29] * e[18] * e[21] + e[23] * e[30] * e[21] + e[23] * e[31] * e[22] + e[26] * e[30] * e[24] + e[26] * e[21] * e[33] + e[26] * e[31] * e[25] + e[26] * e[22] * e[34] + e[26] * e[23] * e[35] + e[35] * e[22] * e[25] + e[35] * e[21] * e[24] - e[23] * e[27] * e[18] - e[23] * e[33] * e[24] - e[23] * e[28] * e[19] - e[23] * e[34] * e[25];
            A(6, 18) = -0.5*e[23] * ep2[33] - 0.5*e[23] * ep2[34] + 0.5*ep2[29] * e[23] + 0.5*e[23] * ep2[30] + 1.5*e[23] * ep2[32] + 0.5*e[23] * ep2[31] + 0.5*e[23] * ep2[35] - 0.5*e[23] * ep2[27] - 0.5*e[23] * ep2[28] + e[32] * e[30] * e[21] + e[32] * e[31] * e[22] + e[26] * e[30] * e[33] + e[26] * e[32] * e[35] + e[26] * e[31] * e[34] + e[35] * e[30] * e[24] + e[35] * e[21] * e[33] + e[35] * e[31] * e[25] + e[35] * e[22] * e[34] - e[32] * e[27] * e[18] - e[32] * e[33] * e[24] - e[32] * e[28] * e[19] - e[32] * e[34] * e[25] + e[20] * e[27] * e[30] + e[20] * e[29] * e[32] + e[20] * e[28] * e[31] + e[29] * e[27] * e[21] + e[29] * e[18] * e[30] + e[29] * e[28] * e[22] + e[29] * e[19] * e[31];
            A(6, 19) = 0.5*e[32] * ep2[31] + 0.5*e[32] * ep2[35] - 0.5*e[32] * ep2[27] + e[29] * e[27] * e[30] + e[29] * e[28] * e[31] + e[35] * e[30] * e[33] + e[35] * e[31] * e[34] + 0.5*ep2[29] * e[32] + 0.5*ep3[32] - 0.5*e[32] * ep2[33] - 0.5*e[32] * ep2[34] + 0.5*e[32] * ep2[30] - 0.5*e[32] * ep2[28];
            A(7, 0) = 0.5*e[6] * ep2[8] - 0.5*e[6] * ep2[5] + 0.5*ep3[6] + 0.5*e[6] * ep2[7] - 0.5*e[6] * ep2[4] + e[0] * e[2] * e[8] + e[3] * e[4] * e[7] + e[3] * e[5] * e[8] + e[0] * e[1] * e[7] - 0.5*e[6] * ep2[1] - 0.5*e[6] * ep2[2] + 0.5*ep2[0] * e[6] + 0.5*ep2[3] * e[6];
            A(7, 1) = 0.5*ep3[15] + e[9] * e[10] * e[16] - 0.5*e[15] * ep2[11] + e[9] * e[11] * e[17] + 0.5*ep2[12] * e[15] + 0.5*e[15] * ep2[16] + 0.5*e[15] * ep2[17] - 0.5*e[15] * ep2[13] + 0.5*ep2[9] * e[15] + e[12] * e[14] * e[17] - 0.5*e[15] * ep2[10] - 0.5*e[15] * ep2[14] + e[12] * e[13] * e[16];
            A(7, 2) = e[9] * e[1] * e[7] + e[9] * e[0] * e[6] + e[9] * e[2] * e[8] + e[3] * e[12] * e[6] + e[3] * e[13] * e[7] + e[3] * e[4] * e[16] + e[3] * e[14] * e[8] + e[3] * e[5] * e[17] + e[12] * e[4] * e[7] + e[12] * e[5] * e[8] + e[6] * e[16] * e[7] + e[6] * e[17] * e[8] - e[6] * e[11] * e[2] - e[6] * e[10] * e[1] - e[6] * e[13] * e[4] - e[6] * e[14] * e[5] + e[0] * e[10] * e[7] + e[0] * e[1] * e[16] + e[0] * e[11] * e[8] + e[0] * e[2] * e[17] + 0.5*ep2[3] * e[15] + 1.5*e[15] * ep2[6] + 0.5*e[15] * ep2[7] + 0.5*e[15] * ep2[8] + 0.5*ep2[0] * e[15] - 0.5*e[15] * ep2[4] - 0.5*e[15] * ep2[5] - 0.5*e[15] * ep2[1] - 0.5*e[15] * ep2[2];
            A(7, 3) = e[12] * e[14] * e[8] + e[12] * e[5] * e[17] + e[15] * e[16] * e[7] + e[15] * e[17] * e[8] + e[0] * e[11] * e[17] + e[0] * e[9] * e[15] + e[0] * e[10] * e[16] + e[3] * e[14] * e[17] + e[3] * e[13] * e[16] + e[9] * e[10] * e[7] + e[9] * e[1] * e[16] + e[9] * e[11] * e[8] + e[9] * e[2] * e[17] - e[15] * e[11] * e[2] - e[15] * e[10] * e[1] - e[15] * e[13] * e[4] - e[15] * e[14] * e[5] + e[12] * e[3] * e[15] + e[12] * e[13] * e[7] + e[12] * e[4] * e[16] + 0.5*ep2[12] * e[6] + 1.5*ep2[15] * e[6] + 0.5*e[6] * ep2[17] + 0.5*e[6] * ep2[16] + 0.5*e[6] * ep2[9] - 0.5*e[6] * ep2[11] - 0.5*e[6] * ep2[10] - 0.5*e[6] * ep2[14] - 0.5*e[6] * ep2[13];
            A(7, 4) = e[3] * e[4] * e[25] + e[3] * e[23] * e[8] + e[3] * e[5] * e[26] + e[21] * e[4] * e[7] + e[21] * e[5] * e[8] + e[6] * e[25] * e[7] + e[6] * e[26] * e[8] + e[0] * e[19] * e[7] + e[0] * e[1] * e[25] + e[0] * e[20] * e[8] + e[0] * e[2] * e[26] - e[6] * e[20] * e[2] - e[6] * e[19] * e[1] - e[6] * e[22] * e[4] - e[6] * e[23] * e[5] + e[18] * e[1] * e[7] + e[18] * e[0] * e[6] + e[18] * e[2] * e[8] + e[3] * e[21] * e[6] + e[3] * e[22] * e[7] - 0.5*e[24] * ep2[4] + 0.5*e[24] * ep2[0] + 1.5*e[24] * ep2[6] - 0.5*e[24] * ep2[5] - 0.5*e[24] * ep2[1] + 0.5*e[24] * ep2[7] + 0.5*e[24] * ep2[3] - 0.5*e[24] * ep2[2] + 0.5*e[24] * ep2[8];
            A(7, 5) = e[0] * e[27] * e[6] + e[0] * e[28] * e[7] + e[0] * e[1] * e[34] + e[0] * e[29] * e[8] + e[0] * e[2] * e[35] + e[6] * e[34] * e[7] - e[6] * e[32] * e[5] + e[6] * e[30] * e[3] + e[6] * e[35] * e[8] - e[6] * e[29] * e[2] - e[6] * e[28] * e[1] - e[6] * e[31] * e[4] + e[27] * e[1] * e[7] + e[27] * e[2] * e[8] + e[3] * e[31] * e[7] + e[3] * e[4] * e[34] + e[3] * e[32] * e[8] + e[3] * e[5] * e[35] + e[30] * e[4] * e[7] + e[30] * e[5] * e[8] + 0.5*ep2[0] * e[33] + 1.5*e[33] * ep2[6] - 0.5*e[33] * ep2[4] - 0.5*e[33] * ep2[5] - 0.5*e[33] * ep2[1] + 0.5*e[33] * ep2[7] + 0.5*e[33] * ep2[3] - 0.5*e[33] * ep2[2] + 0.5*e[33] * ep2[8];
            A(7, 6) = e[21] * e[14] * e[17] + e[21] * e[13] * e[16] + e[15] * e[26] * e[17] + e[15] * e[25] * e[16] - e[15] * e[23] * e[14] - e[15] * e[20] * e[11] - e[15] * e[19] * e[10] - e[15] * e[22] * e[13] + e[9] * e[20] * e[17] + e[9] * e[11] * e[26] + e[9] * e[19] * e[16] + e[9] * e[10] * e[25] + 0.5*ep2[12] * e[24] + 1.5*e[24] * ep2[15] + 0.5*e[24] * ep2[17] + 0.5*e[24] * ep2[16] + 0.5*ep2[9] * e[24] - 0.5*e[24] * ep2[11] - 0.5*e[24] * ep2[10] - 0.5*e[24] * ep2[14] - 0.5*e[24] * ep2[13] + e[18] * e[11] * e[17] + e[18] * e[9] * e[15] + e[18] * e[10] * e[16] + e[12] * e[21] * e[15] + e[12] * e[23] * e[17] + e[12] * e[14] * e[26] + e[12] * e[22] * e[16] + e[12] * e[13] * e[25];
            A(7, 7) = e[9] * e[27] * e[15] + e[9] * e[29] * e[17] + e[9] * e[11] * e[35] + e[9] * e[28] * e[16] + e[9] * e[10] * e[34] + e[27] * e[11] * e[17] + e[27] * e[10] * e[16] + e[12] * e[30] * e[15] + e[12] * e[32] * e[17] + e[12] * e[14] * e[35] + e[12] * e[31] * e[16] + e[12] * e[13] * e[34] + e[30] * e[14] * e[17] + e[30] * e[13] * e[16] + e[15] * e[35] * e[17] + e[15] * e[34] * e[16] - e[15] * e[28] * e[10] - e[15] * e[31] * e[13] - e[15] * e[32] * e[14] - e[15] * e[29] * e[11] + 0.5*ep2[9] * e[33] + 0.5*e[33] * ep2[16] - 0.5*e[33] * ep2[11] + 0.5*e[33] * ep2[12] + 1.5*e[33] * ep2[15] + 0.5*e[33] * ep2[17] - 0.5*e[33] * ep2[10] - 0.5*e[33] * ep2[14] - 0.5*e[33] * ep2[13];
            A(7, 8) = e[18] * e[2] * e[17] + e[3] * e[21] * e[15] + e[3] * e[12] * e[24] + e[3] * e[23] * e[17] + e[3] * e[14] * e[26] + e[3] * e[22] * e[16] + e[3] * e[13] * e[25] + 3.*e[6] * e[24] * e[15] + e[6] * e[26] * e[17] + e[6] * e[25] * e[16] + e[0] * e[20] * e[17] + e[0] * e[11] * e[26] + e[0] * e[19] * e[16] + e[0] * e[10] * e[25] + e[15] * e[26] * e[8] - e[15] * e[20] * e[2] - e[15] * e[19] * e[1] - e[15] * e[22] * e[4] + e[15] * e[25] * e[7] - e[15] * e[23] * e[5] + e[12] * e[21] * e[6] + e[12] * e[22] * e[7] + e[12] * e[4] * e[25] + e[12] * e[23] * e[8] + e[12] * e[5] * e[26] - e[24] * e[11] * e[2] - e[24] * e[10] * e[1] - e[24] * e[13] * e[4] + e[24] * e[16] * e[7] - e[24] * e[14] * e[5] + e[24] * e[17] * e[8] + e[21] * e[13] * e[7] + e[21] * e[4] * e[16] + e[21] * e[14] * e[8] + e[21] * e[5] * e[17] - e[6] * e[23] * e[14] - e[6] * e[20] * e[11] - e[6] * e[19] * e[10] - e[6] * e[22] * e[13] + e[9] * e[18] * e[6] + e[9] * e[0] * e[24] + e[9] * e[19] * e[7] + e[9] * e[1] * e[25] + e[9] * e[20] * e[8] + e[9] * e[2] * e[26] + e[18] * e[0] * e[15] + e[18] * e[10] * e[7] + e[18] * e[1] * e[16] + e[18] * e[11] * e[8];
            A(7, 9) = e[33] * e[16] * e[7] - e[33] * e[14] * e[5] + e[33] * e[17] * e[8] + e[30] * e[13] * e[7] + e[30] * e[4] * e[16] + e[30] * e[14] * e[8] + e[30] * e[5] * e[17] + e[6] * e[27] * e[9] - e[6] * e[28] * e[10] - e[6] * e[31] * e[13] - e[6] * e[32] * e[14] - e[6] * e[29] * e[11] + e[9] * e[28] * e[7] + e[9] * e[1] * e[34] + e[9] * e[29] * e[8] + e[9] * e[2] * e[35] + e[27] * e[10] * e[7] + e[27] * e[1] * e[16] + e[27] * e[11] * e[8] + e[27] * e[2] * e[17] + e[3] * e[30] * e[15] + e[3] * e[12] * e[33] + e[3] * e[32] * e[17] + e[3] * e[14] * e[35] + e[3] * e[31] * e[16] + e[3] * e[13] * e[34] + 3.*e[6] * e[33] * e[15] + e[6] * e[35] * e[17] + e[6] * e[34] * e[16] + e[0] * e[27] * e[15] + e[0] * e[9] * e[33] + e[0] * e[29] * e[17] + e[0] * e[11] * e[35] + e[0] * e[28] * e[16] + e[0] * e[10] * e[34] + e[15] * e[34] * e[7] - e[15] * e[32] * e[5] + e[15] * e[35] * e[8] - e[15] * e[29] * e[2] - e[15] * e[28] * e[1] - e[15] * e[31] * e[4] + e[12] * e[30] * e[6] + e[12] * e[31] * e[7] + e[12] * e[4] * e[34] + e[12] * e[32] * e[8] + e[12] * e[5] * e[35] - e[33] * e[11] * e[2] - e[33] * e[10] * e[1] - e[33] * e[13] * e[4];
            A(7, 10) = 0.5*ep2[18] * e[6] + 0.5*ep2[21] * e[6] + 1.5*ep2[24] * e[6] + 0.5*e[6] * ep2[26] - 0.5*e[6] * ep2[23] - 0.5*e[6] * ep2[19] - 0.5*e[6] * ep2[20] - 0.5*e[6] * ep2[22] + 0.5*e[6] * ep2[25] + e[21] * e[3] * e[24] + e[18] * e[20] * e[8] + e[21] * e[4] * e[25] + e[18] * e[19] * e[7] + e[18] * e[1] * e[25] + e[21] * e[22] * e[7] + e[21] * e[23] * e[8] + e[18] * e[0] * e[24] + e[18] * e[2] * e[26] + e[21] * e[5] * e[26] + e[24] * e[26] * e[8] - e[24] * e[20] * e[2] - e[24] * e[19] * e[1] - e[24] * e[22] * e[4] + e[24] * e[25] * e[7] - e[24] * e[23] * e[5] + e[0] * e[19] * e[25] + e[0] * e[20] * e[26] + e[3] * e[22] * e[25] + e[3] * e[23] * e[26];
            A(7, 11) = e[21] * e[31] * e[7] + e[21] * e[4] * e[34] + e[21] * e[32] * e[8] + e[21] * e[5] * e[35] + e[30] * e[22] * e[7] + e[30] * e[4] * e[25] + e[30] * e[23] * e[8] + e[30] * e[5] * e[26] + 3.*e[24] * e[33] * e[6] + e[24] * e[34] * e[7] + e[24] * e[35] * e[8] + e[33] * e[25] * e[7] + e[33] * e[26] * e[8] + e[0] * e[27] * e[24] + e[0] * e[18] * e[33] + e[0] * e[28] * e[25] + e[0] * e[19] * e[34] + e[0] * e[29] * e[26] + e[0] * e[20] * e[35] + e[18] * e[27] * e[6] + e[18] * e[28] * e[7] + e[18] * e[1] * e[34] + e[18] * e[29] * e[8] + e[18] * e[2] * e[35] + e[27] * e[19] * e[7] + e[27] * e[1] * e[25] + e[27] * e[20] * e[8] + e[27] * e[2] * e[26] + e[3] * e[30] * e[24] + e[3] * e[21] * e[33] + e[3] * e[31] * e[25] + e[3] * e[22] * e[34] + e[3] * e[32] * e[26] + e[3] * e[23] * e[35] + e[6] * e[30] * e[21] - e[6] * e[29] * e[20] + e[6] * e[35] * e[26] - e[6] * e[31] * e[22] - e[6] * e[32] * e[23] - e[6] * e[28] * e[19] + e[6] * e[34] * e[25] - e[24] * e[32] * e[5] - e[24] * e[29] * e[2] - e[24] * e[28] * e[1] - e[24] * e[31] * e[4] - e[33] * e[20] * e[2] - e[33] * e[19] * e[1] - e[33] * e[22] * e[4] - e[33] * e[23] * e[5];
            A(7, 12) = 0.5*ep2[30] * e[6] + 0.5*e[6] * ep2[27] - 0.5*e[6] * ep2[32] - 0.5*e[6] * ep2[28] - 0.5*e[6] * ep2[29] - 0.5*e[6] * ep2[31] + 1.5*e[6] * ep2[33] + 0.5*e[6] * ep2[34] + 0.5*e[6] * ep2[35] + e[0] * e[27] * e[33] + e[0] * e[29] * e[35] + e[0] * e[28] * e[34] + e[3] * e[30] * e[33] + e[3] * e[32] * e[35] + e[3] * e[31] * e[34] + e[30] * e[31] * e[7] + e[30] * e[4] * e[34] + e[30] * e[32] * e[8] + e[30] * e[5] * e[35] + e[27] * e[28] * e[7] + e[27] * e[1] * e[34] + e[27] * e[29] * e[8] + e[27] * e[2] * e[35] + e[33] * e[34] * e[7] + e[33] * e[35] * e[8] - e[33] * e[32] * e[5] - e[33] * e[29] * e[2] - e[33] * e[28] * e[1] - e[33] * e[31] * e[4];
            A(7, 13) = e[21] * e[12] * e[24] + e[21] * e[23] * e[17] + e[21] * e[14] * e[26] + e[21] * e[22] * e[16] + e[21] * e[13] * e[25] + e[24] * e[26] * e[17] + e[24] * e[25] * e[16] + e[9] * e[19] * e[25] + e[9] * e[18] * e[24] + e[9] * e[20] * e[26] + e[12] * e[22] * e[25] + e[12] * e[23] * e[26] + e[18] * e[20] * e[17] + e[18] * e[11] * e[26] + e[18] * e[19] * e[16] + e[18] * e[10] * e[25] - e[24] * e[23] * e[14] - e[24] * e[20] * e[11] - e[24] * e[19] * e[10] - e[24] * e[22] * e[13] + 0.5*ep2[21] * e[15] + 1.5*ep2[24] * e[15] + 0.5*e[15] * ep2[25] + 0.5*e[15] * ep2[26] + 0.5*e[15] * ep2[18] - 0.5*e[15] * ep2[23] - 0.5*e[15] * ep2[19] - 0.5*e[15] * ep2[20] - 0.5*e[15] * ep2[22];
            A(7, 14) = e[12] * e[30] * e[24] + e[12] * e[21] * e[33] + e[12] * e[31] * e[25] + e[12] * e[22] * e[34] + e[12] * e[32] * e[26] + e[12] * e[23] * e[35] + e[9] * e[27] * e[24] + e[9] * e[18] * e[33] + e[9] * e[28] * e[25] + e[9] * e[19] * e[34] + e[9] * e[29] * e[26] + e[9] * e[20] * e[35] + e[21] * e[30] * e[15] + e[21] * e[32] * e[17] + e[21] * e[14] * e[35] + e[21] * e[31] * e[16] + e[21] * e[13] * e[34] + e[30] * e[23] * e[17] + e[30] * e[14] * e[26] + e[30] * e[22] * e[16] + e[30] * e[13] * e[25] + e[15] * e[27] * e[18] + 3.*e[15] * e[33] * e[24] - e[15] * e[29] * e[20] + e[15] * e[35] * e[26] - e[15] * e[31] * e[22] - e[15] * e[32] * e[23] - e[15] * e[28] * e[19] + e[15] * e[34] * e[25] + e[18] * e[29] * e[17] + e[18] * e[11] * e[35] + e[18] * e[28] * e[16] + e[18] * e[10] * e[34] + e[27] * e[20] * e[17] + e[27] * e[11] * e[26] + e[27] * e[19] * e[16] + e[27] * e[10] * e[25] - e[24] * e[28] * e[10] - e[24] * e[31] * e[13] - e[24] * e[32] * e[14] + e[24] * e[34] * e[16] + e[24] * e[35] * e[17] - e[24] * e[29] * e[11] - e[33] * e[23] * e[14] + e[33] * e[25] * e[16] + e[33] * e[26] * e[17] - e[33] * e[20] * e[11] - e[33] * e[19] * e[10] - e[33] * e[22] * e[13];
            A(7, 15) = e[9] * e[27] * e[33] + e[9] * e[29] * e[35] + e[9] * e[28] * e[34] + e[33] * e[35] * e[17] + e[33] * e[34] * e[16] + e[27] * e[29] * e[17] + e[27] * e[11] * e[35] + e[27] * e[28] * e[16] + e[27] * e[10] * e[34] + e[33] * e[30] * e[12] - e[33] * e[28] * e[10] - e[33] * e[31] * e[13] - e[33] * e[32] * e[14] - e[33] * e[29] * e[11] + e[30] * e[32] * e[17] + e[30] * e[14] * e[35] + e[30] * e[31] * e[16] + e[30] * e[13] * e[34] + e[12] * e[32] * e[35] + e[12] * e[31] * e[34] + 0.5*e[15] * ep2[27] - 0.5*e[15] * ep2[32] - 0.5*e[15] * ep2[28] - 0.5*e[15] * ep2[29] - 0.5*e[15] * ep2[31] + 1.5*e[15] * ep2[33] + 0.5*e[15] * ep2[30] + 0.5*e[15] * ep2[34] + 0.5*e[15] * ep2[35];
            A(7, 16) = e[18] * e[19] * e[25] + 0.5*ep3[24] - 0.5*e[24] * ep2[23] + e[18] * e[20] * e[26] + e[21] * e[22] * e[25] + e[21] * e[23] * e[26] - 0.5*e[24] * ep2[19] + 0.5*ep2[21] * e[24] + 0.5*e[24] * ep2[26] - 0.5*e[24] * ep2[20] + 0.5*ep2[18] * e[24] - 0.5*e[24] * ep2[22] + 0.5*e[24] * ep2[25];
            A(7, 17) = e[18] * e[27] * e[24] + e[18] * e[28] * e[25] + e[18] * e[19] * e[34] + e[18] * e[29] * e[26] + e[18] * e[20] * e[35] + e[27] * e[19] * e[25] + e[27] * e[20] * e[26] + e[21] * e[30] * e[24] + e[21] * e[31] * e[25] + e[21] * e[22] * e[34] + e[21] * e[32] * e[26] + e[21] * e[23] * e[35] + e[30] * e[22] * e[25] + e[30] * e[23] * e[26] + e[24] * e[34] * e[25] + e[24] * e[35] * e[26] - e[24] * e[29] * e[20] - e[24] * e[31] * e[22] - e[24] * e[32] * e[23] - e[24] * e[28] * e[19] + 1.5*e[33] * ep2[24] + 0.5*e[33] * ep2[25] + 0.5*e[33] * ep2[26] - 0.5*e[33] * ep2[23] - 0.5*e[33] * ep2[19] - 0.5*e[33] * ep2[20] - 0.5*e[33] * ep2[22] + 0.5*ep2[18] * e[33] + 0.5*ep2[21] * e[33];
            A(7, 18) = e[18] * e[27] * e[33] + e[18] * e[29] * e[35] + e[18] * e[28] * e[34] + e[27] * e[28] * e[25] + e[27] * e[19] * e[34] + e[27] * e[29] * e[26] + e[27] * e[20] * e[35] + e[21] * e[30] * e[33] + e[21] * e[32] * e[35] + e[21] * e[31] * e[34] + e[30] * e[31] * e[25] + e[30] * e[22] * e[34] + e[30] * e[32] * e[26] + e[30] * e[23] * e[35] + e[33] * e[34] * e[25] + e[33] * e[35] * e[26] - e[33] * e[29] * e[20] - e[33] * e[31] * e[22] - e[33] * e[32] * e[23] - e[33] * e[28] * e[19] + 0.5*ep2[27] * e[24] + 0.5*ep2[30] * e[24] + 1.5*e[24] * ep2[33] + 0.5*e[24] * ep2[35] + 0.5*e[24] * ep2[34] - 0.5*e[24] * ep2[32] - 0.5*e[24] * ep2[28] - 0.5*e[24] * ep2[29] - 0.5*e[24] * ep2[31];
            A(7, 19) = 0.5*e[33] * ep2[35] + 0.5*ep3[33] + 0.5*ep2[27] * e[33] + 0.5*ep2[30] * e[33] - 0.5*e[33] * ep2[29] + 0.5*e[33] * ep2[34] - 0.5*e[33] * ep2[32] - 0.5*e[33] * ep2[28] + e[30] * e[32] * e[35] - 0.5*e[33] * ep2[31] + e[27] * e[29] * e[35] + e[27] * e[28] * e[34] + e[30] * e[31] * e[34];
            A(8, 0) = -0.5*e[7] * ep2[0] + e[4] * e[5] * e[8] + 0.5*ep2[4] * e[7] - 0.5*e[7] * ep2[2] + 0.5*e[7] * ep2[8] - 0.5*e[7] * ep2[5] + 0.5*e[7] * ep2[6] + e[1] * e[0] * e[6] + 0.5*ep3[7] + e[4] * e[3] * e[6] + e[1] * e[2] * e[8] - 0.5*e[7] * ep2[3] + 0.5*ep2[1] * e[7];
            A(8, 1) = e[13] * e[14] * e[17] + e[13] * e[12] * e[15] + e[10] * e[9] * e[15] + 0.5*e[16] * ep2[15] - 0.5*e[16] * ep2[11] - 0.5*e[16] * ep2[12] - 0.5*e[16] * ep2[14] + e[10] * e[11] * e[17] + 0.5*ep2[10] * e[16] + 0.5*ep3[16] - 0.5*e[16] * ep2[9] + 0.5*e[16] * ep2[17] + 0.5*ep2[13] * e[16];
            A(8, 2) = e[10] * e[1] * e[7] + e[10] * e[0] * e[6] + e[10] * e[2] * e[8] + e[4] * e[12] * e[6] + e[4] * e[3] * e[15] + e[4] * e[13] * e[7] + e[4] * e[14] * e[8] + e[4] * e[5] * e[17] + e[13] * e[3] * e[6] + e[13] * e[5] * e[8] + e[7] * e[15] * e[6] + e[7] * e[17] * e[8] - e[7] * e[11] * e[2] - e[7] * e[9] * e[0] - e[7] * e[14] * e[5] - e[7] * e[12] * e[3] + e[1] * e[9] * e[6] + e[1] * e[0] * e[15] + e[1] * e[11] * e[8] + e[1] * e[2] * e[17] + 1.5*e[16] * ep2[7] + 0.5*e[16] * ep2[6] + 0.5*e[16] * ep2[8] + 0.5*ep2[1] * e[16] - 0.5*e[16] * ep2[0] - 0.5*e[16] * ep2[5] - 0.5*e[16] * ep2[3] - 0.5*e[16] * ep2[2] + 0.5*ep2[4] * e[16];
            A(8, 3) = e[13] * e[12] * e[6] + e[13] * e[3] * e[15] + e[13] * e[4] * e[16] + e[13] * e[14] * e[8] + e[13] * e[5] * e[17] + e[16] * e[15] * e[6] + e[16] * e[17] * e[8] + e[1] * e[11] * e[17] + e[1] * e[9] * e[15] + e[1] * e[10] * e[16] + e[4] * e[14] * e[17] + e[4] * e[12] * e[15] + e[10] * e[9] * e[6] + e[10] * e[0] * e[15] + e[10] * e[11] * e[8] + e[10] * e[2] * e[17] - e[16] * e[11] * e[2] - e[16] * e[9] * e[0] - e[16] * e[14] * e[5] - e[16] * e[12] * e[3] + 0.5*ep2[13] * e[7] + 1.5*ep2[16] * e[7] + 0.5*e[7] * ep2[17] + 0.5*e[7] * ep2[15] - 0.5*e[7] * ep2[9] - 0.5*e[7] * ep2[11] - 0.5*e[7] * ep2[12] + 0.5*e[7] * ep2[10] - 0.5*e[7] * ep2[14];
            A(8, 4) = e[19] * e[1] * e[7] + e[19] * e[0] * e[6] + e[19] * e[2] * e[8] + e[4] * e[21] * e[6] + e[4] * e[3] * e[24] + e[4] * e[22] * e[7] + e[4] * e[23] * e[8] + e[4] * e[5] * e[26] + e[22] * e[3] * e[6] + e[22] * e[5] * e[8] + e[7] * e[24] * e[6] + e[7] * e[26] * e[8] + e[1] * e[18] * e[6] + e[1] * e[0] * e[24] + e[1] * e[20] * e[8] + e[1] * e[2] * e[26] - e[7] * e[21] * e[3] - e[7] * e[20] * e[2] - e[7] * e[18] * e[0] - e[7] * e[23] * e[5] + 0.5*e[25] * ep2[4] - 0.5*e[25] * ep2[0] + 0.5*e[25] * ep2[6] - 0.5*e[25] * ep2[5] + 0.5*e[25] * ep2[1] + 1.5*e[25] * ep2[7] - 0.5*e[25] * ep2[3] - 0.5*e[25] * ep2[2] + 0.5*e[25] * ep2[8];
            A(8, 5) = e[1] * e[27] * e[6] + e[1] * e[0] * e[33] + e[1] * e[28] * e[7] + e[1] * e[29] * e[8] + e[1] * e[2] * e[35] - e[7] * e[27] * e[0] - e[7] * e[32] * e[5] + e[7] * e[33] * e[6] - e[7] * e[30] * e[3] + e[7] * e[35] * e[8] - e[7] * e[29] * e[2] + e[7] * e[31] * e[4] + e[28] * e[0] * e[6] + e[28] * e[2] * e[8] + e[4] * e[30] * e[6] + e[4] * e[3] * e[33] + e[4] * e[32] * e[8] + e[4] * e[5] * e[35] + e[31] * e[3] * e[6] + e[31] * e[5] * e[8] + 0.5*ep2[1] * e[34] + 1.5*e[34] * ep2[7] + 0.5*e[34] * ep2[4] - 0.5*e[34] * ep2[0] + 0.5*e[34] * ep2[6] - 0.5*e[34] * ep2[5] - 0.5*e[34] * ep2[3] - 0.5*e[34] * ep2[2] + 0.5*e[34] * ep2[8];
            A(8, 6) = -e[16] * e[21] * e[12] + e[10] * e[18] * e[15] + e[10] * e[9] * e[24] + e[10] * e[20] * e[17] + e[10] * e[11] * e[26] + e[19] * e[11] * e[17] + e[19] * e[9] * e[15] + e[19] * e[10] * e[16] + e[13] * e[21] * e[15] + e[13] * e[12] * e[24] + e[13] * e[23] * e[17] + e[13] * e[14] * e[26] + e[13] * e[22] * e[16] + e[22] * e[14] * e[17] + e[22] * e[12] * e[15] + e[16] * e[24] * e[15] + e[16] * e[26] * e[17] - e[16] * e[23] * e[14] - e[16] * e[20] * e[11] - e[16] * e[18] * e[9] + 0.5*ep2[13] * e[25] + 1.5*e[25] * ep2[16] + 0.5*e[25] * ep2[17] + 0.5*e[25] * ep2[15] + 0.5*ep2[10] * e[25] - 0.5*e[25] * ep2[9] - 0.5*e[25] * ep2[11] - 0.5*e[25] * ep2[12] - 0.5*e[25] * ep2[14];
            A(8, 7) = e[10] * e[27] * e[15] + e[10] * e[9] * e[33] + e[10] * e[29] * e[17] + e[10] * e[11] * e[35] + e[10] * e[28] * e[16] + e[28] * e[11] * e[17] + e[28] * e[9] * e[15] + e[13] * e[30] * e[15] + e[13] * e[12] * e[33] + e[13] * e[32] * e[17] + e[13] * e[14] * e[35] + e[13] * e[31] * e[16] + e[31] * e[14] * e[17] + e[31] * e[12] * e[15] + e[16] * e[33] * e[15] + e[16] * e[35] * e[17] - e[16] * e[27] * e[9] - e[16] * e[30] * e[12] - e[16] * e[32] * e[14] - e[16] * e[29] * e[11] + 0.5*ep2[10] * e[34] + 1.5*e[34] * ep2[16] - 0.5*e[34] * ep2[9] - 0.5*e[34] * ep2[11] - 0.5*e[34] * ep2[12] + 0.5*e[34] * ep2[15] + 0.5*e[34] * ep2[17] - 0.5*e[34] * ep2[14] + 0.5*e[34] * ep2[13];
            A(8, 8) = e[10] * e[18] * e[6] + e[10] * e[0] * e[24] + e[10] * e[19] * e[7] + e[10] * e[1] * e[25] + e[10] * e[20] * e[8] + e[10] * e[2] * e[26] + e[19] * e[9] * e[6] + e[19] * e[0] * e[15] + e[19] * e[1] * e[16] + e[19] * e[11] * e[8] + e[19] * e[2] * e[17] + e[4] * e[21] * e[15] + e[4] * e[12] * e[24] + e[4] * e[23] * e[17] + e[4] * e[14] * e[26] + e[4] * e[22] * e[16] + e[4] * e[13] * e[25] + e[7] * e[24] * e[15] + e[7] * e[26] * e[17] + 3.*e[7] * e[25] * e[16] + e[1] * e[18] * e[15] + e[1] * e[9] * e[24] + e[1] * e[20] * e[17] + e[1] * e[11] * e[26] - e[16] * e[21] * e[3] + e[16] * e[26] * e[8] - e[16] * e[20] * e[2] - e[16] * e[18] * e[0] - e[16] * e[23] * e[5] + e[16] * e[24] * e[6] + e[13] * e[21] * e[6] + e[13] * e[3] * e[24] + e[13] * e[22] * e[7] + e[13] * e[23] * e[8] + e[13] * e[5] * e[26] - e[25] * e[11] * e[2] + e[25] * e[15] * e[6] - e[25] * e[9] * e[0] - e[25] * e[14] * e[5] - e[25] * e[12] * e[3] + e[25] * e[17] * e[8] + e[22] * e[12] * e[6] + e[22] * e[3] * e[15] + e[22] * e[14] * e[8] + e[22] * e[5] * e[17] - e[7] * e[23] * e[14] - e[7] * e[20] * e[11] - e[7] * e[18] * e[9] - e[7] * e[21] * e[12];
            A(8, 9) = e[4] * e[30] * e[15] + e[4] * e[12] * e[33] + e[4] * e[32] * e[17] + e[4] * e[14] * e[35] + e[4] * e[31] * e[16] + e[4] * e[13] * e[34] + e[7] * e[33] * e[15] + e[7] * e[35] * e[17] + 3.*e[7] * e[34] * e[16] + e[1] * e[27] * e[15] + e[1] * e[9] * e[33] + e[1] * e[29] * e[17] + e[1] * e[11] * e[35] + e[1] * e[28] * e[16] + e[1] * e[10] * e[34] - e[16] * e[27] * e[0] - e[16] * e[32] * e[5] + e[16] * e[33] * e[6] - e[16] * e[30] * e[3] + e[16] * e[35] * e[8] - e[16] * e[29] * e[2] + e[13] * e[30] * e[6] + e[13] * e[3] * e[33] + e[13] * e[31] * e[7] + e[13] * e[32] * e[8] + e[13] * e[5] * e[35] - e[34] * e[11] * e[2] + e[34] * e[15] * e[6] - e[34] * e[9] * e[0] - e[34] * e[14] * e[5] - e[34] * e[12] * e[3] + e[34] * e[17] * e[8] + e[31] * e[12] * e[6] + e[31] * e[3] * e[15] + e[31] * e[14] * e[8] + e[31] * e[5] * e[17] - e[7] * e[27] * e[9] - e[7] * e[30] * e[12] + e[7] * e[28] * e[10] - e[7] * e[32] * e[14] + e[10] * e[27] * e[6] + e[10] * e[0] * e[33] + e[10] * e[29] * e[8] + e[10] * e[2] * e[35] + e[28] * e[9] * e[6] + e[28] * e[0] * e[15] + e[28] * e[11] * e[8] + e[28] * e[2] * e[17] - e[7] * e[29] * e[11];
            A(8, 10) = e[19] * e[18] * e[6] + e[19] * e[0] * e[24] + e[19] * e[1] * e[25] + e[19] * e[20] * e[8] + e[19] * e[2] * e[26] + e[22] * e[21] * e[6] + e[22] * e[3] * e[24] + e[22] * e[4] * e[25] + e[22] * e[23] * e[8] + e[22] * e[5] * e[26] - e[25] * e[21] * e[3] + e[25] * e[26] * e[8] - e[25] * e[20] * e[2] - e[25] * e[18] * e[0] - e[25] * e[23] * e[5] + e[25] * e[24] * e[6] + e[1] * e[18] * e[24] + e[1] * e[20] * e[26] + e[4] * e[21] * e[24] + e[4] * e[23] * e[26] + 0.5*ep2[19] * e[7] + 0.5*ep2[22] * e[7] + 1.5*ep2[25] * e[7] + 0.5*e[7] * ep2[26] - 0.5*e[7] * ep2[18] - 0.5*e[7] * ep2[23] - 0.5*e[7] * ep2[20] + 0.5*e[7] * ep2[24] - 0.5*e[7] * ep2[21];
            A(8, 11) = e[1] * e[20] * e[35] + e[19] * e[27] * e[6] + e[19] * e[0] * e[33] + e[19] * e[28] * e[7] + e[19] * e[29] * e[8] + e[19] * e[2] * e[35] + e[28] * e[18] * e[6] + e[28] * e[0] * e[24] + e[28] * e[20] * e[8] + e[28] * e[2] * e[26] + e[4] * e[30] * e[24] + e[4] * e[21] * e[33] + e[4] * e[31] * e[25] + e[4] * e[22] * e[34] + e[4] * e[32] * e[26] + e[4] * e[23] * e[35] - e[7] * e[27] * e[18] + e[7] * e[33] * e[24] - e[7] * e[30] * e[21] - e[7] * e[29] * e[20] + e[7] * e[35] * e[26] + e[7] * e[31] * e[22] - e[7] * e[32] * e[23] - e[25] * e[27] * e[0] - e[25] * e[32] * e[5] - e[25] * e[30] * e[3] - e[25] * e[29] * e[2] - e[34] * e[21] * e[3] - e[34] * e[20] * e[2] - e[34] * e[18] * e[0] - e[34] * e[23] * e[5] + e[22] * e[30] * e[6] + e[22] * e[3] * e[33] + e[22] * e[32] * e[8] + e[22] * e[5] * e[35] + e[31] * e[21] * e[6] + e[31] * e[3] * e[24] + e[31] * e[23] * e[8] + e[31] * e[5] * e[26] + e[34] * e[26] * e[8] + e[1] * e[27] * e[24] + e[1] * e[18] * e[33] + e[1] * e[28] * e[25] + e[1] * e[19] * e[34] + e[1] * e[29] * e[26] + e[34] * e[24] * e[6] + e[25] * e[33] * e[6] + 3.*e[25] * e[34] * e[7] + e[25] * e[35] * e[8];
            A(8, 12) = e[4] * e[30] * e[33] + e[4] * e[32] * e[35] + e[4] * e[31] * e[34] + e[31] * e[30] * e[6] + e[31] * e[3] * e[33] + e[31] * e[32] * e[8] + e[31] * e[5] * e[35] + e[28] * e[27] * e[6] + e[28] * e[0] * e[33] + e[28] * e[29] * e[8] + e[28] * e[2] * e[35] + e[34] * e[33] * e[6] + e[34] * e[35] * e[8] - e[34] * e[27] * e[0] - e[34] * e[32] * e[5] - e[34] * e[30] * e[3] - e[34] * e[29] * e[2] + e[1] * e[27] * e[33] + e[1] * e[29] * e[35] + e[1] * e[28] * e[34] + 0.5*ep2[31] * e[7] - 0.5*e[7] * ep2[27] - 0.5*e[7] * ep2[32] + 0.5*e[7] * ep2[28] - 0.5*e[7] * ep2[29] + 0.5*e[7] * ep2[33] - 0.5*e[7] * ep2[30] + 1.5*e[7] * ep2[34] + 0.5*e[7] * ep2[35];
            A(8, 13) = e[13] * e[21] * e[24] + e[13] * e[23] * e[26] + e[19] * e[18] * e[15] + e[19] * e[9] * e[24] + e[19] * e[20] * e[17] + e[19] * e[11] * e[26] - e[25] * e[23] * e[14] - e[25] * e[20] * e[11] - e[25] * e[18] * e[9] - e[25] * e[21] * e[12] + e[22] * e[21] * e[15] + e[22] * e[12] * e[24] + e[22] * e[23] * e[17] + e[22] * e[14] * e[26] + e[22] * e[13] * e[25] + e[25] * e[24] * e[15] + e[25] * e[26] * e[17] + e[10] * e[19] * e[25] + e[10] * e[18] * e[24] + e[10] * e[20] * e[26] - 0.5*e[16] * ep2[18] - 0.5*e[16] * ep2[23] + 0.5*e[16] * ep2[19] - 0.5*e[16] * ep2[20] - 0.5*e[16] * ep2[21] + 0.5*ep2[22] * e[16] + 1.5*ep2[25] * e[16] + 0.5*e[16] * ep2[24] + 0.5*e[16] * ep2[26];
            A(8, 14) = e[19] * e[11] * e[35] + e[28] * e[18] * e[15] + e[28] * e[9] * e[24] + e[28] * e[20] * e[17] + e[28] * e[11] * e[26] - e[25] * e[27] * e[9] - e[25] * e[30] * e[12] - e[25] * e[32] * e[14] + e[25] * e[33] * e[15] + e[25] * e[35] * e[17] - e[25] * e[29] * e[11] - e[34] * e[23] * e[14] + e[34] * e[24] * e[15] + e[34] * e[26] * e[17] - e[34] * e[20] * e[11] - e[34] * e[18] * e[9] - e[34] * e[21] * e[12] + e[13] * e[30] * e[24] + e[13] * e[21] * e[33] + e[13] * e[31] * e[25] + e[13] * e[22] * e[34] + e[13] * e[32] * e[26] + e[13] * e[23] * e[35] + e[10] * e[27] * e[24] + e[10] * e[18] * e[33] + e[10] * e[28] * e[25] + e[10] * e[19] * e[34] + e[10] * e[29] * e[26] + e[10] * e[20] * e[35] + e[22] * e[30] * e[15] + e[22] * e[12] * e[33] + e[22] * e[32] * e[17] + e[22] * e[14] * e[35] + e[22] * e[31] * e[16] + e[31] * e[21] * e[15] + e[31] * e[12] * e[24] + e[31] * e[23] * e[17] + e[31] * e[14] * e[26] - e[16] * e[27] * e[18] + e[16] * e[33] * e[24] - e[16] * e[30] * e[21] - e[16] * e[29] * e[20] + e[16] * e[35] * e[26] - e[16] * e[32] * e[23] + e[16] * e[28] * e[19] + 3.*e[16] * e[34] * e[25] + e[19] * e[27] * e[15] + e[19] * e[9] * e[33] + e[19] * e[29] * e[17];
            A(8, 15) = e[10] * e[27] * e[33] + e[10] * e[29] * e[35] + e[10] * e[28] * e[34] + e[34] * e[33] * e[15] + e[34] * e[35] * e[17] + e[28] * e[27] * e[15] + e[28] * e[9] * e[33] + e[28] * e[29] * e[17] + e[28] * e[11] * e[35] - e[34] * e[27] * e[9] - e[34] * e[30] * e[12] + e[34] * e[31] * e[13] - e[34] * e[32] * e[14] - e[34] * e[29] * e[11] + e[31] * e[30] * e[15] + e[31] * e[12] * e[33] + e[31] * e[32] * e[17] + e[31] * e[14] * e[35] + e[13] * e[30] * e[33] + e[13] * e[32] * e[35] - 0.5*e[16] * ep2[27] - 0.5*e[16] * ep2[32] + 0.5*e[16] * ep2[28] - 0.5*e[16] * ep2[29] + 0.5*e[16] * ep2[31] + 0.5*e[16] * ep2[33] - 0.5*e[16] * ep2[30] + 1.5*e[16] * ep2[34] + 0.5*e[16] * ep2[35];
            A(8, 16) = e[19] * e[20] * e[26] - 0.5*e[25] * ep2[20] + e[22] * e[21] * e[24] + e[19] * e[18] * e[24] + 0.5*ep2[22] * e[25] - 0.5*e[25] * ep2[21] - 0.5*e[25] * ep2[23] + 0.5*ep2[19] * e[25] - 0.5*e[25] * ep2[18] + 0.5*e[25] * ep2[24] + 0.5*e[25] * ep2[26] + 0.5*ep3[25] + e[22] * e[23] * e[26];
            A(8, 17) = e[19] * e[27] * e[24] + e[19] * e[18] * e[33] + e[19] * e[28] * e[25] + e[19] * e[29] * e[26] + e[19] * e[20] * e[35] + e[28] * e[18] * e[24] + e[28] * e[20] * e[26] + e[22] * e[30] * e[24] + e[22] * e[21] * e[33] + e[22] * e[31] * e[25] + e[22] * e[32] * e[26] + e[22] * e[23] * e[35] + e[31] * e[21] * e[24] + e[31] * e[23] * e[26] + e[25] * e[33] * e[24] + e[25] * e[35] * e[26] - e[25] * e[27] * e[18] - e[25] * e[30] * e[21] - e[25] * e[29] * e[20] - e[25] * e[32] * e[23] - 0.5*e[34] * ep2[18] - 0.5*e[34] * ep2[23] - 0.5*e[34] * ep2[20] - 0.5*e[34] * ep2[21] + 0.5*ep2[19] * e[34] + 0.5*ep2[22] * e[34] + 1.5*e[34] * ep2[25] + 0.5*e[34] * ep2[24] + 0.5*e[34] * ep2[26];
            A(8, 18) = e[22] * e[32] * e[35] + e[22] * e[31] * e[34] + e[31] * e[30] * e[24] + e[31] * e[21] * e[33] + e[31] * e[32] * e[26] + e[31] * e[23] * e[35] + e[34] * e[33] * e[24] + e[34] * e[35] * e[26] - e[34] * e[27] * e[18] - e[34] * e[30] * e[21] - e[34] * e[29] * e[20] - e[34] * e[32] * e[23] + e[19] * e[27] * e[33] + e[19] * e[29] * e[35] + e[19] * e[28] * e[34] + e[28] * e[27] * e[24] + e[28] * e[18] * e[33] + e[28] * e[29] * e[26] + e[28] * e[20] * e[35] + e[22] * e[30] * e[33] + 0.5*ep2[28] * e[25] + 0.5*ep2[31] * e[25] + 0.5*e[25] * ep2[33] + 0.5*e[25] * ep2[35] + 1.5*e[25] * ep2[34] - 0.5*e[25] * ep2[27] - 0.5*e[25] * ep2[32] - 0.5*e[25] * ep2[29] - 0.5*e[25] * ep2[30];
            A(8, 19) = 0.5*e[34] * ep2[33] + 0.5*e[34] * ep2[35] - 0.5*e[34] * ep2[27] - 0.5*e[34] * ep2[32] - 0.5*e[34] * ep2[29] - 0.5*e[34] * ep2[30] + 0.5*ep2[28] * e[34] + e[31] * e[30] * e[33] + e[31] * e[32] * e[35] + e[28] * e[27] * e[33] + 0.5*ep3[34] + e[28] * e[29] * e[35] + 0.5*ep2[31] * e[34];
            A(9, 0) = 0.5*ep2[5] * e[8] + e[2] * e[0] * e[6] + 0.5*ep2[2] * e[8] + 0.5*ep3[8] - 0.5*e[8] * ep2[0] + e[5] * e[4] * e[7] + e[5] * e[3] * e[6] + 0.5*e[8] * ep2[7] + e[2] * e[1] * e[7] - 0.5*e[8] * ep2[1] - 0.5*e[8] * ep2[4] - 0.5*e[8] * ep2[3] + 0.5*e[8] * ep2[6];
            A(9, 1) = -0.5*e[17] * ep2[13] - 0.5*e[17] * ep2[9] + 0.5*e[17] * ep2[16] + 0.5*e[17] * ep2[15] + 0.5*ep3[17] - 0.5*e[17] * ep2[10] + e[14] * e[13] * e[16] + e[14] * e[12] * e[15] + 0.5*ep2[14] * e[17] + e[11] * e[10] * e[16] - 0.5*e[17] * ep2[12] + 0.5*ep2[11] * e[17] + e[11] * e[9] * e[15];
            A(9, 2) = 0.5*ep2[5] * e[17] + 1.5*e[17] * ep2[8] + 0.5*e[17] * ep2[7] + 0.5*e[17] * ep2[6] + 0.5*ep2[2] * e[17] - 0.5*e[17] * ep2[4] - 0.5*e[17] * ep2[0] - 0.5*e[17] * ep2[1] - 0.5*e[17] * ep2[3] + e[11] * e[1] * e[7] + e[11] * e[0] * e[6] + e[11] * e[2] * e[8] + e[5] * e[12] * e[6] + e[5] * e[3] * e[15] + e[5] * e[13] * e[7] + e[5] * e[4] * e[16] + e[5] * e[14] * e[8] + e[14] * e[4] * e[7] + e[14] * e[3] * e[6] + e[8] * e[15] * e[6] + e[8] * e[16] * e[7] - e[8] * e[10] * e[1] - e[8] * e[13] * e[4] - e[8] * e[9] * e[0] - e[8] * e[12] * e[3] + e[2] * e[9] * e[6] + e[2] * e[0] * e[15] + e[2] * e[10] * e[7] + e[2] * e[1] * e[16];
            A(9, 3) = 0.5*ep2[14] * e[8] + 1.5*ep2[17] * e[8] + 0.5*e[8] * ep2[15] + 0.5*e[8] * ep2[16] - 0.5*e[8] * ep2[9] + 0.5*e[8] * ep2[11] - 0.5*e[8] * ep2[12] - 0.5*e[8] * ep2[10] - 0.5*e[8] * ep2[13] + e[14] * e[12] * e[6] + e[14] * e[3] * e[15] + e[14] * e[13] * e[7] + e[14] * e[4] * e[16] + e[14] * e[5] * e[17] + e[17] * e[15] * e[6] + e[17] * e[16] * e[7] + e[2] * e[11] * e[17] + e[2] * e[9] * e[15] + e[2] * e[10] * e[16] + e[5] * e[12] * e[15] + e[5] * e[13] * e[16] + e[11] * e[9] * e[6] + e[11] * e[0] * e[15] + e[11] * e[10] * e[7] + e[11] * e[1] * e[16] - e[17] * e[10] * e[1] - e[17] * e[13] * e[4] - e[17] * e[9] * e[0] - e[17] * e[12] * e[3];
            A(9, 4) = -0.5*e[26] * ep2[4] - 0.5*e[26] * ep2[0] + 0.5*e[26] * ep2[6] + 0.5*e[26] * ep2[5] - 0.5*e[26] * ep2[1] + 0.5*e[26] * ep2[7] - 0.5*e[26] * ep2[3] + 0.5*e[26] * ep2[2] + 1.5*e[26] * ep2[8] + e[20] * e[0] * e[6] + e[20] * e[2] * e[8] + e[5] * e[21] * e[6] + e[5] * e[3] * e[24] + e[5] * e[22] * e[7] + e[5] * e[4] * e[25] + e[5] * e[23] * e[8] + e[23] * e[4] * e[7] + e[23] * e[3] * e[6] + e[8] * e[24] * e[6] + e[8] * e[25] * e[7] + e[2] * e[18] * e[6] + e[2] * e[0] * e[24] + e[2] * e[19] * e[7] + e[2] * e[1] * e[25] - e[8] * e[21] * e[3] - e[8] * e[19] * e[1] - e[8] * e[22] * e[4] - e[8] * e[18] * e[0] + e[20] * e[1] * e[7];
            A(9, 5) = -0.5*e[35] * ep2[1] + 0.5*e[35] * ep2[7] - 0.5*e[35] * ep2[3] + 0.5*ep2[2] * e[35] + 1.5*e[35] * ep2[8] - 0.5*e[35] * ep2[4] - 0.5*e[35] * ep2[0] + 0.5*e[35] * ep2[6] + 0.5*e[35] * ep2[5] + e[2] * e[27] * e[6] + e[2] * e[0] * e[33] + e[2] * e[28] * e[7] + e[2] * e[1] * e[34] + e[2] * e[29] * e[8] - e[8] * e[27] * e[0] + e[8] * e[34] * e[7] + e[8] * e[32] * e[5] + e[8] * e[33] * e[6] - e[8] * e[30] * e[3] - e[8] * e[28] * e[1] - e[8] * e[31] * e[4] + e[29] * e[1] * e[7] + e[29] * e[0] * e[6] + e[5] * e[30] * e[6] + e[5] * e[3] * e[33] + e[5] * e[31] * e[7] + e[5] * e[4] * e[34] + e[32] * e[4] * e[7] + e[32] * e[3] * e[6];
            A(9, 6) = 0.5*ep2[14] * e[26] + 1.5*e[26] * ep2[17] + 0.5*e[26] * ep2[15] + 0.5*e[26] * ep2[16] + 0.5*ep2[11] * e[26] - 0.5*e[26] * ep2[9] - 0.5*e[26] * ep2[12] - 0.5*e[26] * ep2[10] - 0.5*e[26] * ep2[13] + e[20] * e[11] * e[17] + e[20] * e[9] * e[15] + e[20] * e[10] * e[16] + e[14] * e[21] * e[15] + e[14] * e[12] * e[24] + e[14] * e[23] * e[17] + e[14] * e[22] * e[16] + e[14] * e[13] * e[25] + e[23] * e[12] * e[15] + e[23] * e[13] * e[16] + e[17] * e[24] * e[15] + e[17] * e[25] * e[16] - e[17] * e[18] * e[9] - e[17] * e[21] * e[12] - e[17] * e[19] * e[10] - e[17] * e[22] * e[13] + e[11] * e[18] * e[15] + e[11] * e[9] * e[24] + e[11] * e[19] * e[16] + e[11] * e[10] * e[25];
            A(9, 7) = 0.5*ep2[11] * e[35] + 0.5*e[35] * ep2[16] - 0.5*e[35] * ep2[9] - 0.5*e[35] * ep2[12] + 0.5*e[35] * ep2[15] + 1.5*e[35] * ep2[17] - 0.5*e[35] * ep2[10] + 0.5*e[35] * ep2[14] - 0.5*e[35] * ep2[13] + e[11] * e[27] * e[15] + e[11] * e[9] * e[33] + e[11] * e[29] * e[17] + e[11] * e[28] * e[16] + e[11] * e[10] * e[34] + e[29] * e[9] * e[15] + e[29] * e[10] * e[16] + e[14] * e[30] * e[15] + e[14] * e[12] * e[33] + e[14] * e[32] * e[17] + e[14] * e[31] * e[16] + e[14] * e[13] * e[34] + e[32] * e[12] * e[15] + e[32] * e[13] * e[16] + e[17] * e[33] * e[15] + e[17] * e[34] * e[16] - e[17] * e[27] * e[9] - e[17] * e[30] * e[12] - e[17] * e[28] * e[10] - e[17] * e[31] * e[13];
            A(9, 8) = e[23] * e[3] * e[15] - e[17] * e[19] * e[1] - e[17] * e[22] * e[4] - e[17] * e[18] * e[0] + e[17] * e[25] * e[7] + e[17] * e[24] * e[6] + e[14] * e[21] * e[6] + e[14] * e[3] * e[24] + e[14] * e[22] * e[7] + e[14] * e[4] * e[25] + e[14] * e[23] * e[8] - e[26] * e[10] * e[1] - e[26] * e[13] * e[4] + e[26] * e[16] * e[7] + e[26] * e[15] * e[6] - e[26] * e[9] * e[0] - e[26] * e[12] * e[3] + e[23] * e[12] * e[6] + e[11] * e[18] * e[6] + e[11] * e[0] * e[24] + e[11] * e[19] * e[7] + e[11] * e[1] * e[25] + e[11] * e[20] * e[8] + e[11] * e[2] * e[26] + e[20] * e[9] * e[6] + e[20] * e[0] * e[15] + e[20] * e[10] * e[7] + e[20] * e[1] * e[16] + e[20] * e[2] * e[17] + e[5] * e[21] * e[15] + e[5] * e[12] * e[24] + e[5] * e[23] * e[17] + e[5] * e[14] * e[26] + e[5] * e[22] * e[16] + e[5] * e[13] * e[25] + e[8] * e[24] * e[15] + 3.*e[8] * e[26] * e[17] + e[8] * e[25] * e[16] + e[2] * e[18] * e[15] + e[2] * e[9] * e[24] + e[2] * e[19] * e[16] + e[2] * e[10] * e[25] - e[17] * e[21] * e[3] + e[23] * e[4] * e[16] + e[23] * e[13] * e[7] - e[8] * e[18] * e[9] - e[8] * e[21] * e[12] - e[8] * e[19] * e[10] - e[8] * e[22] * e[13];
            A(9, 9) = -e[35] * e[10] * e[1] - e[35] * e[13] * e[4] + e[35] * e[16] * e[7] + e[35] * e[15] * e[6] - e[35] * e[9] * e[0] - e[35] * e[12] * e[3] + e[32] * e[12] * e[6] + e[32] * e[3] * e[15] + e[32] * e[13] * e[7] + e[32] * e[4] * e[16] - e[8] * e[27] * e[9] - e[8] * e[30] * e[12] - e[8] * e[28] * e[10] - e[8] * e[31] * e[13] + e[8] * e[29] * e[11] + e[11] * e[27] * e[6] + e[11] * e[0] * e[33] + e[11] * e[28] * e[7] + e[11] * e[1] * e[34] + e[29] * e[9] * e[6] + e[29] * e[0] * e[15] + e[29] * e[10] * e[7] + e[29] * e[1] * e[16] + e[5] * e[30] * e[15] + e[5] * e[12] * e[33] + e[5] * e[32] * e[17] + e[5] * e[14] * e[35] + e[5] * e[31] * e[16] + e[5] * e[13] * e[34] + e[8] * e[33] * e[15] + 3.*e[8] * e[35] * e[17] + e[8] * e[34] * e[16] + e[2] * e[27] * e[15] + e[2] * e[9] * e[33] + e[2] * e[29] * e[17] + e[2] * e[11] * e[35] + e[2] * e[28] * e[16] + e[2] * e[10] * e[34] - e[17] * e[27] * e[0] + e[17] * e[34] * e[7] + e[17] * e[33] * e[6] - e[17] * e[30] * e[3] - e[17] * e[28] * e[1] - e[17] * e[31] * e[4] + e[14] * e[30] * e[6] + e[14] * e[3] * e[33] + e[14] * e[31] * e[7] + e[14] * e[4] * e[34] + e[14] * e[32] * e[8];
            A(9, 10) = 0.5*ep2[23] * e[8] + 1.5*ep2[26] * e[8] - 0.5*e[8] * ep2[18] - 0.5*e[8] * ep2[19] - 0.5*e[8] * ep2[22] + 0.5*e[8] * ep2[24] - 0.5*e[8] * ep2[21] + 0.5*e[8] * ep2[25] + 0.5*ep2[20] * e[8] + e[20] * e[18] * e[6] + e[20] * e[0] * e[24] + e[20] * e[19] * e[7] + e[20] * e[1] * e[25] + e[20] * e[2] * e[26] + e[23] * e[21] * e[6] + e[23] * e[3] * e[24] + e[23] * e[22] * e[7] + e[23] * e[4] * e[25] + e[23] * e[5] * e[26] - e[26] * e[21] * e[3] - e[26] * e[19] * e[1] - e[26] * e[22] * e[4] - e[26] * e[18] * e[0] + e[26] * e[25] * e[7] + e[26] * e[24] * e[6] + e[2] * e[19] * e[25] + e[2] * e[18] * e[24] + e[5] * e[22] * e[25] + e[5] * e[21] * e[24];
            A(9, 11) = e[23] * e[30] * e[6] + e[23] * e[3] * e[33] + e[23] * e[31] * e[7] + e[23] * e[4] * e[34] + e[32] * e[21] * e[6] + e[32] * e[3] * e[24] + e[32] * e[22] * e[7] + e[32] * e[4] * e[25] + e[26] * e[33] * e[6] + e[26] * e[34] * e[7] + 3.*e[26] * e[35] * e[8] + e[35] * e[24] * e[6] + e[35] * e[25] * e[7] + e[2] * e[27] * e[24] + e[2] * e[18] * e[33] + e[2] * e[28] * e[25] + e[2] * e[19] * e[34] + e[2] * e[29] * e[26] + e[2] * e[20] * e[35] + e[20] * e[27] * e[6] + e[20] * e[0] * e[33] + e[20] * e[28] * e[7] + e[20] * e[1] * e[34] + e[20] * e[29] * e[8] + e[29] * e[18] * e[6] + e[29] * e[0] * e[24] + e[29] * e[19] * e[7] + e[29] * e[1] * e[25] + e[5] * e[30] * e[24] + e[5] * e[21] * e[33] + e[5] * e[31] * e[25] + e[5] * e[22] * e[34] + e[5] * e[32] * e[26] + e[5] * e[23] * e[35] - e[8] * e[27] * e[18] + e[8] * e[33] * e[24] - e[8] * e[30] * e[21] - e[8] * e[31] * e[22] + e[8] * e[32] * e[23] - e[8] * e[28] * e[19] + e[8] * e[34] * e[25] - e[26] * e[27] * e[0] - e[26] * e[30] * e[3] - e[26] * e[28] * e[1] - e[26] * e[31] * e[4] - e[35] * e[21] * e[3] - e[35] * e[19] * e[1] - e[35] * e[22] * e[4] - e[35] * e[18] * e[0];
            A(9, 12) = 0.5*ep2[32] * e[8] - 0.5*e[8] * ep2[27] - 0.5*e[8] * ep2[28] + 0.5*e[8] * ep2[29] - 0.5*e[8] * ep2[31] + 0.5*e[8] * ep2[33] - 0.5*e[8] * ep2[30] + 0.5*e[8] * ep2[34] + 1.5*e[8] * ep2[35] + e[2] * e[27] * e[33] + e[2] * e[29] * e[35] + e[2] * e[28] * e[34] + e[5] * e[30] * e[33] + e[5] * e[32] * e[35] + e[5] * e[31] * e[34] + e[32] * e[30] * e[6] + e[32] * e[3] * e[33] + e[32] * e[31] * e[7] + e[32] * e[4] * e[34] + e[29] * e[27] * e[6] + e[29] * e[0] * e[33] + e[29] * e[28] * e[7] + e[29] * e[1] * e[34] + e[35] * e[33] * e[6] + e[35] * e[34] * e[7] - e[35] * e[27] * e[0] - e[35] * e[30] * e[3] - e[35] * e[28] * e[1] - e[35] * e[31] * e[4];
            A(9, 13) = 0.5*ep2[23] * e[17] + 1.5*ep2[26] * e[17] + 0.5*e[17] * ep2[25] + 0.5*e[17] * ep2[24] - 0.5*e[17] * ep2[18] - 0.5*e[17] * ep2[19] + 0.5*e[17] * ep2[20] - 0.5*e[17] * ep2[22] - 0.5*e[17] * ep2[21] + e[23] * e[21] * e[15] + e[23] * e[12] * e[24] + e[23] * e[14] * e[26] + e[23] * e[22] * e[16] + e[23] * e[13] * e[25] + e[26] * e[24] * e[15] + e[26] * e[25] * e[16] + e[11] * e[19] * e[25] + e[11] * e[18] * e[24] + e[11] * e[20] * e[26] + e[14] * e[22] * e[25] + e[14] * e[21] * e[24] + e[20] * e[18] * e[15] + e[20] * e[9] * e[24] + e[20] * e[19] * e[16] + e[20] * e[10] * e[25] - e[26] * e[18] * e[9] - e[26] * e[21] * e[12] - e[26] * e[19] * e[10] - e[26] * e[22] * e[13];
            A(9, 14) = e[32] * e[22] * e[16] + e[32] * e[13] * e[25] - e[17] * e[27] * e[18] + e[17] * e[33] * e[24] - e[17] * e[30] * e[21] + e[17] * e[29] * e[20] + 3.*e[17] * e[35] * e[26] - e[17] * e[31] * e[22] - e[17] * e[28] * e[19] + e[17] * e[34] * e[25] + e[20] * e[27] * e[15] + e[20] * e[9] * e[33] + e[20] * e[28] * e[16] + e[20] * e[10] * e[34] + e[29] * e[18] * e[15] + e[29] * e[9] * e[24] + e[29] * e[19] * e[16] + e[29] * e[10] * e[25] - e[26] * e[27] * e[9] - e[26] * e[30] * e[12] - e[26] * e[28] * e[10] - e[26] * e[31] * e[13] + e[26] * e[33] * e[15] + e[26] * e[34] * e[16] + e[35] * e[24] * e[15] + e[35] * e[25] * e[16] - e[35] * e[18] * e[9] - e[35] * e[21] * e[12] - e[35] * e[19] * e[10] - e[35] * e[22] * e[13] + e[14] * e[30] * e[24] + e[14] * e[21] * e[33] + e[14] * e[31] * e[25] + e[14] * e[22] * e[34] + e[14] * e[32] * e[26] + e[14] * e[23] * e[35] + e[11] * e[27] * e[24] + e[11] * e[18] * e[33] + e[11] * e[28] * e[25] + e[11] * e[19] * e[34] + e[11] * e[29] * e[26] + e[11] * e[20] * e[35] + e[23] * e[30] * e[15] + e[23] * e[12] * e[33] + e[23] * e[32] * e[17] + e[23] * e[31] * e[16] + e[23] * e[13] * e[34] + e[32] * e[21] * e[15] + e[32] * e[12] * e[24];
            A(9, 15) = -0.5*e[17] * ep2[27] + 0.5*e[17] * ep2[32] - 0.5*e[17] * ep2[28] + 0.5*e[17] * ep2[29] - 0.5*e[17] * ep2[31] + 0.5*e[17] * ep2[33] - 0.5*e[17] * ep2[30] + 0.5*e[17] * ep2[34] + 1.5*e[17] * ep2[35] + e[32] * e[30] * e[15] + e[32] * e[12] * e[33] + e[32] * e[31] * e[16] + e[32] * e[13] * e[34] + e[14] * e[30] * e[33] + e[14] * e[31] * e[34] + e[11] * e[27] * e[33] + e[11] * e[29] * e[35] + e[11] * e[28] * e[34] + e[35] * e[33] * e[15] + e[35] * e[34] * e[16] + e[29] * e[27] * e[15] + e[29] * e[9] * e[33] + e[29] * e[28] * e[16] + e[29] * e[10] * e[34] - e[35] * e[27] * e[9] - e[35] * e[30] * e[12] - e[35] * e[28] * e[10] - e[35] * e[31] * e[13] + e[35] * e[32] * e[14];
            A(9, 16) = 0.5*ep2[23] * e[26] + 0.5*e[26] * ep2[25] + 0.5*ep2[20] * e[26] - 0.5*e[26] * ep2[18] + 0.5*ep3[26] + 0.5*e[26] * ep2[24] + e[20] * e[19] * e[25] - 0.5*e[26] * ep2[19] - 0.5*e[26] * ep2[21] + e[20] * e[18] * e[24] - 0.5*e[26] * ep2[22] + e[23] * e[21] * e[24] + e[23] * e[22] * e[25];
            A(9, 17) = 0.5*ep2[20] * e[35] + 0.5*ep2[23] * e[35] + 1.5*e[35] * ep2[26] + 0.5*e[35] * ep2[25] + 0.5*e[35] * ep2[24] - 0.5*e[35] * ep2[18] - 0.5*e[35] * ep2[19] - 0.5*e[35] * ep2[22] - 0.5*e[35] * ep2[21] + e[20] * e[27] * e[24] + e[20] * e[18] * e[33] + e[20] * e[28] * e[25] + e[20] * e[19] * e[34] + e[20] * e[29] * e[26] + e[29] * e[19] * e[25] + e[29] * e[18] * e[24] + e[23] * e[30] * e[24] + e[23] * e[21] * e[33] + e[23] * e[31] * e[25] + e[23] * e[22] * e[34] + e[23] * e[32] * e[26] + e[32] * e[22] * e[25] + e[32] * e[21] * e[24] + e[26] * e[33] * e[24] + e[26] * e[34] * e[25] - e[26] * e[27] * e[18] - e[26] * e[30] * e[21] - e[26] * e[31] * e[22] - e[26] * e[28] * e[19];
            A(9, 18) = 0.5*ep2[29] * e[26] + 0.5*ep2[32] * e[26] + 0.5*e[26] * ep2[33] + 1.5*e[26] * ep2[35] + 0.5*e[26] * ep2[34] - 0.5*e[26] * ep2[27] - 0.5*e[26] * ep2[28] - 0.5*e[26] * ep2[31] - 0.5*e[26] * ep2[30] + e[20] * e[27] * e[33] + e[20] * e[29] * e[35] + e[20] * e[28] * e[34] + e[29] * e[27] * e[24] + e[29] * e[18] * e[33] + e[29] * e[28] * e[25] + e[29] * e[19] * e[34] + e[23] * e[30] * e[33] + e[23] * e[32] * e[35] + e[23] * e[31] * e[34] + e[32] * e[30] * e[24] + e[32] * e[21] * e[33] + e[32] * e[31] * e[25] + e[32] * e[22] * e[34] + e[35] * e[33] * e[24] + e[35] * e[34] * e[25] - e[35] * e[27] * e[18] - e[35] * e[30] * e[21] - e[35] * e[31] * e[22] - e[35] * e[28] * e[19];
            A(9, 19) = 0.5*e[35] * ep2[33] + 0.5*e[35] * ep2[34] - 0.5*e[35] * ep2[27] - 0.5*e[35] * ep2[28] - 0.5*e[35] * ep2[31] - 0.5*e[35] * ep2[30] + e[32] * e[31] * e[34] + 0.5*ep2[29] * e[35] + 0.5*ep2[32] * e[35] + e[29] * e[28] * e[34] + e[32] * e[30] * e[33] + 0.5*ep3[35] + e[29] * e[27] * e[33];

        }

        A = invMat(A.col(0, 10)) * A.col(10, 20);

        Mat B(3, 13);
        for (int r = 0; r < 3; r++) {
            const Mat a0 = A.row(r * 2 + 4);
            const Mat a1 = A.row(r * 2 + 5);

            B(r, 0) = -a1[0];
            B(r, 1) = +a0[0] - a1[1];
            B(r, 2) = +a0[1] - a1[2];
            B(r, 3) = +a0[2];
            B(r, 4) = -a1[3];
            B(r, 5) = +a0[3] - a1[4];
            B(r, 6) = +a0[4] - a1[5];
            B(r, 7) = +a0[5];
            B(r, 8) = -a1[6];
            B(r, 9) = +a0[6] - a1[7];
            B(r, 10) = +a0[7] - a1[8];
            B(r, 11) = +a0[8] - a1[9];
            B(r, 12) = +a0[9];
        }

        Mem1<double> coeffs(11);
        {
            const double *b = B.ptr;
            coeffs[0] = (b[0] * b[17] * b[34] + b[26] * b[4] * b[21] - b[26] * b[17] * b[8] - b[13] * b[4] * b[34] - b[0] * b[21] * b[30] + b[13] * b[30] * b[8]);
            coeffs[1] = (b[26] * b[4] * b[22] + b[14] * b[30] * b[8] + b[13] * b[31] * b[8] + b[1] * b[17] * b[34] - b[13] * b[5] * b[34] + b[26] * b[5] * b[21] - b[0] * b[21] * b[31] - b[26] * b[17] * b[9] - b[1] * b[21] * b[30] + b[27] * b[4] * b[21] + b[0] * b[17] * b[35] - b[0] * b[22] * b[30] + b[13] * b[30] * b[9] + b[0] * b[18] * b[34] - b[27] * b[17] * b[8] - b[14] * b[4] * b[34] - b[13] * b[4] * b[35] - b[26] * b[18] * b[8]);
            coeffs[2] = (b[14] * b[30] * b[9] + b[14] * b[31] * b[8] + b[13] * b[31] * b[9] - b[13] * b[4] * b[36] - b[13] * b[5] * b[35] + b[15] * b[30] * b[8] - b[13] * b[6] * b[34] + b[13] * b[30] * b[10] + b[13] * b[32] * b[8] - b[14] * b[4] * b[35] - b[14] * b[5] * b[34] + b[26] * b[4] * b[23] + b[26] * b[5] * b[22] + b[26] * b[6] * b[21] - b[26] * b[17] * b[10] - b[15] * b[4] * b[34] - b[26] * b[18] * b[9] - b[26] * b[19] * b[8] + b[27] * b[4] * b[22] + b[27] * b[5] * b[21] - b[27] * b[17] * b[9] - b[27] * b[18] * b[8] - b[1] * b[21] * b[31] - b[0] * b[23] * b[30] - b[0] * b[21] * b[32] + b[28] * b[4] * b[21] - b[28] * b[17] * b[8] + b[2] * b[17] * b[34] + b[0] * b[18] * b[35] - b[0] * b[22] * b[31] + b[0] * b[17] * b[36] + b[0] * b[19] * b[34] - b[1] * b[22] * b[30] + b[1] * b[18] * b[34] + b[1] * b[17] * b[35] - b[2] * b[21] * b[30]);
            coeffs[3] = (b[14] * b[30] * b[10] + b[14] * b[32] * b[8] - b[3] * b[21] * b[30] + b[3] * b[17] * b[34] + b[13] * b[32] * b[9] + b[13] * b[33] * b[8] - b[13] * b[4] * b[37] - b[13] * b[5] * b[36] + b[15] * b[30] * b[9] + b[15] * b[31] * b[8] - b[16] * b[4] * b[34] - b[13] * b[6] * b[35] - b[13] * b[7] * b[34] + b[13] * b[30] * b[11] + b[13] * b[31] * b[10] + b[14] * b[31] * b[9] - b[14] * b[4] * b[36] - b[14] * b[5] * b[35] - b[14] * b[6] * b[34] + b[16] * b[30] * b[8] - b[26] * b[20] * b[8] + b[26] * b[4] * b[24] + b[26] * b[5] * b[23] + b[26] * b[6] * b[22] + b[26] * b[7] * b[21] - b[26] * b[17] * b[11] - b[15] * b[4] * b[35] - b[15] * b[5] * b[34] - b[26] * b[18] * b[10] - b[26] * b[19] * b[9] + b[27] * b[4] * b[23] + b[27] * b[5] * b[22] + b[27] * b[6] * b[21] - b[27] * b[17] * b[10] - b[27] * b[18] * b[9] - b[27] * b[19] * b[8] + b[0] * b[17] * b[37] - b[0] * b[23] * b[31] - b[0] * b[24] * b[30] - b[0] * b[21] * b[33] - b[29] * b[17] * b[8] + b[28] * b[4] * b[22] + b[28] * b[5] * b[21] - b[28] * b[17] * b[9] - b[28] * b[18] * b[8] + b[29] * b[4] * b[21] + b[1] * b[19] * b[34] - b[2] * b[21] * b[31] + b[0] * b[20] * b[34] + b[0] * b[19] * b[35] + b[0] * b[18] * b[36] - b[0] * b[22] * b[32] - b[1] * b[23] * b[30] - b[1] * b[21] * b[32] + b[1] * b[18] * b[35] - b[1] * b[22] * b[31] - b[2] * b[22] * b[30] + b[2] * b[17] * b[35] + b[1] * b[17] * b[36] + b[2] * b[18] * b[34]);
            coeffs[4] = (-b[14] * b[6] * b[35] - b[14] * b[7] * b[34] - b[3] * b[22] * b[30] - b[3] * b[21] * b[31] + b[3] * b[17] * b[35] + b[3] * b[18] * b[34] + b[13] * b[32] * b[10] + b[13] * b[33] * b[9] - b[13] * b[4] * b[38] - b[13] * b[5] * b[37] - b[15] * b[6] * b[34] + b[15] * b[30] * b[10] + b[15] * b[32] * b[8] - b[16] * b[4] * b[35] - b[13] * b[6] * b[36] - b[13] * b[7] * b[35] + b[13] * b[31] * b[11] + b[13] * b[30] * b[12] + b[14] * b[32] * b[9] + b[14] * b[33] * b[8] - b[14] * b[4] * b[37] - b[14] * b[5] * b[36] + b[16] * b[30] * b[9] + b[16] * b[31] * b[8] - b[26] * b[20] * b[9] + b[26] * b[4] * b[25] + b[26] * b[5] * b[24] + b[26] * b[6] * b[23] + b[26] * b[7] * b[22] - b[26] * b[17] * b[12] + b[14] * b[30] * b[11] + b[14] * b[31] * b[10] + b[15] * b[31] * b[9] - b[15] * b[4] * b[36] - b[15] * b[5] * b[35] - b[26] * b[18] * b[11] - b[26] * b[19] * b[10] - b[27] * b[20] * b[8] + b[27] * b[4] * b[24] + b[27] * b[5] * b[23] + b[27] * b[6] * b[22] + b[27] * b[7] * b[21] - b[27] * b[17] * b[11] - b[27] * b[18] * b[10] - b[27] * b[19] * b[9] - b[16] * b[5] * b[34] - b[29] * b[17] * b[9] - b[29] * b[18] * b[8] + b[28] * b[4] * b[23] + b[28] * b[5] * b[22] + b[28] * b[6] * b[21] - b[28] * b[17] * b[10] - b[28] * b[18] * b[9] - b[28] * b[19] * b[8] + b[29] * b[4] * b[22] + b[29] * b[5] * b[21] - b[2] * b[23] * b[30] + b[2] * b[18] * b[35] - b[1] * b[22] * b[32] - b[2] * b[21] * b[32] + b[2] * b[19] * b[34] + b[0] * b[19] * b[36] - b[0] * b[22] * b[33] + b[0] * b[20] * b[35] - b[0] * b[23] * b[32] - b[0] * b[25] * b[30] + b[0] * b[17] * b[38] + b[0] * b[18] * b[37] - b[0] * b[24] * b[31] + b[1] * b[17] * b[37] - b[1] * b[23] * b[31] - b[1] * b[24] * b[30] - b[1] * b[21] * b[33] + b[1] * b[20] * b[34] + b[1] * b[19] * b[35] + b[1] * b[18] * b[36] + b[2] * b[17] * b[36] - b[2] * b[22] * b[31]);
            coeffs[5] = (-b[14] * b[6] * b[36] - b[14] * b[7] * b[35] + b[14] * b[31] * b[11] - b[3] * b[23] * b[30] - b[3] * b[21] * b[32] + b[3] * b[18] * b[35] - b[3] * b[22] * b[31] + b[3] * b[17] * b[36] + b[3] * b[19] * b[34] + b[13] * b[32] * b[11] + b[13] * b[33] * b[10] - b[13] * b[5] * b[38] - b[15] * b[6] * b[35] - b[15] * b[7] * b[34] + b[15] * b[30] * b[11] + b[15] * b[31] * b[10] + b[16] * b[31] * b[9] - b[13] * b[6] * b[37] - b[13] * b[7] * b[36] + b[13] * b[31] * b[12] + b[14] * b[32] * b[10] + b[14] * b[33] * b[9] - b[14] * b[4] * b[38] - b[14] * b[5] * b[37] - b[16] * b[6] * b[34] + b[16] * b[30] * b[10] + b[16] * b[32] * b[8] - b[26] * b[20] * b[10] + b[26] * b[5] * b[25] + b[26] * b[6] * b[24] + b[26] * b[7] * b[23] + b[14] * b[30] * b[12] + b[15] * b[32] * b[9] + b[15] * b[33] * b[8] - b[15] * b[4] * b[37] - b[15] * b[5] * b[36] + b[29] * b[5] * b[22] + b[29] * b[6] * b[21] - b[26] * b[18] * b[12] - b[26] * b[19] * b[11] - b[27] * b[20] * b[9] + b[27] * b[4] * b[25] + b[27] * b[5] * b[24] + b[27] * b[6] * b[23] + b[27] * b[7] * b[22] - b[27] * b[17] * b[12] - b[27] * b[18] * b[11] - b[27] * b[19] * b[10] - b[28] * b[20] * b[8] - b[16] * b[4] * b[36] - b[16] * b[5] * b[35] - b[29] * b[17] * b[10] - b[29] * b[18] * b[9] - b[29] * b[19] * b[8] + b[28] * b[4] * b[24] + b[28] * b[5] * b[23] + b[28] * b[6] * b[22] + b[28] * b[7] * b[21] - b[28] * b[17] * b[11] - b[28] * b[18] * b[10] - b[28] * b[19] * b[9] + b[29] * b[4] * b[23] - b[2] * b[22] * b[32] - b[2] * b[21] * b[33] - b[1] * b[24] * b[31] + b[0] * b[18] * b[38] - b[0] * b[24] * b[32] + b[0] * b[19] * b[37] + b[0] * b[20] * b[36] - b[0] * b[25] * b[31] - b[0] * b[23] * b[33] + b[1] * b[19] * b[36] - b[1] * b[22] * b[33] + b[1] * b[20] * b[35] + b[2] * b[19] * b[35] - b[2] * b[24] * b[30] - b[2] * b[23] * b[31] + b[2] * b[20] * b[34] + b[2] * b[17] * b[37] - b[1] * b[25] * b[30] + b[1] * b[18] * b[37] + b[1] * b[17] * b[38] - b[1] * b[23] * b[32] + b[2] * b[18] * b[36]);
            coeffs[6] = (-b[14] * b[6] * b[37] - b[14] * b[7] * b[36] + b[14] * b[31] * b[12] + b[3] * b[17] * b[37] - b[3] * b[23] * b[31] - b[3] * b[24] * b[30] - b[3] * b[21] * b[33] + b[3] * b[20] * b[34] + b[3] * b[19] * b[35] + b[3] * b[18] * b[36] - b[3] * b[22] * b[32] + b[13] * b[32] * b[12] + b[13] * b[33] * b[11] - b[15] * b[6] * b[36] - b[15] * b[7] * b[35] + b[15] * b[31] * b[11] + b[15] * b[30] * b[12] + b[16] * b[32] * b[9] + b[16] * b[33] * b[8] - b[13] * b[6] * b[38] - b[13] * b[7] * b[37] + b[14] * b[32] * b[11] + b[14] * b[33] * b[10] - b[14] * b[5] * b[38] - b[16] * b[6] * b[35] - b[16] * b[7] * b[34] + b[16] * b[30] * b[11] + b[16] * b[31] * b[10] - b[26] * b[19] * b[12] - b[26] * b[20] * b[11] + b[26] * b[6] * b[25] + b[26] * b[7] * b[24] + b[15] * b[32] * b[10] + b[15] * b[33] * b[9] - b[15] * b[4] * b[38] - b[15] * b[5] * b[37] + b[29] * b[5] * b[23] + b[29] * b[6] * b[22] + b[29] * b[7] * b[21] - b[27] * b[20] * b[10] + b[27] * b[5] * b[25] + b[27] * b[6] * b[24] + b[27] * b[7] * b[23] - b[27] * b[18] * b[12] - b[27] * b[19] * b[11] - b[28] * b[20] * b[9] - b[16] * b[4] * b[37] - b[16] * b[5] * b[36] + b[0] * b[19] * b[38] - b[0] * b[24] * b[33] + b[0] * b[20] * b[37] - b[29] * b[17] * b[11] - b[29] * b[18] * b[10] - b[29] * b[19] * b[9] + b[28] * b[4] * b[25] + b[28] * b[5] * b[24] + b[28] * b[6] * b[23] + b[28] * b[7] * b[22] - b[28] * b[17] * b[12] - b[28] * b[18] * b[11] - b[28] * b[19] * b[10] - b[29] * b[20] * b[8] + b[29] * b[4] * b[24] + b[2] * b[18] * b[37] - b[0] * b[25] * b[32] + b[1] * b[18] * b[38] - b[1] * b[24] * b[32] + b[1] * b[19] * b[37] + b[1] * b[20] * b[36] - b[1] * b[25] * b[31] + b[2] * b[17] * b[38] + b[2] * b[19] * b[36] - b[2] * b[24] * b[31] - b[2] * b[22] * b[33] - b[2] * b[23] * b[32] + b[2] * b[20] * b[35] - b[1] * b[23] * b[33] - b[2] * b[25] * b[30]);
            coeffs[7] = (-b[14] * b[6] * b[38] - b[14] * b[7] * b[37] + b[3] * b[19] * b[36] - b[3] * b[22] * b[33] + b[3] * b[20] * b[35] - b[3] * b[23] * b[32] - b[3] * b[25] * b[30] + b[3] * b[17] * b[38] + b[3] * b[18] * b[37] - b[3] * b[24] * b[31] - b[15] * b[6] * b[37] - b[15] * b[7] * b[36] + b[15] * b[31] * b[12] + b[16] * b[32] * b[10] + b[16] * b[33] * b[9] + b[13] * b[33] * b[12] - b[13] * b[7] * b[38] + b[14] * b[32] * b[12] + b[14] * b[33] * b[11] - b[16] * b[6] * b[36] - b[16] * b[7] * b[35] + b[16] * b[31] * b[11] + b[16] * b[30] * b[12] + b[15] * b[32] * b[11] + b[15] * b[33] * b[10] - b[15] * b[5] * b[38] + b[29] * b[5] * b[24] + b[29] * b[6] * b[23] - b[26] * b[20] * b[12] + b[26] * b[7] * b[25] - b[27] * b[19] * b[12] - b[27] * b[20] * b[11] + b[27] * b[6] * b[25] + b[27] * b[7] * b[24] - b[28] * b[20] * b[10] - b[16] * b[4] * b[38] - b[16] * b[5] * b[37] + b[29] * b[7] * b[22] - b[29] * b[17] * b[12] - b[29] * b[18] * b[11] - b[29] * b[19] * b[10] + b[28] * b[5] * b[25] + b[28] * b[6] * b[24] + b[28] * b[7] * b[23] - b[28] * b[18] * b[12] - b[28] * b[19] * b[11] - b[29] * b[20] * b[9] + b[29] * b[4] * b[25] - b[2] * b[24] * b[32] + b[0] * b[20] * b[38] - b[0] * b[25] * b[33] + b[1] * b[19] * b[38] - b[1] * b[24] * b[33] + b[1] * b[20] * b[37] - b[2] * b[25] * b[31] + b[2] * b[20] * b[36] - b[1] * b[25] * b[32] + b[2] * b[19] * b[37] + b[2] * b[18] * b[38] - b[2] * b[23] * b[33]);
            coeffs[8] = (b[3] * b[18] * b[38] - b[3] * b[24] * b[32] + b[3] * b[19] * b[37] + b[3] * b[20] * b[36] - b[3] * b[25] * b[31] - b[3] * b[23] * b[33] - b[15] * b[6] * b[38] - b[15] * b[7] * b[37] + b[16] * b[32] * b[11] + b[16] * b[33] * b[10] - b[16] * b[5] * b[38] - b[16] * b[6] * b[37] - b[16] * b[7] * b[36] + b[16] * b[31] * b[12] + b[14] * b[33] * b[12] - b[14] * b[7] * b[38] + b[15] * b[32] * b[12] + b[15] * b[33] * b[11] + b[29] * b[5] * b[25] + b[29] * b[6] * b[24] - b[27] * b[20] * b[12] + b[27] * b[7] * b[25] - b[28] * b[19] * b[12] - b[28] * b[20] * b[11] + b[29] * b[7] * b[23] - b[29] * b[18] * b[12] - b[29] * b[19] * b[11] + b[28] * b[6] * b[25] + b[28] * b[7] * b[24] - b[29] * b[20] * b[10] + b[2] * b[19] * b[38] - b[1] * b[25] * b[33] + b[2] * b[20] * b[37] - b[2] * b[24] * b[33] - b[2] * b[25] * b[32] + b[1] * b[20] * b[38]);
            coeffs[9] = (b[29] * b[7] * b[24] - b[29] * b[20] * b[11] + b[2] * b[20] * b[38] - b[2] * b[25] * b[33] - b[28] * b[20] * b[12] + b[28] * b[7] * b[25] - b[29] * b[19] * b[12] - b[3] * b[24] * b[33] + b[15] * b[33] * b[12] + b[3] * b[19] * b[38] - b[16] * b[6] * b[38] + b[3] * b[20] * b[37] + b[16] * b[32] * b[12] + b[29] * b[6] * b[25] - b[16] * b[7] * b[37] - b[3] * b[25] * b[32] - b[15] * b[7] * b[38] + b[16] * b[33] * b[11]);
            coeffs[10] = -b[29] * b[20] * b[12] + b[29] * b[7] * b[25] + b[16] * b[33] * b[12] - b[16] * b[7] * b[38] + b[3] * b[20] * b[38] - b[3] * b[25] * b[33];
        }

        Mem1<Cmp> roots;
        eqn(roots, coeffs);

        double minv = SP_INFINITY;
        for (int i = 0; i < roots.size(); i++) {
            minv = minVal(minv, fabs(roots[i].im));
        }

        Es.clear();
        for (int i = 0; i < roots.size(); i++) {
            if (fabs(roots[i].im) > 0.1) continue;

            const double z = roots[i].re;
            const double z2 = pow(z, 2);
            const double z3 = pow(z, 3);
            const double z4 = pow(z, 4);

            Mat Bz(3, 3);
            for (int r = 0; r < 3; r++) {
                const double *b = &B(r, 0);
                Bz(r, 0) = b[0] * z3 + b[1] * z2 + b[2] * z + b[3];
                Bz(r, 1) = b[4] * z3 + b[5] * z2 + b[6] * z + b[7];
                Bz(r, 2) = b[8] * z4 + b[9] * z3 + b[10] * z2 + b[11] * z + b[12];
            }

            Mat U, S, V;
            if (svdMat(U, S, V, Bz) == false) return false;

            const Mat m = V.col(0);

            if (fabs(m[2]) < SP_SMALL) continue;
            const double x = m[0] / m[2];
            const double y = m[1] / m[2];

            const Mat vec = X * x + Y * y + Z * z + W;

            Mat test = Mat(3, 3, vec.ptr);
            test /= normMat(test);


            Es.push(test);
        }

        return (Es.size() > 0) ? true : false;
    }
  
    // calc essential matrix
    SP_CPUFUNC bool calcEMat5p(Mat &E, const Mem1<Vec2> &npxs0, const Mem1<Vec2> &npxs1) {
        SP_ASSERT(npxs0.size() == npxs1.size());

        Mem1<Mat> Es;
        if (calcEMat5p(Es, npxs0, npxs1) == false) return false;

        double maxv = SP_INFINITY;
        for (int i = 0; i < Es.size(); i++) {
            const Mem1<double> errs = errMatType2(Es[i], npxs0, npxs1);
            const double sum = sumVal(errs);

            if (sum < maxv) {
                maxv = sum;
                E = Es[i];
            }
        }

        return true;
    }

    // calc essential matrix using 8 points algorithm
    SP_CPUFUNC bool calcEMat8p(Mat &E, const Mem1<Vec2> &npxs0, const Mem1<Vec2> &npxs1, const int maxit = 1) {
        SP_ASSERT(npxs0.size() == npxs1.size());

        const int unit = 8;
        if (npxs0.size() < unit) return false;

        const int num = npxs0.size();

        Mat T0, T1;
        Mem1<Vec2> data0, data1;
        if (normalize(T0, data0, npxs0) == false) return false;
        if (normalize(T1, data1, npxs1) == false) return false;

        Mat A(num, 9);
        for (int i = 0; i < num; i++) {
            jacobFMat(&A(i, 0), data0[i], data1[i]);
        }

        Mem1<double> errs;
        for (int it = 0; it < maxit; it++) {
            if (E.rows() == 3 && E.cols() == 3) {
                errs = errMatType2(E, npxs0, npxs1);
            }

            Mat result;
            if (solveEqZero(result, A, errs) == false) return false;

            const Mat M = Mat(3, 3, result.ptr);

            Mat U, S, V;
            if (svdMat(U, S, V, M, false) == false) return false;

            const double div = pythag(S(0, 0), S(1, 1));
            if (div < SP_SMALL) return false;

            S(0, 0) /= div;
            S(1, 1) /= div;
            S(2, 2) = 0.0;

            E = U * S * trnMat(V);
            E = trnMat(T1) * E * T0;
        }
        E /= normMat(E);

        return true;
    }

    // calc essential matrix
    SP_CPUFUNC bool calcEMat(Mat &E, const Mem1<Vec2> &npxs0, const Mem1<Vec2> &npxs1, const int maxit = 1) {
        SP_ASSERT(npxs0.size() == npxs1.size());

        const int num = npxs0.size();

        bool ret = false;
        if (num < 8) {
            ret = calcEMat5p(E, npxs0, npxs1);
        }
        else {
            ret = calcEMat8p(E, npxs0, npxs1, maxit);
        }
        return ret;
    }
    

    //--------------------------------------------------------------------------------
    // fundamental matrix
    //--------------------------------------------------------------------------------
    
    SP_CPUFUNC double errFMat(const Mat &F, const Vec2 &vec0, const Vec2 &vec1) {
        return errMatType2(F, vec0, vec1);
    }

    SP_CPUFUNC Mem1<double> errFMat(const Mat &F, const Mem1<Vec2> &vecs0, const Mem1<Vec2> &vecs1) {
        return errMatType2(F, vecs0, vecs1);
    }

    // calc fundamental matrix using 8 points algorithm
    SP_CPUFUNC bool calcFMat8p(Mat &F, const Mem1<Vec2> &pixs0, const Mem1<Vec2> &pixs1, const int maxit = 1) {
        SP_ASSERT(pixs0.size() == pixs1.size());
     
        if (calcEMat8p(F, pixs0, pixs1, maxit) == false) return false;

        return true;
    }

    // calc fundamental matrix
    SP_CPUFUNC bool calcFMat(Mat &F, const Mem1<Vec2> &pixs0, const Mem1<Vec2> &pixs1, const int maxit = 1) {
        SP_ASSERT(pixs0.size() == pixs1.size());
       
        if (calcFMat8p(F, pixs0, pixs1, maxit) == false) return false;
        
        return true;
    }


    //--------------------------------------------------------------------------------
    // RANSAC + refine
    //--------------------------------------------------------------------------------

    SP_CPUFUNC bool calcHMatRANSAC(Mat &H, const Mem<Vec2> &pixs, const Mem<Vec2> &objs, const double thresh = 5.0) {
        SP_ASSERT(pixs.size() == objs.size());

        const int num = pixs.size();
        const int unit = 4;

        if (num < unit) return false;
        if (num < unit * SP_RANSAC_MINRATE) {
            return calcHMat(H, pixs, objs);
        }

        srand(0);
        int maxit = adaptiveStop(SP_RANSAC_MINEVAL, unit);

        Mem1<Vec2> spixs, rpixs;
        Mem1<Vec2> sobjs, robjs;

        double maxe = 0.0;
        for (int it = 0; it < maxit; it++) {
            const int p = it % (pixs.size() - unit);
            if (p == 0) {
                spixs = shuffle(pixs, it);
                sobjs = shuffle(objs, it);
            }
            rpixs.resize(unit, &spixs[p]);
            robjs.resize(unit, &sobjs[p]);

            Mat test;
            if (calcHMat(test, rpixs, robjs, 1) == false) continue;

            const Mem1<double> errs = errHMat(test, pixs, objs);
            const double eval = evalErr(errs, thresh);

            if (eval > maxe) {
                //SP_PRINTD("eval %lf\n", eval);
                maxe = eval;
                maxit = adaptiveStop(eval, unit);

                H = test;
            }
        }
        //SP_PRINTD("RANSAC iteration %d rate %.2lf\n", it, maxe);
        if (maxe < SP_RANSAC_MINEVAL || maxe * num < unit * SP_RANSAC_MINRATE) return false;

        // refine
        const Mem1<double> errs = errHMat(H, pixs, objs);
        const Mem1<Vec2> dpixs = denoise(pixs, errs, thresh);
        const Mem1<Vec2> dobjs = denoise(objs, errs, thresh);

        return calcHMat(H, dpixs, dobjs, 10);
    }

    // calc essential matrix
    SP_CPUFUNC bool calcEMatRANSAC(Mat &E, const Mem1<Vec2> &npxs0, const Mem1<Vec2> &npxs1, const double thresh = 5.0 * 1.0e-3) {
        SP_ASSERT(npxs0.size() == npxs1.size());

        const int num = npxs0.size();
        const int unit = 5;

        if (num < unit) return false;
        if (num < unit * SP_RANSAC_MINRATE) {
            return calcEMat(E, npxs0, npxs1);
        }

        const int tnum = 20;
        int maxit = adaptiveStop(SP_RANSAC_MINEVAL, unit);

        Mem1<Vec2> snpxs0, rnpxs0;
        Mem1<Vec2> snpxs1, rnpxs1;

        double maxe = 0.0;
        int it = 0;
        for (it = 0; it < maxit; it++) {
            const int p = it % (num - unit);
            if (p == 0) {
                snpxs0 = shuffle(npxs0, it);
                snpxs1 = shuffle(npxs1, it);
            }
            rnpxs0.resize(unit, &snpxs0[p]);
            rnpxs1.resize(unit, &snpxs1[p]);

            Mem1<Mat> tests;
            if (calcEMat5p(tests, rnpxs0, rnpxs1) == false) continue;

            for (int i = 0; i < tests.size(); i++) {
                const Mem1<double> errs = errMatType2(tests[i], npxs0, npxs1);
                const double eval = evalErr(errs, thresh);

                if (eval > maxe) {
                    //SP_PRINTD("eval %lf\n", eval);
                    maxe = eval;
                    maxit = minVal(maxit, adaptiveStop(eval, unit));

                    E = tests[i];
                }
            }
        }
        //SP_PRINTD("RANSAC iteration %d num %d rate %.2lf\n", it, num, maxe);
        if (maxe < SP_RANSAC_MINEVAL || maxe * num < unit * SP_RANSAC_MINRATE) return false;

        // refine
        {
            const Mem1<double> errs = errMatType2(E, npxs0, npxs1);
            const Mem1<Vec2> dnpxs0 = denoise(npxs0, errs, thresh);
            const Mem1<Vec2> dnpxs1 = denoise(npxs1, errs, thresh);

            if (calcEMat(E, dnpxs0, dnpxs1, 10) == false) return false;
        }

        return true;
    }

    // calc fundamental matrix
    SP_CPUFUNC bool calcFMatRANSAC(Mat &F, const Mem1<Vec2> &pixs0, const Mem1<Vec2> &pixs1, const double thresh = 5.0){
        SP_ASSERT(pixs0.size() == pixs1.size());

        const int num = pixs0.size();
        const int unit = 8;

        if (num < unit) return false;
        if (num < unit * SP_RANSAC_MINRATE) {
            return calcFMat(F, pixs0, pixs1);
        }

        const int tnum = 20;
        int maxit = adaptiveStop(SP_RANSAC_MINEVAL, unit);

        Mem1<Vec2> spixs0, rpixs0;
        Mem1<Vec2> spixs1, rpixs1;

        double maxe = 0.0;
        int it = 0;
        for (it = 0; it < maxit; it++) {
            const int p = it % (num - unit);
            if (p == 0) {
                spixs0 = shuffle(pixs0, it);
                spixs1 = shuffle(pixs1, it);
            }
            rpixs0.resize(unit, &spixs0[p]);
            rpixs1.resize(unit, &spixs1[p]);

            Mem1<Mat> tests;
            if (calcEMat5p(tests, rpixs0, rpixs1) == false) continue;

            for (int i = 0; i < tests.size(); i++) {
                const Mem1<double> errs = errMatType2(tests[i], pixs0, pixs1);
                const double eval = evalErr(errs, thresh);

                if (eval > maxe) {
                    //SP_PRINTD("eval %lf\n", eval);
                    maxe = eval;
                    maxit = minVal(maxit, adaptiveStop(eval, unit));

                    F = tests[i];
                }
            }
        }
        //SP_PRINTD("RANSAC iteration %d num %d rate %.2lf\n", it, num, maxe);
        if (maxe < SP_RANSAC_MINEVAL || maxe * num < unit * SP_RANSAC_MINRATE) return false;

        // refine
        {
            const Mem1<double> errs = errMatType2(F, pixs0, pixs1);
            const Mem1<Vec2> dpixs0 = denoise(pixs0, errs, thresh);
            const Mem1<Vec2> dpixs1 = denoise(pixs1, errs, thresh);

            if (calcFMat(F, dpixs0, dpixs1, 10) == false) return false;
        }

        return true;
    }

}
#endif